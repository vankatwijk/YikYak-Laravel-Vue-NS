/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package org.nativescript.playvue;

public final class R {
  public static final class anim {
    public static final int abc_fade_in=0x7f010000;
    public static final int abc_fade_out=0x7f010001;
    public static final int abc_grow_fade_in_from_bottom=0x7f010002;
    public static final int abc_popup_enter=0x7f010003;
    public static final int abc_popup_exit=0x7f010004;
    public static final int abc_shrink_fade_out_from_bottom=0x7f010005;
    public static final int abc_slide_in_bottom=0x7f010006;
    public static final int abc_slide_in_top=0x7f010007;
    public static final int abc_slide_out_bottom=0x7f010008;
    public static final int abc_slide_out_top=0x7f010009;
    public static final int abc_tooltip_enter=0x7f01000a;
    public static final int abc_tooltip_exit=0x7f01000b;
    public static final int design_bottom_sheet_slide_in=0x7f01000c;
    public static final int design_bottom_sheet_slide_out=0x7f01000d;
    public static final int design_snackbar_in=0x7f01000e;
    public static final int design_snackbar_out=0x7f01000f;
  }
  public static final class animator {
    public static final int design_appbar_state_list_animator=0x7f020000;
    public static final int design_fab_hide_motion_spec=0x7f020001;
    public static final int design_fab_show_motion_spec=0x7f020002;
    public static final int mtrl_btn_state_list_anim=0x7f020003;
    public static final int mtrl_btn_unelevated_state_list_anim=0x7f020004;
    public static final int mtrl_chip_state_list_anim=0x7f020005;
    public static final int mtrl_fab_hide_motion_spec=0x7f020006;
    public static final int mtrl_fab_show_motion_spec=0x7f020007;
    public static final int mtrl_fab_transformation_sheet_collapse_spec=0x7f020008;
    public static final int mtrl_fab_transformation_sheet_expand_spec=0x7f020009;
  }
  public static final class attr {
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int AreaSeriesStyle=0x7f030000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int AxisStyle=0x7f030001;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int BarSeriesStyle=0x7f030002;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int CartesianAxisStyle=0x7f030003;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int CartesianCustomAnnotationStyle=0x7f030004;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int CartesianPlotBandAnnotationStyle=0x7f030005;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int CartesianStrokedAnnotationStyle=0x7f030006;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int CategoricalAxisStyle=0x7f030007;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int CategoricalSeriesStyle=0x7f030008;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int CategoricalStrokedSeriesStyle=0x7f030009;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ChartAnnotationStyle=0x7f03000a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ChartSeriesStyle=0x7f03000b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int DateTimeCategoricalAxisStyle=0x7f03000c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int DateTimeContinuousAxisStyle=0x7f03000d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int LineAxisStyle=0x7f03000e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int RadChartBaseStyle=0x7f03000f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int RangeBarSeriesStyle=0x7f030010;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int TestBarSeriesStyle=0x7f030011;
    /**
     * Custom divider drawable to use for elements in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarDivider=0x7f030012;
    /**
     * Custom item state list drawable background for action bar items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarItemBackground=0x7f030013;
    /**
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarPopupTheme=0x7f030014;
    /**
     * Size of the Action Bar, including the contextual
     * bar used to present Action Modes.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap_content</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int actionBarSize=0x7f030015;
    /**
     * Reference to a style for the split Action Bar. This style
     * controls the split component that holds the menu/action
     * buttons. actionBarStyle is still used for the primary
     * bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarSplitStyle=0x7f030016;
    /**
     * Reference to a style for the Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarStyle=0x7f030017;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabBarStyle=0x7f030018;
    /**
     * Default style for tabs within an action bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabStyle=0x7f030019;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabTextStyle=0x7f03001a;
    /**
     * Reference to a theme that should be used to inflate the
     * action bar. This will be inherited by any widget inflated
     * into the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTheme=0x7f03001b;
    /**
     * Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar. Most of the time
     * this will be a reference to the current theme, but when
     * the action bar has a significantly different contrast
     * profile than the rest of the activity the difference
     * can become important. If this is set to @null the current
     * theme will be used.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarWidgetTheme=0x7f03001c;
    /**
     * Default action button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionButtonStyle=0x7f03001d;
    /**
     * Default ActionBar dropdown style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionDropDownStyle=0x7f03001e;
    /**
     * An optional layout to be used as an action view.
     * See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionLayout=0x7f03001f;
    /**
     * TextAppearance style that will be applied to text that
     * appears within action menu items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionMenuTextAppearance=0x7f030020;
    /**
     * Color for text that appears within action menu items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int actionMenuTextColor=0x7f030021;
    /**
     * Background drawable to use for action mode UI
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeBackground=0x7f030022;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCloseButtonStyle=0x7f030023;
    /**
     * Drawable to use for the close action mode button
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCloseDrawable=0x7f030024;
    /**
     * Drawable to use for the Copy action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCopyDrawable=0x7f030025;
    /**
     * Drawable to use for the Cut action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCutDrawable=0x7f030026;
    /**
     * Drawable to use for the Find action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeFindDrawable=0x7f030027;
    /**
     * Drawable to use for the Paste action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModePasteDrawable=0x7f030028;
    /**
     * PopupWindow style to use for action modes when showing as a window overlay.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModePopupWindowStyle=0x7f030029;
    /**
     * Drawable to use for the Select all action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeSelectAllDrawable=0x7f03002a;
    /**
     * Drawable to use for the Share action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeShareDrawable=0x7f03002b;
    /**
     * Background drawable to use for action mode UI in the lower split bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeSplitBackground=0x7f03002c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeStyle=0x7f03002d;
    /**
     * Drawable to use for the Web Search action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeWebSearchDrawable=0x7f03002e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionOverflowButtonStyle=0x7f03002f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionOverflowMenuStyle=0x7f030030;
    /**
     * The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.
     * See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
     * for more info.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int actionProviderClass=0x7f030031;
    /**
     * The name of an optional View class to instantiate and use as an
     * action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int actionViewClass=0x7f030032;
    /**
     * Default ActivityChooserView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int activityChooserViewStyle=0x7f030033;
    /**
     * An image reference
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actualImageResource=0x7f030034;
    /**
     * Scale type of the actual image.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     */
    public static final int actualImageScaleType=0x7f030035;
    /**
     * An image uri .
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int actualImageUri=0x7f030036;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogButtonGroupStyle=0x7f030037;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int alertDialogCenterButtons=0x7f030038;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogStyle=0x7f030039;
    /**
     * Theme to use for alert dialogs spawned from this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogTheme=0x7f03003a;
    /**
     * Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowStacking=0x7f03003b;
    /**
     * Alpha multiplier applied to the base color.
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int alpha=0x7f03003c;
    /**
     * The alphabetic modifier key. This is the modifier when using a keyboard
     * with alphabetic keys. The values should be kept in sync with KeyEvent
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     */
    public static final int alphabeticModifiers=0x7f03003d;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int animated=0x7f03003e;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int animationDuration=0x7f03003f;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int animationStartValue=0x7f030040;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int applyDefaultPalette=0x7f030041;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int areBarsRounded=0x7f030042;
    /**
     * The length of the arrow head when formed to make an arrow
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int arrowHeadLength=0x7f030043;
    /**
     * The length of the shaft when formed to make an arrow
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int arrowShaftLength=0x7f030044;
    /**
     * Default AutoCompleteTextView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int autoCompleteTextViewStyle=0x7f030045;
    /**
     * The maximum text size constraint to be used when auto-sizing text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeMaxTextSize=0x7f030046;
    /**
     * The minimum text size constraint to be used when auto-sizing text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeMinTextSize=0x7f030047;
    /**
     * Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>. Overrides
     * <code>autoSizeStepGranularity</code> if set.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int autoSizePresetSizes=0x7f030048;
    /**
     * Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>. The default is 1px. Overwrites
     * <code>autoSizePresetSizes</code> if set.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeStepGranularity=0x7f030049;
    /**
     * Specify the type of auto-size. Note that this feature is not supported by EditText,
     * works only for TextView.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>No auto-sizing (default).</td></tr>
     * <tr><td>uniform</td><td>1</td><td>Uniform horizontal and vertical text size scaling to fit within the
     * container.</td></tr>
     * </table>
     */
    public static final int autoSizeTextType=0x7f03004a;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Multiline</td><td>1</td><td></td></tr>
     * <tr><td>None</td><td>0</td><td></td></tr>
     * <tr><td>Rotate</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int axisLabelFitMode=0x7f03004b;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Clip</td><td>2</td><td></td></tr>
     * <tr><td>Hidden</td><td>1</td><td></td></tr>
     * <tr><td>Visible</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int axisLastLabelVisibility=0x7f03004c;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int axisTitle=0x7f03004d;
    /**
     * Specifies a background drawable for the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int background=0x7f03004e;
    /**
     * A drawable or color to be used as a background.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int backgroundImage=0x7f03004f;
    /**
     * Specifies a background drawable for the bottom component of a split action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundSplit=0x7f030050;
    /**
     * Specifies a background drawable for a second stacked row of the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundStacked=0x7f030051;
    /**
     * Tint to apply to the background.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundTint=0x7f030052;
    /**
     * Blending mode used to apply the background tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int backgroundTintMode=0x7f030053;
    /**
     * The length of the bars when they are parallel to each other
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int barLength=0x7f030054;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int behavior_autoHide=0x7f030055;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int behavior_fitToContents=0x7f030056;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int behavior_hideable=0x7f030057;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int behavior_overlapTop=0x7f030058;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td></td></tr>
     * </table>
     */
    public static final int behavior_peekHeight=0x7f030059;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int behavior_skipCollapsed=0x7f03005a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int borderWidth=0x7f03005b;
    /**
     * Style for buttons without an explicit border, often used in groups.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int borderlessButtonStyle=0x7f03005c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int bottomAppBarStyle=0x7f03005d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int bottomNavigationStyle=0x7f03005e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int bottomSheetDialogTheme=0x7f03005f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int bottomSheetStyle=0x7f030060;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int bottomWidth=0x7f030061;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int boxBackgroundColor=0x7f030062;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>filled</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>outline</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int boxBackgroundMode=0x7f030063;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxCollapsedPaddingTop=0x7f030064;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxCornerRadiusBottomEnd=0x7f030065;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxCornerRadiusBottomStart=0x7f030066;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxCornerRadiusTopEnd=0x7f030067;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxCornerRadiusTopStart=0x7f030068;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int boxStrokeColor=0x7f030069;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxStrokeWidth=0x7f03006a;
    /**
     * Style for buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarButtonStyle=0x7f03006b;
    /**
     * Style for the "negative" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarNegativeButtonStyle=0x7f03006c;
    /**
     * Style for the "neutral" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarNeutralButtonStyle=0x7f03006d;
    /**
     * Style for the "positive" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarPositiveButtonStyle=0x7f03006e;
    /**
     * Style for button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarStyle=0x7f03006f;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int buttonGravity=0x7f030070;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int buttonIconDimen=0x7f030071;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonPanelSideLayout=0x7f030072;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>icon_only</td><td>2</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * <tr><td>wide</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int buttonSize=0x7f030073;
    /**
     * Normal Button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonStyle=0x7f030074;
    /**
     * Small Button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonStyleSmall=0x7f030075;
    /**
     * Tint to apply to the button drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int buttonTint=0x7f030076;
    /**
     * Blending mode used to apply the button tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int buttonTintMode=0x7f030077;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int calendarBackground=0x7f030078;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int calendarStyle=0x7f030079;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>edge</td><td>1</td><td></td></tr>
     * <tr><td>round</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int cap=0x7f03007a;
    /**
     * Background color for CardView.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cardBackgroundColor=0x7f03007b;
    /**
     * Corner radius for CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cardCornerRadius=0x7f03007c;
    /**
     * Elevation for CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cardElevation=0x7f03007d;
    /**
     * Maximum Elevation for CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cardMaxElevation=0x7f03007e;
    /**
     * Add padding to CardView on v20 and before to prevent intersections between the Card content and rounded corners.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cardPreventCornerOverlap=0x7f03007f;
    /**
     * Add padding in API v21+ as well to have the same measurements with previous versions.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cardUseCompatPadding=0x7f030080;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int cardViewStyle=0x7f030081;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int chartZoom=0x7f030082;
    /**
     * Default Checkbox style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkboxStyle=0x7f030083;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkedChip=0x7f030084;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkedIcon=0x7f030085;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int checkedIconEnabled=0x7f030086;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int checkedIconVisible=0x7f030087;
    /**
     * Default CheckedTextView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkedTextViewStyle=0x7f030088;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int chipBackgroundColor=0x7f030089;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipCornerRadius=0x7f03008a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipEndPadding=0x7f03008b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int chipGroupStyle=0x7f03008c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int chipIcon=0x7f03008d;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int chipIconEnabled=0x7f03008e;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipIconSize=0x7f03008f;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int chipIconTint=0x7f030090;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int chipIconVisible=0x7f030091;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipMinHeight=0x7f030092;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipSpacing=0x7f030093;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipSpacingHorizontal=0x7f030094;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipSpacingVertical=0x7f030095;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int chipStandaloneStyle=0x7f030096;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipStartPadding=0x7f030097;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int chipStrokeColor=0x7f030098;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipStrokeWidth=0x7f030099;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int chipStyle=0x7f03009a;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int circleCrop=0x7f03009b;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int circleFillColor=0x7f03009c;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int circleInnerRadius=0x7f03009d;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int circleRadius=0x7f03009e;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int circleStrokeColor=0x7f03009f;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int clipToBounds=0x7f0300a0;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int clipToPlotArea=0x7f0300a1;
    /**
     * Close button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int closeIcon=0x7f0300a2;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int closeIconEnabled=0x7f0300a3;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int closeIconEndPadding=0x7f0300a4;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int closeIconSize=0x7f0300a5;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int closeIconStartPadding=0x7f0300a6;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int closeIconTint=0x7f0300a7;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int closeIconVisible=0x7f0300a8;
    /**
     * Specifies a layout to use for the "close" item at the starting edge.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int closeItemLayout=0x7f0300a9;
    /**
     * Text to set as the content description for the collapse button.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int collapseContentDescription=0x7f0300aa;
    /**
     * Icon drawable to use for the collapse button.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int collapseIcon=0x7f0300ab;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     */
    public static final int collapsedTitleGravity=0x7f0300ac;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int collapsedTitleTextAppearance=0x7f0300ad;
    /**
     * The drawing color for the bars
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int color=0x7f0300ae;
    /**
     * Bright complement to the primary branding color. By default, this is the color applied
     * to framework controls (via colorControlActivated).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorAccent=0x7f0300af;
    /**
     * Default color of background imagery for floating components, ex. dialogs, popups, and cards.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorBackgroundFloating=0x7f0300b0;
    /**
     * The color applied to framework buttons in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorButtonNormal=0x7f0300b1;
    /**
     * The color applied to framework controls in their activated (ex. checked) state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlActivated=0x7f0300b2;
    /**
     * The color applied to framework control highlights (ex. ripples, list selectors).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlHighlight=0x7f0300b3;
    /**
     * The color applied to framework controls in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlNormal=0x7f0300b4;
    /**
     * Color used for error states and things that need to be drawn to
     * the user's attention.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorError=0x7f0300b5;
    /**
     * The primary branding color for the app. By default, this is the color applied to the
     * action bar background.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimary=0x7f0300b6;
    /**
     * Dark variant of the primary branding color. By default, this is the color applied to
     * the status bar (via statusBarColor) and navigation bar (via navigationBarColor).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimaryDark=0x7f0300b7;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>2</td><td></td></tr>
     * <tr><td>dark</td><td>0</td><td></td></tr>
     * <tr><td>light</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int colorScheme=0x7f0300b8;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorSecondary=0x7f0300b9;
    /**
     * The color applied to framework switch thumbs in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorSwitchThumbNormal=0x7f0300ba;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Cluster</td><td>1</td><td></td></tr>
     * <tr><td>None</td><td>0</td><td></td></tr>
     * <tr><td>Stack</td><td>2</td><td></td></tr>
     * <tr><td>Stack100</td><td>3</td><td></td></tr>
     * </table>
     */
    public static final int combineMode=0x7f0300bb;
    /**
     * Commit icon shown in the query suggestion row
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int commitIcon=0x7f0300bc;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int content=0x7f0300bd;
    /**
     * The content description associated with the item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int contentDescription=0x7f0300be;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetEnd=0x7f0300bf;
    /**
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetEndWithActions=0x7f0300c0;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetLeft=0x7f0300c1;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetRight=0x7f0300c2;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetStart=0x7f0300c3;
    /**
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetStartWithNavigation=0x7f0300c4;
    /**
     * Inner padding between the edges of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPadding=0x7f0300c5;
    /**
     * Inner padding between the bottom edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingBottom=0x7f0300c6;
    /**
     * Inner padding between the left edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingLeft=0x7f0300c7;
    /**
     * Inner padding between the right edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingRight=0x7f0300c8;
    /**
     * Inner padding between the top edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingTop=0x7f0300c9;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int contentScrim=0x7f0300ca;
    /**
     * The background used by framework controls.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int controlBackground=0x7f0300cb;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int coordinatorLayoutStyle=0x7f0300cc;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cornerRadius=0x7f0300cd;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int counterEnabled=0x7f0300ce;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int counterMaxLength=0x7f0300cf;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int counterOverflowTextAppearance=0x7f0300d0;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int counterTextAppearance=0x7f0300d1;
    /**
     * Specifies a layout for custom navigation. Overrides navigationMode.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int customNavigationLayout=0x7f0300d2;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int dateFormat=0x7f0300d3;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Date</td><td>8</td><td></td></tr>
     * <tr><td>Day</td><td>a</td><td></td></tr>
     * <tr><td>DayOfWeek</td><td>b</td><td></td></tr>
     * <tr><td>DayOfYear</td><td>c</td><td></td></tr>
     * <tr><td>Hour</td><td>4</td><td></td></tr>
     * <tr><td>Millisecond</td><td>7</td><td></td></tr>
     * <tr><td>Minute</td><td>5</td><td></td></tr>
     * <tr><td>Month</td><td>2</td><td></td></tr>
     * <tr><td>Quarter</td><td>1</td><td></td></tr>
     * <tr><td>Second</td><td>6</td><td></td></tr>
     * <tr><td>TimeOfDay</td><td>9</td><td></td></tr>
     * <tr><td>Week</td><td>3</td><td></td></tr>
     * <tr><td>Year</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int dateTimeComponent=0x7f0300d4;
    /**
     * Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int defaultQueryHint=0x7f0300d5;
    /**
     * Preferred corner radius of dialogs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dialogCornerRadius=0x7f0300d6;
    /**
     * Preferred padding for dialog content.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dialogPreferredPadding=0x7f0300d7;
    /**
     * Theme to use for dialogs spawned from this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogTheme=0x7f0300d8;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Month</td><td>0</td><td></td></tr>
     * <tr><td>Week</td><td>2</td><td></td></tr>
     * <tr><td>Year</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int displayMode=0x7f0300d9;
    /**
     * Options affecting how the action bar is displayed.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disableHome</td><td>20</td><td></td></tr>
     * <tr><td>homeAsUp</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>showCustom</td><td>10</td><td></td></tr>
     * <tr><td>showHome</td><td>2</td><td></td></tr>
     * <tr><td>showTitle</td><td>8</td><td></td></tr>
     * <tr><td>useLogo</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int displayOptions=0x7f0300da;
    /**
     * Specifies the drawable used for item dividers.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int divider=0x7f0300db;
    /**
     * A drawable that may be used as a horizontal divider between visual elements.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dividerHorizontal=0x7f0300dc;
    /**
     * Size of padding on either end of a divider.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dividerPadding=0x7f0300dd;
    /**
     * A drawable that may be used as a vertical divider between visual elements.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dividerVertical=0x7f0300de;
    /**
     * The total size of the drawable
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int drawableSize=0x7f0300df;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawerArrowStyle=0x7f0300e0;
    /**
     * ListPopupWindow compatibility
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dropDownListViewStyle=0x7f0300e1;
    /**
     * The preferred item height for dropdown lists.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dropdownListPreferredItemHeight=0x7f0300e2;
    /**
     * EditText background drawable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextBackground=0x7f0300e3;
    /**
     * EditText text foreground color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int editTextColor=0x7f0300e4;
    /**
     * Default EditText style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextStyle=0x7f0300e5;
    /**
     * Elevation for the action bar itself
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int elevation=0x7f0300e6;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int emptyContent=0x7f0300e7;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int enforceMaterialTheme=0x7f0300e8;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int enforceTextAppearance=0x7f0300e9;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int errorEnabled=0x7f0300ea;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int errorTextAppearance=0x7f0300eb;
    /**
     * The drawable to show in the button for expanding the activities overflow popup.
     * <strong>Note:</strong> Clients would like to set this drawable
     * as a clue about the action the chosen activity will perform. For
     * example, if share activity is to be chosen the drawable should
     * give a clue that sharing is to be performed.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int expandActivityOverflowButtonDrawable=0x7f0300ec;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int expanded=0x7f0300ed;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     */
    public static final int expandedTitleGravity=0x7f0300ee;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMargin=0x7f0300ef;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMarginBottom=0x7f0300f0;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMarginEnd=0x7f0300f1;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMarginStart=0x7f0300f2;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMarginTop=0x7f0300f3;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int expandedTitleTextAppearance=0x7f0300f4;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>0</td><td></td></tr>
     * <tr><td>end</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int fabAlignmentMode=0x7f0300f5;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int fabCradleMargin=0x7f0300f6;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int fabCradleRoundedCornerRadius=0x7f0300f7;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int fabCradleVerticalOffset=0x7f0300f8;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int fabCustomSize=0x7f0300f9;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td></td></tr>
     * <tr><td>mini</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int fabSize=0x7f0300fa;
    /**
     * Fade duration in milliseconds.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int fadeDuration=0x7f0300fb;
    /**
     * A drawable to be be used as a failure image.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int failureImage=0x7f0300fc;
    /**
     * Scale type of the failure image. Ignored if failureImage is not specified.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     */
    public static final int failureImageScaleType=0x7f0300fd;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int fastScrollEnabled=0x7f0300fe;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollHorizontalThumbDrawable=0x7f0300ff;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollHorizontalTrackDrawable=0x7f030100;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollVerticalThumbDrawable=0x7f030101;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollVerticalTrackDrawable=0x7f030102;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int fillColor=0x7f030103;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int fillViewport=0x7f030104;
    /**
     * Distance from the top of the TextView to the first text baseline. If set, this
     * overrides the value set for paddingTop.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int firstBaselineToTopHeight=0x7f030105;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int floatingActionButtonStyle=0x7f030106;
    /**
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int font=0x7f030107;
    /**
     * The attribute for the font family.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontFamily=0x7f030108;
    /**
     * The authority of the Font Provider to be used for the request.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderAuthority=0x7f030109;
    /**
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fontProviderCerts=0x7f03010a;
    /**
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchStrategy=0x7f03010b;
    /**
     * The length of the timeout during fetching.
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchTimeout=0x7f03010c;
    /**
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderPackage=0x7f03010d;
    /**
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderQuery=0x7f03010e;
    /**
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int fontStyle=0x7f03010f;
    /**
     * The variation settings to be applied to the font. The string should be in the following
     * format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
     * used, or the font used does not support variation settings, this attribute needs not be
     * specified.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontVariationSettings=0x7f030110;
    /**
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int fontWeight=0x7f030111;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int foregroundInsidePadding=0x7f030112;
    /**
     * The max gap between the bars when they are parallel to each other
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int gapBetweenBars=0x7f030113;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int gapLength=0x7f030114;
    /**
     * Go button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int goIcon=0x7f030115;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int headerLayout=0x7f030116;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int height=0x7f030117;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int helperText=0x7f030118;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int helperTextEnabled=0x7f030119;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int helperTextTextAppearance=0x7f03011a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int hideMotionSpec=0x7f03011b;
    /**
     * Set true to hide the action bar on a vertical nested scroll of content.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hideOnContentScroll=0x7f03011c;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hideOnScroll=0x7f03011d;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hintAnimationEnabled=0x7f03011e;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hintEnabled=0x7f03011f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int hintTextAppearance=0x7f030120;
    /**
     * Specifies a drawable to use for the 'home as up' indicator.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int homeAsUpIndicator=0x7f030121;
    /**
     * Specifies a layout to use for the "home" section of the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int homeLayout=0x7f030122;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>1</td><td></td></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int horizontalAlignment=0x7f030123;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Left</td><td>0</td><td></td></tr>
     * <tr><td>Right</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int horizontalLocation=0x7f030124;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int horizontalOffset=0x7f030125;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int hoveredFocusedTranslationZ=0x7f030126;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int icon=0x7f030127;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int iconEndPadding=0x7f030128;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>start</td><td>1</td><td></td></tr>
     * <tr><td>textStart</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int iconGravity=0x7f030129;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int iconPadding=0x7f03012a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int iconSize=0x7f03012b;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int iconStartPadding=0x7f03012c;
    /**
     * Tint to apply to the icon.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int iconTint=0x7f03012d;
    /**
     * Blending mode used to apply the icon tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int iconTintMode=0x7f03012e;
    /**
     * The default state of the SearchView. If true, it will be iconified when not in
     * use and expanded when clicked.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int iconifiedByDefault=0x7f03012f;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int imageAspectRatio=0x7f030130;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>adjust_height</td><td>2</td><td></td></tr>
     * <tr><td>adjust_width</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int imageAspectRatioAdjust=0x7f030131;
    /**
     * ImageButton background drawable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int imageButtonStyle=0x7f030132;
    /**
     * Specifies a style resource to use for an indeterminate progress spinner.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int indeterminateProgressStyle=0x7f030133;
    /**
     * The maximal number of items initially shown in the activity list.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int initialActivityCount=0x7f030134;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int insetForeground=0x7f030135;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int isLightTheme=0x7f030136;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int isYearModeCompact=0x7f030137;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int itemBackground=0x7f030138;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemHorizontalPadding=0x7f030139;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int itemHorizontalTranslationEnabled=0x7f03013a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemIconPadding=0x7f03013b;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemIconSize=0x7f03013c;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int itemIconTint=0x7f03013d;
    /**
     * Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemPadding=0x7f03013e;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemSpacing=0x7f03013f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int itemTextAppearance=0x7f030140;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int itemTextAppearanceActive=0x7f030141;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int itemTextAppearanceInactive=0x7f030142;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int itemTextColor=0x7f030143;
    /**
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int keylines=0x7f030144;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int label=0x7f030145;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int labelColor=0x7f030146;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int labelFont=0x7f030147;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int labelFontStyle=0x7f030148;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int labelFormat=0x7f030149;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int labelInterval=0x7f03014a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int labelMargin=0x7f03014b;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int labelOffset=0x7f03014c;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int labelRotationAngle=0x7f03014d;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int labelSize=0x7f03014e;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td></td></tr>
     * <tr><td>labeled</td><td>1</td><td></td></tr>
     * <tr><td>selected</td><td>0</td><td></td></tr>
     * <tr><td>unlabeled</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int labelVisibilityMode=0x7f03014f;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int labelsColor=0x7f030150;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int labelsCount=0x7f030151;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>inner</td><td>1</td><td></td></tr>
     * <tr><td>outer</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int labelsLayoutMode=0x7f030152;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int labelsOffset=0x7f030153;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int labelsVisible=0x7f030154;
    /**
     * Distance from the bottom of the TextView to the last text baseline. If set, this
     * overrides the value set for paddingBottom.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lastBaselineToBottomHeight=0x7f030155;
    /**
     * The layout to use for the search view.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout=0x7f030156;
    /**
     * Class name of the Layout Manager to be used.
     * <p/>
     * The class must extandroidx.recyclerview.widget.RecyclerViewView$LayoutManager
     * and have either a default constructor or constructor with the signature
     * (android.content.Context, android.util.AttributeSet, int, int).
     * <p/>
     * If the name starts with a '.', application package is prefixed.
     * Else, if the name contains a '.', the classname is assumed to be a full class name.
     * Else, the recycler view package naandroidx.appcompat.widgetdget) is prefixed.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int layoutManager=0x7f030157;
    /**
     * The id of an anchor view that this view should position relative to.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout_anchor=0x7f030158;
    /**
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int layout_anchorGravity=0x7f030159;
    /**
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int layout_behavior=0x7f03015a;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>parallax</td><td>2</td><td></td></tr>
     * <tr><td>pin</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int layout_collapseMode=0x7f03015b;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_collapseParallaxMultiplier=0x7f03015c;
    /**
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>5</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     */
    public static final int layout_dodgeInsetEdges=0x7f03015d;
    /**
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>5</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     */
    public static final int layout_insetEdge=0x7f03015e;
    /**
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_keyline=0x7f03015f;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>enterAlways</td><td>4</td><td></td></tr>
     * <tr><td>enterAlwaysCollapsed</td><td>8</td><td></td></tr>
     * <tr><td>exitUntilCollapsed</td><td>2</td><td></td></tr>
     * <tr><td>scroll</td><td>1</td><td></td></tr>
     * <tr><td>snap</td><td>10</td><td></td></tr>
     * <tr><td>snapMargins</td><td>20</td><td></td></tr>
     * </table>
     */
    public static final int layout_scrollFlags=0x7f030160;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout_scrollInterpolator=0x7f030161;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int length=0x7f030162;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int liftOnScroll=0x7f030163;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int lineColor=0x7f030164;
    /**
     * Explicit height between lines of text. If set, this will override the values set
     * for lineSpacingExtra and lineSpacingMultiplier.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineHeight=0x7f030165;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineSpacing=0x7f030166;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineThickness=0x7f030167;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int lineVisible=0x7f030168;
    /**
     * Drawable used as a background for selected list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listChoiceBackgroundIndicator=0x7f030169;
    /**
     * The list divider used in alert dialogs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listDividerAlertDialog=0x7f03016a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listItemLayout=0x7f03016b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listLayout=0x7f03016c;
    /**
     * Default menu-style ListView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listMenuViewStyle=0x7f03016d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listPopupWindowStyle=0x7f03016e;
    /**
     * The preferred list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeight=0x7f03016f;
    /**
     * A larger, more robust list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeightLarge=0x7f030170;
    /**
     * A smaller, sleeker list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeightSmall=0x7f030171;
    /**
     * The preferred padding along the left edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingLeft=0x7f030172;
    /**
     * The preferred padding along the right edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingRight=0x7f030173;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int location=0x7f030174;
    /**
     * Specifies the drawable used for the application logo.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int logo=0x7f030175;
    /**
     * A content description string to describe the appearance of the
     * associated logo image.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int logoDescription=0x7f030176;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int majorStep=0x7f030177;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Day</td><td>4</td><td></td></tr>
     * <tr><td>Hour</td><td>5</td><td></td></tr>
     * <tr><td>Millisecond</td><td>8</td><td></td></tr>
     * <tr><td>Minute</td><td>6</td><td></td></tr>
     * <tr><td>Month</td><td>2</td><td></td></tr>
     * <tr><td>Quarter</td><td>1</td><td></td></tr>
     * <tr><td>Second</td><td>7</td><td></td></tr>
     * <tr><td>Week</td><td>3</td><td></td></tr>
     * <tr><td>Year</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int majorStepUnit=0x7f030178;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int majorTickInterval=0x7f030179;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int majorTickOffset=0x7f03017a;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int majorTicksCount=0x7f03017b;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int majorTicksFillColor=0x7f03017c;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int majorTicksLength=0x7f03017d;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int majorTicksStrokeColor=0x7f03017e;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int majorTicksWidth=0x7f03017f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialButtonStyle=0x7f030180;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCardViewStyle=0x7f030181;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxActionInlineWidth=0x7f030182;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxButtonHeight=0x7f030183;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxImageSize=0x7f030184;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int maxZoom=0x7f030185;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int maximum=0x7f030186;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int maximumTicks=0x7f030187;
    /**
     * When set to true, all children with a weight will be considered having
     * the minimum size of the largest child. If false, all children are
     * measured normally.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int measureWithLargestChild=0x7f030188;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int menu=0x7f030189;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int minimum=0x7f03018a;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int minorTicksCount=0x7f03018b;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int minorTicksFillColor=0x7f03018c;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int minorTicksLength=0x7f03018d;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int minorTicksStrokeColor=0x7f03018e;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int minorTicksWidth=0x7f03018f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int multiChoiceItemLayout=0x7f030190;
    /**
     * Text to set as the content description for the navigation button
     * located at the start of the toolbar.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int navigationContentDescription=0x7f030191;
    /**
     * Icon drawable to use for the navigation button located at
     * the start of the toolbar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int navigationIcon=0x7f030192;
    /**
     * The type of navigation to use.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>listMode</td><td>1</td><td>The action bar will use a selection list for navigation.</td></tr>
     * <tr><td>normal</td><td>0</td><td>Normal static title text</td></tr>
     * <tr><td>tabMode</td><td>2</td><td>The action bar will use a series of horizontal tabs for navigation.</td></tr>
     * </table>
     */
    public static final int navigationMode=0x7f030193;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int navigationViewStyle=0x7f030194;
    /**
     * The numeric modifier key. This is the modifier when using a numeric (e.g., 12-key)
     * keyboard. The values should be kept in sync with KeyEvent
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     */
    public static final int numericModifiers=0x7f030195;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int offset=0x7f030196;
    /**
     * Whether the popup window should overlap its anchor view.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int overlapAnchor=0x7f030197;
    /**
     * A drawable or color to be used as an overlay.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int overlayImage=0x7f030198;
    /**
     * Bottom padding to use when no buttons are present.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingBottomNoButtons=0x7f030199;
    /**
     * Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingEnd=0x7f03019a;
    /**
     * Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingStart=0x7f03019b;
    /**
     * Top padding to use when no title is present.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingTopNoTitle=0x7f03019c;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int palette=0x7f03019d;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int pan=0x7f03019e;
    /**
     * The background of a panel when it is inset from the left and right edges of the screen.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int panelBackground=0x7f03019f;
    /**
     * Default Panel Menu style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int panelMenuListTheme=0x7f0301a0;
    /**
     * Default Panel Menu width.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int panelMenuListWidth=0x7f0301a1;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int passwordToggleContentDescription=0x7f0301a2;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int passwordToggleDrawable=0x7f0301a3;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int passwordToggleEnabled=0x7f0301a4;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int passwordToggleTint=0x7f0301a5;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td></td></tr>
     * <tr><td>screen</td><td>f</td><td></td></tr>
     * <tr><td>src_atop</td><td>9</td><td></td></tr>
     * <tr><td>src_in</td><td>5</td><td></td></tr>
     * <tr><td>src_over</td><td>3</td><td></td></tr>
     * </table>
     */
    public static final int passwordToggleTintMode=0x7f0301a6;
    /**
     * A drawable or color to be be used as a placeholder.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int placeholderImage=0x7f0301a7;
    /**
     * Scale type of the placeholder image. Ignored if placeholderImage is not specified.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     */
    public static final int placeholderImageScaleType=0x7f0301a8;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>BetweenTicks</td><td>0</td><td></td></tr>
     * <tr><td>OnTicks</td><td>1</td><td></td></tr>
     * <tr><td>OnTicksPadded</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int plotMode=0x7f0301a9;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int pointerFill=0x7f0301aa;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int pointerMargin=0x7f0301ab;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int pointerSize=0x7f0301ac;
    /**
     * Default PopupMenu style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupMenuStyle=0x7f0301ad;
    /**
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupTheme=0x7f0301ae;
    /**
     * Default PopupWindow style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupWindowStyle=0x7f0301af;
    /**
     * Whether space should be reserved in layout when an icon is missing.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int preserveIconSpacing=0x7f0301b0;
    /**
     * A drawable or color to be used as a pressed-state-overlay
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int pressedStateOverlayImage=0x7f0301b1;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int pressedTranslationZ=0x7f0301b2;
    /**
     * Progress bar Auto Rotate interval in milliseconds
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int progressBarAutoRotateInterval=0x7f0301b3;
    /**
     * A drawable to be be used as a progress bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int progressBarImage=0x7f0301b4;
    /**
     * Scale type of the progress bar. Ignored if progressBarImage is not specified.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     */
    public static final int progressBarImageScaleType=0x7f0301b5;
    /**
     * Specifies the horizontal padding on either end for an embedded progress bar.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int progressBarPadding=0x7f0301b6;
    /**
     * Specifies a style resource to use for an embedded progress bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int progressBarStyle=0x7f0301b7;
    /**
     * Background for the section containing the search query
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int queryBackground=0x7f0301b8;
    /**
     * An optional user-defined query hint string to be displayed in the empty query field.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int queryHint=0x7f0301b9;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int radScrollViewStyle=0x7f0301ba;
    /**
     * Default RadioButton style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int radioButtonStyle=0x7f0301bb;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int radius=0x7f0301bc;
    /**
     * Default RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyle=0x7f0301bd;
    /**
     * Indicator RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyleIndicator=0x7f0301be;
    /**
     * Small indicator RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyleSmall=0x7f0301bf;
    /**
     * A drawable to be be used as a retry image.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int retryImage=0x7f0301c0;
    /**
     * Scale type of the retry image. Ignored if retryImage is not specified.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     */
    public static final int retryImageScaleType=0x7f0301c1;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int reverseLayout=0x7f0301c2;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int rippleColor=0x7f0301c3;
    /**
     * Round as circle.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int roundAsCircle=0x7f0301c4;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int roundBarsRadius=0x7f0301c5;
    /**
     * Round the bottom-end edge. Ignored if roundAsCircle is used.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int roundBottomEnd=0x7f0301c6;
    /**
     * Round the bottom-left corner. Ignored if roundAsCircle is used.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int roundBottomLeft=0x7f0301c7;
    /**
     * Round the bottom-right corner. Ignored if roundAsCircle is used.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int roundBottomRight=0x7f0301c8;
    /**
     * Round the bottom-start edge. Ignored if roundAsCircle is used.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int roundBottomStart=0x7f0301c9;
    /**
     * Round the top-end edge. Ignored if roundAsCircle is used.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int roundTopEnd=0x7f0301ca;
    /**
     * Round the top-left corner. Ignored if roundAsCircle is used.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int roundTopLeft=0x7f0301cb;
    /**
     * Round the top-right corner. Ignored if roundAsCircle is used.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int roundTopRight=0x7f0301cc;
    /**
     * Round the top-start edge. Ignored if roundAsCircle is used.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int roundTopStart=0x7f0301cd;
    /**
     * Round by overlying color.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int roundWithOverlayColor=0x7f0301ce;
    /**
     * Rounded corner radius. Ignored if roundAsCircle is used.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int roundedCornerRadius=0x7f0301cf;
    /**
     * Rounding border color
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int roundingBorderColor=0x7f0301d0;
    /**
     * Rounding border padding
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int roundingBorderPadding=0x7f0301d1;
    /**
     * Rounding border width
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int roundingBorderWidth=0x7f0301d2;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int scopeUris=0x7f0301d3;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int scrimAnimationDuration=0x7f0301d4;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int scrimBackground=0x7f0301d5;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int scrimVisibleHeightTrigger=0x7f0301d6;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>both</td><td>3</td><td></td></tr>
     * <tr><td>horizontal</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int scrollMode=0x7f0301d7;
    /**
     * Search icon displayed as a text field hint
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchHintIcon=0x7f0301d8;
    /**
     * Search icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchIcon=0x7f0301d9;
    /**
     * Style for the search query widget.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchViewStyle=0x7f0301da;
    /**
     * Default SeekBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int seekBarStyle=0x7f0301db;
    /**
     * A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int selectableItemBackground=0x7f0301dc;
    /**
     * Background drawable for borderless standalone items that need focus/pressed states.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int selectableItemBackgroundBorderless=0x7f0301dd;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Multiple</td><td>2</td><td></td></tr>
     * <tr><td>Range</td><td>1</td><td></td></tr>
     * <tr><td>Single</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int selectionMode=0x7f0301de;
    /**
     * How this item should display in the Action Bar, if present.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>always</td><td>2</td><td>Always show this item in an actionbar, even if it would override
     * the system's limits of how much stuff to put there. This may make
     * your action bar look bad on some screens. In most cases you should
     * use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never".</td></tr>
     * <tr><td>collapseActionView</td><td>8</td><td>This item's action view collapses to a normal menu
     * item. When expanded, the action view takes over a
     * larger segment of its container.</td></tr>
     * <tr><td>ifRoom</td><td>1</td><td>Show this item in an action bar if there is room for it as determined
     * by the system. Favor this option over "always" where possible.
     * Mutually exclusive with "never" and "always".</td></tr>
     * <tr><td>never</td><td>0</td><td>Never show this item in an action bar, show it in the overflow menu instead.
     * Mutually exclusive with "ifRoom" and "always".</td></tr>
     * <tr><td>withText</td><td>4</td><td>When this item is shown as an action in the action bar, show a text
     * label with it even if it has an icon representation.</td></tr>
     * </table>
     */
    public static final int showAsAction=0x7f0301df;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showCellDecorations=0x7f0301e0;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showDayNames=0x7f0301e1;
    /**
     * Setting for which dividers to show.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>beginning</td><td>1</td><td></td></tr>
     * <tr><td>end</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int showDividers=0x7f0301e2;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showGridLines=0x7f0301e3;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showLabels=0x7f0301e4;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int showMotionSpec=0x7f0301e5;
    /**
     * Whether to draw on/off text.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showText=0x7f0301e6;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showTitle=0x7f0301e7;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int singleChoiceItemLayout=0x7f0301e8;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int singleLine=0x7f0301e9;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int singleSelection=0x7f0301ea;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int snackbarButtonStyle=0x7f0301eb;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int snackbarStyle=0x7f0301ec;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int spanCount=0x7f0301ed;
    /**
     * Whether bars should rotate or not during transition
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int spinBars=0x7f0301ee;
    /**
     * Default Spinner style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int spinnerDropDownItemStyle=0x7f0301ef;
    /**
     * Default Spinner style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int spinnerStyle=0x7f0301f0;
    /**
     * Whether to split the track and leave a gap for the thumb drawable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int splitTrack=0x7f0301f1;
    /**
     * Sets a drawable as the content of this ImageView. Allows the use of vector drawable
     * when running on older versions of the platform.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int srcCompat=0x7f0301f2;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int stackFromEnd=0x7f0301f3;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int startAngle=0x7f0301f4;
    /**
     * State identifier indicating the popup will be above the anchor.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_above_anchor=0x7f0301f5;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_calendar_cell_today=0x7f0301f6;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_collapsed=0x7f0301f7;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_collapsible=0x7f0301f8;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_liftable=0x7f0301f9;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_lifted=0x7f0301fa;
    /**
     * Drawable to display behind the status bar when the view is set to draw behind it.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int statusBarBackground=0x7f0301fb;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int statusBarScrim=0x7f0301fc;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int strokeColor=0x7f0301fd;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int strokeWidth=0x7f0301fe;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int strokeWidthF=0x7f0301ff;
    /**
     * Drawable for the arrow icon indicating a particular item is a submenu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subMenuArrow=0x7f030200;
    /**
     * Background for the section containing the action (e.g. voice search)
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int submitBackground=0x7f030201;
    /**
     * Specifies subtitle text used for navigationMode="normal"
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int subtitle=0x7f030202;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int subtitleHorizontalOffset=0x7f030203;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subtitleTextAppearance=0x7f030204;
    /**
     * A color to apply to the subtitle string.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int subtitleTextColor=0x7f030205;
    /**
     * Specifies a style to use for subtitle text.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subtitleTextStyle=0x7f030206;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int subtitleVerticalOffset=0x7f030207;
    /**
     * Layout for query suggestion rows
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suggestionRowLayout=0x7f030208;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int sweepAngle=0x7f030209;
    /**
     * Minimum width for the switch component
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int switchMinWidth=0x7f03020a;
    /**
     * Minimum space between the switch and caption text
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int switchPadding=0x7f03020b;
    /**
     * Default style for the Switch widget.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchStyle=0x7f03020c;
    /**
     * TextAppearance style for text displayed on the switch thumb.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchTextAppearance=0x7f03020d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tabBackground=0x7f03020e;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabContentStart=0x7f03020f;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>1</td><td></td></tr>
     * <tr><td>fill</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int tabGravity=0x7f030210;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tabIconTint=0x7f030211;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td></td></tr>
     * <tr><td>multiply</td><td>e</td><td></td></tr>
     * <tr><td>screen</td><td>f</td><td></td></tr>
     * <tr><td>src_atop</td><td>9</td><td></td></tr>
     * <tr><td>src_in</td><td>5</td><td></td></tr>
     * <tr><td>src_over</td><td>3</td><td></td></tr>
     * </table>
     */
    public static final int tabIconTintMode=0x7f030212;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tabIndicator=0x7f030213;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int tabIndicatorAnimationDuration=0x7f030214;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tabIndicatorColor=0x7f030215;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int tabIndicatorFullWidth=0x7f030216;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>0</td><td></td></tr>
     * <tr><td>center</td><td>1</td><td></td></tr>
     * <tr><td>stretch</td><td>3</td><td></td></tr>
     * <tr><td>top</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int tabIndicatorGravity=0x7f030217;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabIndicatorHeight=0x7f030218;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int tabInlineLabel=0x7f030219;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabMaxWidth=0x7f03021a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabMinWidth=0x7f03021b;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fixed</td><td>1</td><td></td></tr>
     * <tr><td>scrollable</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int tabMode=0x7f03021c;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPadding=0x7f03021d;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPaddingBottom=0x7f03021e;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPaddingEnd=0x7f03021f;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPaddingStart=0x7f030220;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPaddingTop=0x7f030221;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tabRippleColor=0x7f030222;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tabSelectedTextColor=0x7f030223;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tabStyle=0x7f030224;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tabTextAppearance=0x7f030225;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tabTextColor=0x7f030226;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int tabUnboundedRipple=0x7f030227;
    /**
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int textAllCaps=0x7f030228;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceBody1=0x7f030229;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceBody2=0x7f03022a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceButton=0x7f03022b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceCaption=0x7f03022c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline1=0x7f03022d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline2=0x7f03022e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline3=0x7f03022f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline4=0x7f030230;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline5=0x7f030231;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline6=0x7f030232;
    /**
     * Text color, typeface, size, and style for the text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceLargePopupMenu=0x7f030233;
    /**
     * The preferred TextAppearance for the primary text of list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItem=0x7f030234;
    /**
     * The preferred TextAppearance for the secondary text of list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItemSecondary=0x7f030235;
    /**
     * The preferred TextAppearance for the primary text of small list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItemSmall=0x7f030236;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceOverline=0x7f030237;
    /**
     * Text color, typeface, size, and style for header text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearancePopupMenuHeader=0x7f030238;
    /**
     * Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSearchResultSubtitle=0x7f030239;
    /**
     * Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSearchResultTitle=0x7f03023a;
    /**
     * Text color, typeface, size, and style for small text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSmallPopupMenu=0x7f03023b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSubtitle1=0x7f03023c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSubtitle2=0x7f03023d;
    /**
     * Color of list item text in alert dialogs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int textColorAlertDialogListItem=0x7f03023e;
    /**
     * Text color for urls in search suggestions, used by things like global search
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int textColorSearchUrl=0x7f03023f;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int textEndPadding=0x7f030240;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textInputStyle=0x7f030241;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int textStartPadding=0x7f030242;
    /**
     * Deprecated.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int theme=0x7f030243;
    /**
     * The thickness (stroke size) for the bar paint
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thickness=0x7f030244;
    /**
     * Amount of padding on either side of text within the switch thumb.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thumbTextPadding=0x7f030245;
    /**
     * Tint to apply to the thumb drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int thumbTint=0x7f030246;
    /**
     * Blending mode used to apply the thumb tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int thumbTintMode=0x7f030247;
    /**
     * Drawable displayed at each progress position on a seekbar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tickMark=0x7f030248;
    /**
     * Tint to apply to the tick mark drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tickMarkTint=0x7f030249;
    /**
     * Blending mode used to apply the tick mark tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int tickMarkTintMode=0x7f03024a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tickThickness=0x7f03024b;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>inner</td><td>1</td><td></td></tr>
     * <tr><td>outer</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int ticksLayoutMode=0x7f03024c;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int ticksOffset=0x7f03024d;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ticksVisible=0x7f03024e;
    /**
     * Tint to apply to the image source.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tint=0x7f03024f;
    /**
     * Blending mode used to apply the image source tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int tintMode=0x7f030250;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int title=0x7f030251;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int titleEnabled=0x7f030252;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int titleHorizontalOffset=0x7f030253;
    /**
     * Specifies extra space on the left, start, right and end sides
     * of the toolbar's title. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMargin=0x7f030254;
    /**
     * Specifies extra space on the bottom side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginBottom=0x7f030255;
    /**
     * Specifies extra space on the end side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginEnd=0x7f030256;
    /**
     * Specifies extra space on the start side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginStart=0x7f030257;
    /**
     * Specifies extra space on the top side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginTop=0x7f030258;
    /**
     * {@deprecated Use titleMargin}
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    @Deprecated
    public static final int titleMargins=0x7f030259;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int titleTextAppearance=0x7f03025a;
    /**
     * A color to apply to the title string.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int titleTextColor=0x7f03025b;
    /**
     * Specifies a style to use for title text.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int titleTextStyle=0x7f03025c;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int titleVerticalOffset=0x7f03025d;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int tkShowTitle=0x7f03025e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarId=0x7f03025f;
    /**
     * Default Toolar NavigationButtonStyle
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarNavigationButtonStyle=0x7f030260;
    /**
     * Default Toolbar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarStyle=0x7f030261;
    /**
     * Foreground color to use for tooltips
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tooltipForegroundColor=0x7f030262;
    /**
     * Background to use for tooltips
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tooltipFrameBackground=0x7f030263;
    /**
     * The tooltip text associated with the item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int tooltipText=0x7f030264;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int topWidth=0x7f030265;
    /**
     * Drawable to use as the "track" that the switch thumb slides within.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int track=0x7f030266;
    /**
     * Tint to apply to the track.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int trackTint=0x7f030267;
    /**
     * Blending mode used to apply the track tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int trackTintMode=0x7f030268;
    /**
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int ttcIndex=0x7f030269;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int useCompatPadding=0x7f03026a;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int value=0x7f03026b;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>1</td><td></td></tr>
     * <tr><td>center</td><td>2</td><td></td></tr>
     * <tr><td>top</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int verticalAlignment=0x7f03026c;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Bottom</td><td>0</td><td></td></tr>
     * <tr><td>Top</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int verticalLocation=0x7f03026d;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int verticalOffset=0x7f03026e;
    /**
     * Aspect ratio (width / height) of the view, not necessarily of the images.
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int viewAspectRatio=0x7f03026f;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int viewInflaterClass=0x7f030270;
    /**
     * Voice button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int voiceIcon=0x7f030271;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Block</td><td>2</td><td></td></tr>
     * <tr><td>Inline</td><td>1</td><td></td></tr>
     * <tr><td>None</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int weekNumberDisplayMode=0x7f030272;
    /**
     * Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionBar=0x7f030273;
    /**
     * Flag indicating whether this window's Action Bar should overlay
     * application content. Does nothing if the window would not
     * have an Action Bar.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionBarOverlay=0x7f030274;
    /**
     * Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionModeOverlay=0x7f030275;
    /**
     * A fixed height for the window along the major axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedHeightMajor=0x7f030276;
    /**
     * A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedHeightMinor=0x7f030277;
    /**
     * A fixed width for the window along the major axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedWidthMajor=0x7f030278;
    /**
     * A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedWidthMinor=0x7f030279;
    /**
     * The minimum width the window is allowed to be, along the major
     * axis of the screen.  That is, when in landscape.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowMinWidthMajor=0x7f03027a;
    /**
     * The minimum width the window is allowed to be, along the minor
     * axis of the screen.  That is, when in portrait.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowMinWidthMinor=0x7f03027b;
    /**
     * Flag indicating whether there should be no title on this window.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowNoTitle=0x7f03027c;
  }
  public static final class bool {
    public static final int abc_action_bar_embed_tabs=0x7f040000;
    public static final int abc_allow_stacked_button_bar=0x7f040001;
    public static final int abc_config_actionMenuItemAllCaps=0x7f040002;
    public static final int mtrl_btn_textappearance_all_caps=0x7f040003;
  }
  public static final class color {
    public static final int abc_background_cache_hint_selector_material_dark=0x7f050000;
    public static final int abc_background_cache_hint_selector_material_light=0x7f050001;
    public static final int abc_btn_colored_borderless_text_material=0x7f050002;
    public static final int abc_btn_colored_text_material=0x7f050003;
    public static final int abc_color_highlight_material=0x7f050004;
    public static final int abc_hint_foreground_material_dark=0x7f050005;
    public static final int abc_hint_foreground_material_light=0x7f050006;
    public static final int abc_input_method_navigation_guard=0x7f050007;
    public static final int abc_primary_text_disable_only_material_dark=0x7f050008;
    public static final int abc_primary_text_disable_only_material_light=0x7f050009;
    public static final int abc_primary_text_material_dark=0x7f05000a;
    public static final int abc_primary_text_material_light=0x7f05000b;
    public static final int abc_search_url_text=0x7f05000c;
    public static final int abc_search_url_text_normal=0x7f05000d;
    public static final int abc_search_url_text_pressed=0x7f05000e;
    public static final int abc_search_url_text_selected=0x7f05000f;
    public static final int abc_secondary_text_material_dark=0x7f050010;
    public static final int abc_secondary_text_material_light=0x7f050011;
    public static final int abc_tint_btn_checkable=0x7f050012;
    public static final int abc_tint_default=0x7f050013;
    public static final int abc_tint_edittext=0x7f050014;
    public static final int abc_tint_seek_thumb=0x7f050015;
    public static final int abc_tint_spinner=0x7f050016;
    public static final int abc_tint_switch_track=0x7f050017;
    public static final int accent_material_dark=0x7f050018;
    public static final int accent_material_light=0x7f050019;
    public static final int background_floating_material_dark=0x7f05001a;
    public static final int background_floating_material_light=0x7f05001b;
    public static final int background_material_dark=0x7f05001c;
    public static final int background_material_light=0x7f05001d;
    public static final int bright_foreground_disabled_material_dark=0x7f05001e;
    public static final int bright_foreground_disabled_material_light=0x7f05001f;
    public static final int bright_foreground_inverse_material_dark=0x7f050020;
    public static final int bright_foreground_inverse_material_light=0x7f050021;
    public static final int bright_foreground_material_dark=0x7f050022;
    public static final int bright_foreground_material_light=0x7f050023;
    public static final int browser_actions_bg_grey=0x7f050024;
    public static final int browser_actions_divider_color=0x7f050025;
    public static final int browser_actions_text_color=0x7f050026;
    public static final int browser_actions_title_color=0x7f050027;
    public static final int button_material_dark=0x7f050028;
    public static final int button_material_light=0x7f050029;
    public static final int cardview_dark_background=0x7f05002a;
    public static final int cardview_light_background=0x7f05002b;
    public static final int cardview_shadow_end_color=0x7f05002c;
    public static final int cardview_shadow_start_color=0x7f05002d;
    public static final int common_google_signin_btn_text_dark=0x7f05002e;
    public static final int common_google_signin_btn_text_dark_default=0x7f05002f;
    public static final int common_google_signin_btn_text_dark_disabled=0x7f050030;
    public static final int common_google_signin_btn_text_dark_focused=0x7f050031;
    public static final int common_google_signin_btn_text_dark_pressed=0x7f050032;
    public static final int common_google_signin_btn_text_light=0x7f050033;
    public static final int common_google_signin_btn_text_light_default=0x7f050034;
    public static final int common_google_signin_btn_text_light_disabled=0x7f050035;
    public static final int common_google_signin_btn_text_light_focused=0x7f050036;
    public static final int common_google_signin_btn_text_light_pressed=0x7f050037;
    public static final int common_google_signin_btn_tint=0x7f050038;
    public static final int data_form_invalid_validation_color=0x7f050039;
    public static final int data_form_list_selected=0x7f05003a;
    public static final int data_form_valid_validation_color=0x7f05003b;
    public static final int design_bottom_navigation_shadow_color=0x7f05003c;
    public static final int design_default_color_primary=0x7f05003d;
    public static final int design_default_color_primary_dark=0x7f05003e;
    public static final int design_error=0x7f05003f;
    public static final int design_fab_shadow_end_color=0x7f050040;
    public static final int design_fab_shadow_mid_color=0x7f050041;
    public static final int design_fab_shadow_start_color=0x7f050042;
    public static final int design_fab_stroke_end_inner_color=0x7f050043;
    public static final int design_fab_stroke_end_outer_color=0x7f050044;
    public static final int design_fab_stroke_top_inner_color=0x7f050045;
    public static final int design_fab_stroke_top_outer_color=0x7f050046;
    public static final int design_snackbar_background_color=0x7f050047;
    public static final int design_tint_password_toggle=0x7f050048;
    public static final int dim_foreground_disabled_material_dark=0x7f050049;
    public static final int dim_foreground_disabled_material_light=0x7f05004a;
    public static final int dim_foreground_material_dark=0x7f05004b;
    public static final int dim_foreground_material_light=0x7f05004c;
    public static final int error_color_material_dark=0x7f05004d;
    public static final int error_color_material_light=0x7f05004e;
    public static final int foreground_material_dark=0x7f05004f;
    public static final int foreground_material_light=0x7f050050;
    public static final int groupHeaderTextColor=0x7f050051;
    public static final int highlighted_text_material_dark=0x7f050052;
    public static final int highlighted_text_material_light=0x7f050053;
    public static final int listAccentColor=0x7f050054;
    public static final int listItemTextColor=0x7f050055;
    public static final int list_editor_text_color=0x7f050056;
    public static final int list_item_disabled_text_color=0x7f050057;
    public static final int material_blue_grey_800=0x7f050058;
    public static final int material_blue_grey_900=0x7f050059;
    public static final int material_blue_grey_950=0x7f05005a;
    public static final int material_deep_teal_200=0x7f05005b;
    public static final int material_deep_teal_500=0x7f05005c;
    public static final int material_grey_100=0x7f05005d;
    public static final int material_grey_300=0x7f05005e;
    public static final int material_grey_50=0x7f05005f;
    public static final int material_grey_600=0x7f050060;
    public static final int material_grey_800=0x7f050061;
    public static final int material_grey_850=0x7f050062;
    public static final int material_grey_900=0x7f050063;
    public static final int mtrl_bottom_nav_colored_item_tint=0x7f050064;
    public static final int mtrl_bottom_nav_item_tint=0x7f050065;
    public static final int mtrl_btn_bg_color_disabled=0x7f050066;
    public static final int mtrl_btn_bg_color_selector=0x7f050067;
    public static final int mtrl_btn_ripple_color=0x7f050068;
    public static final int mtrl_btn_stroke_color_selector=0x7f050069;
    public static final int mtrl_btn_text_btn_ripple_color=0x7f05006a;
    public static final int mtrl_btn_text_color_disabled=0x7f05006b;
    public static final int mtrl_btn_text_color_selector=0x7f05006c;
    public static final int mtrl_btn_transparent_bg_color=0x7f05006d;
    public static final int mtrl_chip_background_color=0x7f05006e;
    public static final int mtrl_chip_close_icon_tint=0x7f05006f;
    public static final int mtrl_chip_ripple_color=0x7f050070;
    public static final int mtrl_chip_text_color=0x7f050071;
    public static final int mtrl_fab_ripple_color=0x7f050072;
    public static final int mtrl_scrim_color=0x7f050073;
    public static final int mtrl_tabs_colored_ripple_color=0x7f050074;
    public static final int mtrl_tabs_icon_color_selector=0x7f050075;
    public static final int mtrl_tabs_icon_color_selector_colored=0x7f050076;
    public static final int mtrl_tabs_legacy_text_color_selector=0x7f050077;
    public static final int mtrl_tabs_ripple_color=0x7f050078;
    public static final int mtrl_text_btn_text_color_selector=0x7f050079;
    public static final int mtrl_textinput_default_box_stroke_color=0x7f05007a;
    public static final int mtrl_textinput_disabled_color=0x7f05007b;
    public static final int mtrl_textinput_filled_box_default_background_color=0x7f05007c;
    public static final int mtrl_textinput_hovered_box_stroke_color=0x7f05007d;
    public static final int nativescript_blue=0x7f05007e;
    public static final int notification_action_color_filter=0x7f05007f;
    public static final int notification_icon_bg_color=0x7f050080;
    public static final int notification_material_background_media_default_color=0x7f050081;
    public static final int ns_accent=0x7f050082;
    public static final int ns_blue=0x7f050083;
    public static final int ns_primary=0x7f050084;
    public static final int ns_primaryDark=0x7f050085;
    public static final int pressedColor=0x7f050086;
    public static final int primary_dark_material_dark=0x7f050087;
    public static final int primary_dark_material_light=0x7f050088;
    public static final int primary_material_dark=0x7f050089;
    public static final int primary_material_light=0x7f05008a;
    public static final int primary_text_default_material_dark=0x7f05008b;
    public static final int primary_text_default_material_light=0x7f05008c;
    public static final int primary_text_disabled_material_dark=0x7f05008d;
    public static final int primary_text_disabled_material_light=0x7f05008e;
    public static final int ripple_material_dark=0x7f05008f;
    public static final int ripple_material_light=0x7f050090;
    public static final int secondary_text_default_material_dark=0x7f050091;
    public static final int secondary_text_default_material_light=0x7f050092;
    public static final int secondary_text_disabled_material_dark=0x7f050093;
    public static final int secondary_text_disabled_material_light=0x7f050094;
    public static final int selectionColor=0x7f050095;
    public static final int shadeColor=0x7f050096;
    public static final int shadeColorCenter=0x7f050097;
    public static final int switch_thumb_disabled_material_dark=0x7f050098;
    public static final int switch_thumb_disabled_material_light=0x7f050099;
    public static final int switch_thumb_material_dark=0x7f05009a;
    public static final int switch_thumb_material_light=0x7f05009b;
    public static final int switch_thumb_normal_material_dark=0x7f05009c;
    public static final int switch_thumb_normal_material_light=0x7f05009d;
    public static final int token_normal=0x7f05009e;
    public static final int token_selected=0x7f05009f;
    public static final int tooltip_background_dark=0x7f0500a0;
    public static final int tooltip_background_light=0x7f0500a1;
    public static final int transparent=0x7f0500a2;
    public static final int white=0x7f0500a3;
  }
  public static final class dimen {
    public static final int abc_action_bar_content_inset_material=0x7f060000;
    public static final int abc_action_bar_content_inset_with_nav=0x7f060001;
    public static final int abc_action_bar_default_height_material=0x7f060002;
    public static final int abc_action_bar_default_padding_end_material=0x7f060003;
    public static final int abc_action_bar_default_padding_start_material=0x7f060004;
    public static final int abc_action_bar_elevation_material=0x7f060005;
    public static final int abc_action_bar_icon_vertical_padding_material=0x7f060006;
    public static final int abc_action_bar_overflow_padding_end_material=0x7f060007;
    public static final int abc_action_bar_overflow_padding_start_material=0x7f060008;
    public static final int abc_action_bar_stacked_max_height=0x7f060009;
    public static final int abc_action_bar_stacked_tab_max_width=0x7f06000a;
    public static final int abc_action_bar_subtitle_bottom_margin_material=0x7f06000b;
    public static final int abc_action_bar_subtitle_top_margin_material=0x7f06000c;
    public static final int abc_action_button_min_height_material=0x7f06000d;
    public static final int abc_action_button_min_width_material=0x7f06000e;
    public static final int abc_action_button_min_width_overflow_material=0x7f06000f;
    public static final int abc_alert_dialog_button_bar_height=0x7f060010;
    public static final int abc_alert_dialog_button_dimen=0x7f060011;
    public static final int abc_button_inset_horizontal_material=0x7f060012;
    public static final int abc_button_inset_vertical_material=0x7f060013;
    public static final int abc_button_padding_horizontal_material=0x7f060014;
    public static final int abc_button_padding_vertical_material=0x7f060015;
    public static final int abc_cascading_menus_min_smallest_width=0x7f060016;
    public static final int abc_config_prefDialogWidth=0x7f060017;
    public static final int abc_control_corner_material=0x7f060018;
    public static final int abc_control_inset_material=0x7f060019;
    public static final int abc_control_padding_material=0x7f06001a;
    public static final int abc_dialog_corner_radius_material=0x7f06001b;
    public static final int abc_dialog_fixed_height_major=0x7f06001c;
    public static final int abc_dialog_fixed_height_minor=0x7f06001d;
    public static final int abc_dialog_fixed_width_major=0x7f06001e;
    public static final int abc_dialog_fixed_width_minor=0x7f06001f;
    public static final int abc_dialog_list_padding_bottom_no_buttons=0x7f060020;
    public static final int abc_dialog_list_padding_top_no_title=0x7f060021;
    public static final int abc_dialog_min_width_major=0x7f060022;
    public static final int abc_dialog_min_width_minor=0x7f060023;
    public static final int abc_dialog_padding_material=0x7f060024;
    public static final int abc_dialog_padding_top_material=0x7f060025;
    public static final int abc_dialog_title_divider_material=0x7f060026;
    public static final int abc_disabled_alpha_material_dark=0x7f060027;
    public static final int abc_disabled_alpha_material_light=0x7f060028;
    public static final int abc_dropdownitem_icon_width=0x7f060029;
    public static final int abc_dropdownitem_text_padding_left=0x7f06002a;
    public static final int abc_dropdownitem_text_padding_right=0x7f06002b;
    public static final int abc_edit_text_inset_bottom_material=0x7f06002c;
    public static final int abc_edit_text_inset_horizontal_material=0x7f06002d;
    public static final int abc_edit_text_inset_top_material=0x7f06002e;
    public static final int abc_floating_window_z=0x7f06002f;
    public static final int abc_list_item_padding_horizontal_material=0x7f060030;
    public static final int abc_panel_menu_list_width=0x7f060031;
    public static final int abc_progress_bar_height_material=0x7f060032;
    public static final int abc_search_view_preferred_height=0x7f060033;
    public static final int abc_search_view_preferred_width=0x7f060034;
    public static final int abc_seekbar_track_background_height_material=0x7f060035;
    public static final int abc_seekbar_track_progress_height_material=0x7f060036;
    public static final int abc_select_dialog_padding_start_material=0x7f060037;
    public static final int abc_switch_padding=0x7f060038;
    public static final int abc_text_size_body_1_material=0x7f060039;
    public static final int abc_text_size_body_2_material=0x7f06003a;
    public static final int abc_text_size_button_material=0x7f06003b;
    public static final int abc_text_size_caption_material=0x7f06003c;
    public static final int abc_text_size_display_1_material=0x7f06003d;
    public static final int abc_text_size_display_2_material=0x7f06003e;
    public static final int abc_text_size_display_3_material=0x7f06003f;
    public static final int abc_text_size_display_4_material=0x7f060040;
    public static final int abc_text_size_headline_material=0x7f060041;
    public static final int abc_text_size_large_material=0x7f060042;
    public static final int abc_text_size_medium_material=0x7f060043;
    public static final int abc_text_size_menu_header_material=0x7f060044;
    public static final int abc_text_size_menu_material=0x7f060045;
    public static final int abc_text_size_small_material=0x7f060046;
    public static final int abc_text_size_subhead_material=0x7f060047;
    public static final int abc_text_size_subtitle_material_toolbar=0x7f060048;
    public static final int abc_text_size_title_material=0x7f060049;
    public static final int abc_text_size_title_material_toolbar=0x7f06004a;
    public static final int autocomplete_icon_spacing=0x7f06004b;
    public static final int autocomplete_min_text_width=0x7f06004c;
    public static final int browser_actions_context_menu_max_width=0x7f06004d;
    public static final int browser_actions_context_menu_min_padding=0x7f06004e;
    public static final int card_deck_translation=0x7f06004f;
    public static final int cardview_compat_inset_shadow=0x7f060050;
    public static final int cardview_default_elevation=0x7f060051;
    public static final int cardview_default_radius=0x7f060052;
    public static final int compat_button_inset_horizontal_material=0x7f060053;
    public static final int compat_button_inset_vertical_material=0x7f060054;
    public static final int compat_button_padding_horizontal_material=0x7f060055;
    public static final int compat_button_padding_vertical_material=0x7f060056;
    public static final int compat_control_corner_material=0x7f060057;
    public static final int compat_notification_large_icon_max_height=0x7f060058;
    public static final int compat_notification_large_icon_max_width=0x7f060059;
    public static final int data_form_editor_header_text_size=0x7f06005a;
    public static final int data_form_editor_height=0x7f06005b;
    public static final int data_form_editor_margin_horizontal=0x7f06005c;
    public static final int data_form_editor_padding_horizontal=0x7f06005d;
    public static final int data_form_editor_padding_vertical=0x7f06005e;
    public static final int data_form_editor_text_size=0x7f06005f;
    public static final int data_form_editor_validation_text_size=0x7f060060;
    public static final int date_text_size_year_mode=0x7f060061;
    public static final int design_appbar_elevation=0x7f060062;
    public static final int design_bottom_navigation_active_item_max_width=0x7f060063;
    public static final int design_bottom_navigation_active_item_min_width=0x7f060064;
    public static final int design_bottom_navigation_active_text_size=0x7f060065;
    public static final int design_bottom_navigation_elevation=0x7f060066;
    public static final int design_bottom_navigation_height=0x7f060067;
    public static final int design_bottom_navigation_icon_size=0x7f060068;
    public static final int design_bottom_navigation_item_max_width=0x7f060069;
    public static final int design_bottom_navigation_item_min_width=0x7f06006a;
    public static final int design_bottom_navigation_margin=0x7f06006b;
    public static final int design_bottom_navigation_shadow_height=0x7f06006c;
    public static final int design_bottom_navigation_text_size=0x7f06006d;
    public static final int design_bottom_sheet_modal_elevation=0x7f06006e;
    public static final int design_bottom_sheet_peek_height_min=0x7f06006f;
    public static final int design_fab_border_width=0x7f060070;
    public static final int design_fab_elevation=0x7f060071;
    public static final int design_fab_image_size=0x7f060072;
    public static final int design_fab_size_mini=0x7f060073;
    public static final int design_fab_size_normal=0x7f060074;
    public static final int design_fab_translation_z_hovered_focused=0x7f060075;
    public static final int design_fab_translation_z_pressed=0x7f060076;
    public static final int design_navigation_elevation=0x7f060077;
    public static final int design_navigation_icon_padding=0x7f060078;
    public static final int design_navigation_icon_size=0x7f060079;
    public static final int design_navigation_item_horizontal_padding=0x7f06007a;
    public static final int design_navigation_item_icon_padding=0x7f06007b;
    public static final int design_navigation_max_width=0x7f06007c;
    public static final int design_navigation_padding_bottom=0x7f06007d;
    public static final int design_navigation_separator_vertical_padding=0x7f06007e;
    public static final int design_snackbar_action_inline_max_width=0x7f06007f;
    public static final int design_snackbar_background_corner_radius=0x7f060080;
    public static final int design_snackbar_elevation=0x7f060081;
    public static final int design_snackbar_extra_spacing_horizontal=0x7f060082;
    public static final int design_snackbar_max_width=0x7f060083;
    public static final int design_snackbar_min_width=0x7f060084;
    public static final int design_snackbar_padding_horizontal=0x7f060085;
    public static final int design_snackbar_padding_vertical=0x7f060086;
    public static final int design_snackbar_padding_vertical_2lines=0x7f060087;
    public static final int design_snackbar_text_size=0x7f060088;
    public static final int design_tab_max_width=0x7f060089;
    public static final int design_tab_scrollable_min_width=0x7f06008a;
    public static final int design_tab_text_size=0x7f06008b;
    public static final int design_tab_text_size_2line=0x7f06008c;
    public static final int design_textinput_caption_translate_y=0x7f06008d;
    public static final int disabled_alpha_material_dark=0x7f06008e;
    public static final int disabled_alpha_material_light=0x7f06008f;
    public static final int fastscroll_default_thickness=0x7f060090;
    public static final int fastscroll_margin=0x7f060091;
    public static final int fastscroll_minimum_range=0x7f060092;
    public static final int highlight_alpha_material_colored=0x7f060093;
    public static final int highlight_alpha_material_dark=0x7f060094;
    public static final int highlight_alpha_material_light=0x7f060095;
    public static final int hint_alpha_material_dark=0x7f060096;
    public static final int hint_alpha_material_light=0x7f060097;
    public static final int hint_pressed_alpha_material_dark=0x7f060098;
    public static final int hint_pressed_alpha_material_light=0x7f060099;
    public static final int item_touch_helper_max_drag_scroll_per_frame=0x7f06009a;
    public static final int item_touch_helper_swipe_escape_max_velocity=0x7f06009b;
    public static final int item_touch_helper_swipe_escape_velocity=0x7f06009c;
    public static final int legend_stroke_width=0x7f06009d;
    public static final int mtrl_bottomappbar_fabOffsetEndMode=0x7f06009e;
    public static final int mtrl_bottomappbar_fab_cradle_margin=0x7f06009f;
    public static final int mtrl_bottomappbar_fab_cradle_rounded_corner_radius=0x7f0600a0;
    public static final int mtrl_bottomappbar_fab_cradle_vertical_offset=0x7f0600a1;
    public static final int mtrl_bottomappbar_height=0x7f0600a2;
    public static final int mtrl_btn_corner_radius=0x7f0600a3;
    public static final int mtrl_btn_dialog_btn_min_width=0x7f0600a4;
    public static final int mtrl_btn_disabled_elevation=0x7f0600a5;
    public static final int mtrl_btn_disabled_z=0x7f0600a6;
    public static final int mtrl_btn_elevation=0x7f0600a7;
    public static final int mtrl_btn_focused_z=0x7f0600a8;
    public static final int mtrl_btn_hovered_z=0x7f0600a9;
    public static final int mtrl_btn_icon_btn_padding_left=0x7f0600aa;
    public static final int mtrl_btn_icon_padding=0x7f0600ab;
    public static final int mtrl_btn_inset=0x7f0600ac;
    public static final int mtrl_btn_letter_spacing=0x7f0600ad;
    public static final int mtrl_btn_padding_bottom=0x7f0600ae;
    public static final int mtrl_btn_padding_left=0x7f0600af;
    public static final int mtrl_btn_padding_right=0x7f0600b0;
    public static final int mtrl_btn_padding_top=0x7f0600b1;
    public static final int mtrl_btn_pressed_z=0x7f0600b2;
    public static final int mtrl_btn_stroke_size=0x7f0600b3;
    public static final int mtrl_btn_text_btn_icon_padding=0x7f0600b4;
    public static final int mtrl_btn_text_btn_padding_left=0x7f0600b5;
    public static final int mtrl_btn_text_btn_padding_right=0x7f0600b6;
    public static final int mtrl_btn_text_size=0x7f0600b7;
    public static final int mtrl_btn_z=0x7f0600b8;
    public static final int mtrl_card_elevation=0x7f0600b9;
    public static final int mtrl_card_spacing=0x7f0600ba;
    public static final int mtrl_chip_pressed_translation_z=0x7f0600bb;
    public static final int mtrl_chip_text_size=0x7f0600bc;
    public static final int mtrl_fab_elevation=0x7f0600bd;
    public static final int mtrl_fab_translation_z_hovered_focused=0x7f0600be;
    public static final int mtrl_fab_translation_z_pressed=0x7f0600bf;
    public static final int mtrl_navigation_elevation=0x7f0600c0;
    public static final int mtrl_navigation_item_horizontal_padding=0x7f0600c1;
    public static final int mtrl_navigation_item_icon_padding=0x7f0600c2;
    public static final int mtrl_snackbar_background_corner_radius=0x7f0600c3;
    public static final int mtrl_snackbar_margin=0x7f0600c4;
    public static final int mtrl_textinput_box_bottom_offset=0x7f0600c5;
    public static final int mtrl_textinput_box_corner_radius_medium=0x7f0600c6;
    public static final int mtrl_textinput_box_corner_radius_small=0x7f0600c7;
    public static final int mtrl_textinput_box_label_cutout_padding=0x7f0600c8;
    public static final int mtrl_textinput_box_padding_end=0x7f0600c9;
    public static final int mtrl_textinput_box_stroke_width_default=0x7f0600ca;
    public static final int mtrl_textinput_box_stroke_width_focused=0x7f0600cb;
    public static final int mtrl_textinput_outline_box_expanded_padding=0x7f0600cc;
    public static final int mtrl_toolbar_default_height=0x7f0600cd;
    public static final int notification_action_icon_size=0x7f0600ce;
    public static final int notification_action_text_size=0x7f0600cf;
    public static final int notification_big_circle_margin=0x7f0600d0;
    public static final int notification_content_margin_start=0x7f0600d1;
    public static final int notification_large_icon_height=0x7f0600d2;
    public static final int notification_large_icon_width=0x7f0600d3;
    public static final int notification_main_column_padding_top=0x7f0600d4;
    public static final int notification_media_narrow_margin=0x7f0600d5;
    public static final int notification_right_icon_size=0x7f0600d6;
    public static final int notification_right_side_padding_top=0x7f0600d7;
    public static final int notification_small_icon_background_padding=0x7f0600d8;
    public static final int notification_small_icon_size_as_large=0x7f0600d9;
    public static final int notification_subtext_size=0x7f0600da;
    public static final int notification_top_pad=0x7f0600db;
    public static final int notification_top_pad_large_text=0x7f0600dc;
    public static final int subtitle_corner_radius=0x7f0600dd;
    public static final int subtitle_outline_width=0x7f0600de;
    public static final int subtitle_shadow_offset=0x7f0600df;
    public static final int subtitle_shadow_radius=0x7f0600e0;
    public static final int tooltip_corner_radius=0x7f0600e1;
    public static final int tooltip_horizontal_padding=0x7f0600e2;
    public static final int tooltip_margin=0x7f0600e3;
    public static final int tooltip_precise_anchor_extra_offset=0x7f0600e4;
    public static final int tooltip_precise_anchor_threshold=0x7f0600e5;
    public static final int tooltip_vertical_padding=0x7f0600e6;
    public static final int tooltip_y_offset_non_touch=0x7f0600e7;
    public static final int tooltip_y_offset_touch=0x7f0600e8;
    public static final int trackball_indicator_radius=0x7f0600e9;
  }
  public static final class drawable {
    public static final int abc_ab_share_pack_mtrl_alpha=0x7f070006;
    public static final int abc_action_bar_item_background_material=0x7f070007;
    public static final int abc_btn_borderless_material=0x7f070008;
    public static final int abc_btn_check_material=0x7f070009;
    public static final int abc_btn_check_to_on_mtrl_000=0x7f07000a;
    public static final int abc_btn_check_to_on_mtrl_015=0x7f07000b;
    public static final int abc_btn_colored_material=0x7f07000c;
    public static final int abc_btn_default_mtrl_shape=0x7f07000d;
    public static final int abc_btn_radio_material=0x7f07000e;
    public static final int abc_btn_radio_to_on_mtrl_000=0x7f07000f;
    public static final int abc_btn_radio_to_on_mtrl_015=0x7f070010;
    public static final int abc_btn_switch_to_on_mtrl_00001=0x7f070011;
    public static final int abc_btn_switch_to_on_mtrl_00012=0x7f070012;
    public static final int abc_cab_background_internal_bg=0x7f070013;
    public static final int abc_cab_background_top_material=0x7f070014;
    public static final int abc_cab_background_top_mtrl_alpha=0x7f070015;
    public static final int abc_control_background_material=0x7f070016;
    public static final int abc_dialog_material_background=0x7f070017;
    public static final int abc_edit_text_material=0x7f070018;
    public static final int abc_ic_ab_back_material=0x7f070019;
    public static final int abc_ic_arrow_drop_right_black_24dp=0x7f07001a;
    public static final int abc_ic_clear_material=0x7f07001b;
    public static final int abc_ic_commit_search_api_mtrl_alpha=0x7f07001c;
    public static final int abc_ic_go_search_api_material=0x7f07001d;
    public static final int abc_ic_menu_copy_mtrl_am_alpha=0x7f07001e;
    public static final int abc_ic_menu_cut_mtrl_alpha=0x7f07001f;
    public static final int abc_ic_menu_overflow_material=0x7f070020;
    public static final int abc_ic_menu_paste_mtrl_am_alpha=0x7f070021;
    public static final int abc_ic_menu_selectall_mtrl_alpha=0x7f070022;
    public static final int abc_ic_menu_share_mtrl_alpha=0x7f070023;
    public static final int abc_ic_search_api_material=0x7f070024;
    public static final int abc_ic_star_black_16dp=0x7f070025;
    public static final int abc_ic_star_black_36dp=0x7f070026;
    public static final int abc_ic_star_black_48dp=0x7f070027;
    public static final int abc_ic_star_half_black_16dp=0x7f070028;
    public static final int abc_ic_star_half_black_36dp=0x7f070029;
    public static final int abc_ic_star_half_black_48dp=0x7f07002a;
    public static final int abc_ic_voice_search_api_material=0x7f07002b;
    public static final int abc_item_background_holo_dark=0x7f07002c;
    public static final int abc_item_background_holo_light=0x7f07002d;
    public static final int abc_list_divider_material=0x7f07002e;
    public static final int abc_list_divider_mtrl_alpha=0x7f07002f;
    public static final int abc_list_focused_holo=0x7f070030;
    public static final int abc_list_longpressed_holo=0x7f070031;
    public static final int abc_list_pressed_holo_dark=0x7f070032;
    public static final int abc_list_pressed_holo_light=0x7f070033;
    public static final int abc_list_selector_background_transition_holo_dark=0x7f070034;
    public static final int abc_list_selector_background_transition_holo_light=0x7f070035;
    public static final int abc_list_selector_disabled_holo_dark=0x7f070036;
    public static final int abc_list_selector_disabled_holo_light=0x7f070037;
    public static final int abc_list_selector_holo_dark=0x7f070038;
    public static final int abc_list_selector_holo_light=0x7f070039;
    public static final int abc_menu_hardkey_panel_mtrl_mult=0x7f07003a;
    public static final int abc_popup_background_mtrl_mult=0x7f07003b;
    public static final int abc_ratingbar_indicator_material=0x7f07003c;
    public static final int abc_ratingbar_material=0x7f07003d;
    public static final int abc_ratingbar_small_material=0x7f07003e;
    public static final int abc_scrubber_control_off_mtrl_alpha=0x7f07003f;
    public static final int abc_scrubber_control_to_pressed_mtrl_000=0x7f070040;
    public static final int abc_scrubber_control_to_pressed_mtrl_005=0x7f070041;
    public static final int abc_scrubber_primary_mtrl_alpha=0x7f070042;
    public static final int abc_scrubber_track_mtrl_alpha=0x7f070043;
    public static final int abc_seekbar_thumb_material=0x7f070044;
    public static final int abc_seekbar_tick_mark_material=0x7f070045;
    public static final int abc_seekbar_track_material=0x7f070046;
    public static final int abc_spinner_mtrl_am_alpha=0x7f070047;
    public static final int abc_spinner_textfield_background_material=0x7f070048;
    public static final int abc_switch_thumb_material=0x7f070049;
    public static final int abc_switch_track_mtrl_alpha=0x7f07004a;
    public static final int abc_tab_indicator_material=0x7f07004b;
    public static final int abc_tab_indicator_mtrl_alpha=0x7f07004c;
    public static final int abc_text_cursor_material=0x7f07004d;
    public static final int abc_text_select_handle_left_mtrl_dark=0x7f07004e;
    public static final int abc_text_select_handle_left_mtrl_light=0x7f07004f;
    public static final int abc_text_select_handle_middle_mtrl_dark=0x7f070050;
    public static final int abc_text_select_handle_middle_mtrl_light=0x7f070051;
    public static final int abc_text_select_handle_right_mtrl_dark=0x7f070052;
    public static final int abc_text_select_handle_right_mtrl_light=0x7f070053;
    public static final int abc_textfield_activated_mtrl_alpha=0x7f070054;
    public static final int abc_textfield_default_mtrl_alpha=0x7f070055;
    public static final int abc_textfield_search_activated_mtrl_alpha=0x7f070056;
    public static final int abc_textfield_search_default_mtrl_alpha=0x7f070057;
    public static final int abc_textfield_search_material=0x7f070058;
    public static final int abc_vector_test=0x7f070059;
    public static final int autocomplete_bg_active=0x7f07005a;
    public static final int autocomplete_bg_normal=0x7f07005b;
    public static final int autocomplete_focusable_bg=0x7f07005c;
    public static final int avd_hide_password=0x7f07005d;
    public static final int avd_show_password=0x7f07005e;
    public static final int background=0x7f07005f;
    public static final int browse=0x7f070060;
    public static final int common_full_open_on_phone=0x7f070061;
    public static final int common_google_signin_btn_icon_dark=0x7f070062;
    public static final int common_google_signin_btn_icon_dark_focused=0x7f070063;
    public static final int common_google_signin_btn_icon_dark_normal=0x7f070064;
    public static final int common_google_signin_btn_icon_dark_normal_background=0x7f070065;
    public static final int common_google_signin_btn_icon_disabled=0x7f070066;
    public static final int common_google_signin_btn_icon_light=0x7f070067;
    public static final int common_google_signin_btn_icon_light_focused=0x7f070068;
    public static final int common_google_signin_btn_icon_light_normal=0x7f070069;
    public static final int common_google_signin_btn_icon_light_normal_background=0x7f07006a;
    public static final int common_google_signin_btn_text_dark=0x7f07006b;
    public static final int common_google_signin_btn_text_dark_focused=0x7f07006c;
    public static final int common_google_signin_btn_text_dark_normal=0x7f07006d;
    public static final int common_google_signin_btn_text_dark_normal_background=0x7f07006e;
    public static final int common_google_signin_btn_text_disabled=0x7f07006f;
    public static final int common_google_signin_btn_text_light=0x7f070070;
    public static final int common_google_signin_btn_text_light_focused=0x7f070071;
    public static final int common_google_signin_btn_text_light_normal=0x7f070072;
    public static final int common_google_signin_btn_text_light_normal_background=0x7f070073;
    public static final int data_form_invalid_background=0x7f070074;
    public static final int data_form_invalid_icon=0x7f070075;
    public static final int data_form_list_item_states=0x7f070076;
    public static final int data_form_segment_checked=0x7f070077;
    public static final int data_form_segment_item=0x7f070078;
    public static final int data_form_segment_unchecked=0x7f070079;
    public static final int data_form_valid_background=0x7f07007a;
    public static final int data_form_valid_icon=0x7f07007b;
    public static final int dataform_number_picker_background=0x7f07007c;
    public static final int design_bottom_navigation_item_background=0x7f07007d;
    public static final int design_fab_background=0x7f07007e;
    public static final int design_ic_visibility=0x7f07007f;
    public static final int design_ic_visibility_off=0x7f070080;
    public static final int design_password_eye=0x7f070081;
    public static final int design_snackbar_background=0x7f070082;
    public static final int events_popup_bg=0x7f070083;
    public static final int favorites=0x7f070084;
    public static final int googleg_disabled_color_18=0x7f070085;
    public static final int googleg_standard_color_18=0x7f070086;
    public static final int hamburger=0x7f070087;
    public static final int hmb=0x7f070088;
    public static final int home=0x7f070089;
    public static final int ic_clear=0x7f07008a;
    public static final int ic_clear_white=0x7f07008b;
    public static final int ic_collapse=0x7f07008c;
    public static final int ic_collapse_dataform_group=0x7f07008d;
    public static final int ic_expand=0x7f07008e;
    public static final int ic_expand_dataform_group=0x7f07008f;
    public static final int ic_mtrl_chip_checked_black=0x7f070090;
    public static final int ic_mtrl_chip_checked_circle=0x7f070091;
    public static final int ic_mtrl_chip_close_circle=0x7f070092;
    public static final int ic_token_remove=0x7f070093;
    public static final int ic_token_remove_pressed=0x7f070094;
    public static final int icon=0x7f070095;
    public static final int logo=0x7f070096;
    public static final int menu=0x7f070097;
    public static final int mtrl_snackbar_background=0x7f070098;
    public static final int mtrl_tabs_default_indicator=0x7f070099;
    public static final int navigation_empty_icon=0x7f07009a;
    public static final int notification_action_background=0x7f07009b;
    public static final int notification_bg=0x7f07009c;
    public static final int notification_bg_low=0x7f07009d;
    public static final int notification_bg_low_normal=0x7f07009e;
    public static final int notification_bg_low_pressed=0x7f07009f;
    public static final int notification_bg_normal=0x7f0700a0;
    public static final int notification_bg_normal_pressed=0x7f0700a1;
    public static final int notification_icon_background=0x7f0700a2;
    public static final int notification_template_icon_bg=0x7f0700a3;
    public static final int notification_template_icon_low_bg=0x7f0700a4;
    public static final int notification_tile_bg=0x7f0700a5;
    public static final int notify_panel_notification_icon_bg=0x7f0700a6;
    public static final int pressable_item_background=0x7f0700a7;
    public static final int search=0x7f0700a8;
    public static final int selectable_item_background=0x7f0700a9;
    public static final int settings=0x7f0700aa;
    public static final int shade_bottom=0x7f0700ab;
    public static final int shade_corner=0x7f0700ac;
    public static final int shade_right=0x7f0700ad;
    public static final int splash_screen=0x7f0700ae;
    public static final int token_bg=0x7f0700af;
    public static final int token_default=0x7f0700b0;
    public static final int token_selected=0x7f0700b1;
    public static final int token_text_color=0x7f0700b2;
    public static final int tooltip_frame_dark=0x7f0700b3;
    public static final int tooltip_frame_light=0x7f0700b4;
  }
  public static final class id {
    public static final int ALT=0x7f080000;
    public static final int BetweenTicks=0x7f080001;
    public static final int Block=0x7f080002;
    public static final int Bottom=0x7f080003;
    public static final int CTRL=0x7f080004;
    public static final int Clip=0x7f080005;
    public static final int Cluster=0x7f080006;
    public static final int Date=0x7f080007;
    public static final int Day=0x7f080008;
    public static final int DayOfWeek=0x7f080009;
    public static final int DayOfYear=0x7f08000a;
    public static final int FUNCTION=0x7f08000b;
    public static final int Hidden=0x7f08000c;
    public static final int Hour=0x7f08000d;
    public static final int Inline=0x7f08000e;
    public static final int Left=0x7f08000f;
    public static final int META=0x7f080010;
    public static final int Millisecond=0x7f080011;
    public static final int Minute=0x7f080012;
    public static final int Month=0x7f080013;
    public static final int Multiline=0x7f080014;
    public static final int Multiple=0x7f080015;
    public static final int None=0x7f080016;
    public static final int OnTicks=0x7f080017;
    public static final int OnTicksPadded=0x7f080018;
    public static final int Quarter=0x7f080019;
    public static final int Range=0x7f08001a;
    public static final int Right=0x7f08001b;
    public static final int Rotate=0x7f08001c;
    public static final int SHIFT=0x7f08001d;
    public static final int SYM=0x7f08001e;
    public static final int Second=0x7f08001f;
    public static final int Single=0x7f080020;
    public static final int Stack=0x7f080021;
    public static final int Stack100=0x7f080022;
    public static final int TimeOfDay=0x7f080023;
    public static final int Top=0x7f080024;
    public static final int Visible=0x7f080025;
    public static final int Week=0x7f080026;
    public static final int Year=0x7f080027;
    public static final int action0=0x7f080028;
    public static final int action_bar=0x7f080029;
    public static final int action_bar_activity_content=0x7f08002a;
    public static final int action_bar_container=0x7f08002b;
    public static final int action_bar_root=0x7f08002c;
    public static final int action_bar_spinner=0x7f08002d;
    public static final int action_bar_subtitle=0x7f08002e;
    public static final int action_bar_title=0x7f08002f;
    public static final int action_container=0x7f080030;
    public static final int action_context_bar=0x7f080031;
    public static final int action_divider=0x7f080032;
    public static final int action_image=0x7f080033;
    public static final int action_menu_divider=0x7f080034;
    public static final int action_menu_presenter=0x7f080035;
    public static final int action_mode_bar=0x7f080036;
    public static final int action_mode_bar_stub=0x7f080037;
    public static final int action_mode_close_button=0x7f080038;
    public static final int action_text=0x7f080039;
    public static final int actions=0x7f08003a;
    public static final int activity_chooser_view_content=0x7f08003b;
    public static final int add=0x7f08003c;
    public static final int adjust_height=0x7f08003d;
    public static final int adjust_width=0x7f08003e;
    public static final int alertTitle=0x7f08003f;
    public static final int all=0x7f080040;
    public static final int always=0x7f080041;
    public static final int areaText=0x7f080042;
    public static final int async=0x7f080043;
    public static final int auto=0x7f080044;
    public static final int beginning=0x7f080045;
    public static final int blank_view=0x7f080046;
    public static final int blocking=0x7f080047;
    public static final int both=0x7f080048;
    public static final int bottom=0x7f080049;
    public static final int browser_actions_header_text=0x7f08004a;
    public static final int browser_actions_menu_item_icon=0x7f08004b;
    public static final int browser_actions_menu_item_text=0x7f08004c;
    public static final int browser_actions_menu_items=0x7f08004d;
    public static final int browser_actions_menu_view=0x7f08004e;
    public static final int btnCopyException=0x7f08004f;
    public static final int btnCopyLogcat=0x7f080050;
    public static final int buttonPanel=0x7f080051;
    public static final int cancel_action=0x7f080052;
    public static final int center=0x7f080053;
    public static final int centerCrop=0x7f080054;
    public static final int centerInside=0x7f080055;
    public static final int center_horizontal=0x7f080056;
    public static final int center_vertical=0x7f080057;
    public static final int chart_data_point_content_container=0x7f080058;
    public static final int chart_layout_root=0x7f080059;
    public static final int chart_tooltip_category=0x7f08005a;
    public static final int chart_tooltip_pointer=0x7f08005b;
    public static final int chart_tooltip_value=0x7f08005c;
    public static final int chart_trackball_category=0x7f08005d;
    public static final int chart_trackball_value=0x7f08005e;
    public static final int checkbox=0x7f08005f;
    public static final int chronometer=0x7f080060;
    public static final int clip_horizontal=0x7f080061;
    public static final int clip_vertical=0x7f080062;
    public static final int closeText=0x7f080063;
    public static final int collapseActionView=0x7f080064;
    public static final int container=0x7f080065;
    public static final int content=0x7f080066;
    public static final int contentPanel=0x7f080067;
    public static final int coordinator=0x7f080068;
    public static final int custom=0x7f080069;
    public static final int customPanel=0x7f08006a;
    public static final int dark=0x7f08006b;
    public static final int data_form_autocomplete_editor=0x7f08006c;
    public static final int data_form_checkbox_editor=0x7f08006d;
    public static final int data_form_date_editor=0x7f08006e;
    public static final int data_form_decimal_editor=0x7f08006f;
    public static final int data_form_editor_container=0x7f080070;
    public static final int data_form_editor_group_container=0x7f080071;
    public static final int data_form_editor_image=0x7f080072;
    public static final int data_form_editor_main=0x7f080073;
    public static final int data_form_editor_main_container=0x7f080074;
    public static final int data_form_expandable_group_expand_button=0x7f080075;
    public static final int data_form_group_header=0x7f080076;
    public static final int data_form_group_header_container=0x7f080077;
    public static final int data_form_header_container=0x7f080078;
    public static final int data_form_integer_editor=0x7f080079;
    public static final int data_form_label_editor=0x7f08007a;
    public static final int data_form_list_editor=0x7f08007b;
    public static final int data_form_number_picker_editor=0x7f08007c;
    public static final int data_form_rad_autocomplete_editor=0x7f08007d;
    public static final int data_form_radio_group=0x7f08007e;
    public static final int data_form_root_layout=0x7f08007f;
    public static final int data_form_seekbar_editor=0x7f080080;
    public static final int data_form_spinner_editor=0x7f080081;
    public static final int data_form_switch_editor=0x7f080082;
    public static final int data_form_text_editor=0x7f080083;
    public static final int data_form_text_viewer=0x7f080084;
    public static final int data_form_text_viewer_header=0x7f080085;
    public static final int data_form_time_editor=0x7f080086;
    public static final int data_form_toggle_editor=0x7f080087;
    public static final int data_form_validation_container=0x7f080088;
    public static final int data_form_validation_icon=0x7f080089;
    public static final int data_form_validation_message_view=0x7f08008a;
    public static final int decor_content_parent=0x7f08008b;
    public static final int default_activity_button=0x7f08008c;
    public static final int design_bottom_sheet=0x7f08008d;
    public static final int design_menu_item_action_area=0x7f08008e;
    public static final int design_menu_item_action_area_stub=0x7f08008f;
    public static final int design_menu_item_text=0x7f080090;
    public static final int design_navigation_view=0x7f080091;
    public static final int disableHome=0x7f080092;
    public static final int edge=0x7f080093;
    public static final int edit_query=0x7f080094;
    public static final int emptyContent=0x7f080095;
    public static final int end=0x7f080096;
    public static final int end_padder=0x7f080097;
    public static final int enterAlways=0x7f080098;
    public static final int enterAlwaysCollapsed=0x7f080099;
    public static final int event_details=0x7f08009a;
    public static final int event_title=0x7f08009b;
    public static final int exitUntilCollapsed=0x7f08009c;
    public static final int expand_activities_button=0x7f08009d;
    public static final int expanded_menu=0x7f08009e;
    public static final int fill=0x7f08009f;
    public static final int fill_horizontal=0x7f0800a0;
    public static final int fill_vertical=0x7f0800a1;
    public static final int filled=0x7f0800a2;
    public static final int fitBottomStart=0x7f0800a3;
    public static final int fitCenter=0x7f0800a4;
    public static final int fitEnd=0x7f0800a5;
    public static final int fitStart=0x7f0800a6;
    public static final int fitXY=0x7f0800a7;
    public static final int fixed=0x7f0800a8;
    public static final int focusCrop=0x7f0800a9;
    public static final int forever=0x7f0800aa;
    public static final int ghost_view=0x7f0800ab;
    public static final int groupHeaderCollapseImage=0x7f0800ac;
    public static final int groupHeaderText=0x7f0800ad;
    public static final int group_divider=0x7f0800ae;
    public static final int highText=0x7f0800af;
    public static final int home=0x7f0800b0;
    public static final int homeAsUp=0x7f0800b1;
    public static final int horizontal=0x7f0800b2;
    public static final int icon=0x7f0800b3;
    public static final int icon_group=0x7f0800b4;
    public static final int icon_only=0x7f0800b5;
    public static final int ifRoom=0x7f0800b6;
    public static final int image=0x7f0800b7;
    public static final int imageView=0x7f0800b8;
    public static final int info=0x7f0800b9;
    public static final int inline_event_end=0x7f0800ba;
    public static final int inline_event_start=0x7f0800bb;
    public static final int inline_event_title=0x7f0800bc;
    public static final int inner=0x7f0800bd;
    public static final int italic=0x7f0800be;
    public static final int item_touch_helper_previous_elevation=0x7f0800bf;
    public static final int labeled=0x7f0800c0;
    public static final int largeLabel=0x7f0800c1;
    public static final int left=0x7f0800c2;
    public static final int legendItemIconView=0x7f0800c3;
    public static final int legendItemTitleView=0x7f0800c4;
    public static final int legendRecyclerView=0x7f0800c5;
    public static final int legendTitleView=0x7f0800c6;
    public static final int light=0x7f0800c7;
    public static final int line1=0x7f0800c8;
    public static final int line3=0x7f0800c9;
    public static final int linearLayout=0x7f0800ca;
    public static final int listMode=0x7f0800cb;
    public static final int list_item=0x7f0800cc;
    public static final int logcatLinearLayout=0x7f0800cd;
    public static final int logcatMsg=0x7f0800ce;
    public static final int lowText=0x7f0800cf;
    public static final int masked=0x7f0800d0;
    public static final int media_actions=0x7f0800d1;
    public static final int message=0x7f0800d2;
    public static final int middle=0x7f0800d3;
    public static final int mini=0x7f0800d4;
    public static final int mtrl_child_content_container=0x7f0800d5;
    public static final int mtrl_internal_children_alpha_tag=0x7f0800d6;
    public static final int multiply=0x7f0800d7;
    public static final int name=0x7f0800d8;
    public static final int navItemsLayout=0x7f0800d9;
    public static final int navigationItemText=0x7f0800da;
    public static final int navigation_header_container=0x7f0800db;
    public static final int never=0x7f0800dc;
    public static final int none=0x7f0800dd;
    public static final int normal=0x7f0800de;
    public static final int notification_background=0x7f0800df;
    public static final int notification_main_column=0x7f0800e0;
    public static final int notification_main_column_container=0x7f0800e1;
    public static final int number_picker_minus=0x7f0800e2;
    public static final int number_picker_plus=0x7f0800e3;
    public static final int number_picker_root=0x7f0800e4;
    public static final int number_picker_view=0x7f0800e5;
    public static final int openText=0x7f0800e6;
    public static final int outer=0x7f0800e7;
    public static final int outline=0x7f0800e8;
    public static final int pager=0x7f0800e9;
    public static final int parallax=0x7f0800ea;
    public static final int parentPanel=0x7f0800eb;
    public static final int parent_matrix=0x7f0800ec;
    public static final int pin=0x7f0800ed;
    public static final int popup_event_time=0x7f0800ee;
    public static final int popup_event_title=0x7f0800ef;
    public static final int progress_circular=0x7f0800f0;
    public static final int progress_horizontal=0x7f0800f1;
    public static final int radio=0x7f0800f2;
    public static final int renderSurface=0x7f0800f3;
    public static final int right=0x7f0800f4;
    public static final int right_icon=0x7f0800f5;
    public static final int right_side=0x7f0800f6;
    public static final int round=0x7f0800f7;
    public static final int save_image_matrix=0x7f0800f8;
    public static final int save_non_transition_alpha=0x7f0800f9;
    public static final int save_scale_type=0x7f0800fa;
    public static final int screen=0x7f0800fb;
    public static final int scroll=0x7f0800fc;
    public static final int scrollIndicatorDown=0x7f0800fd;
    public static final int scrollIndicatorUp=0x7f0800fe;
    public static final int scrollView=0x7f0800ff;
    public static final int scrollable=0x7f080100;
    public static final int search_badge=0x7f080101;
    public static final int search_bar=0x7f080102;
    public static final int search_button=0x7f080103;
    public static final int search_close_btn=0x7f080104;
    public static final int search_edit_frame=0x7f080105;
    public static final int search_go_btn=0x7f080106;
    public static final int search_mag_icon=0x7f080107;
    public static final int search_plate=0x7f080108;
    public static final int search_src_text=0x7f080109;
    public static final int search_voice_btn=0x7f08010a;
    public static final int select_dialog_listview=0x7f08010b;
    public static final int selected=0x7f08010c;
    public static final int shortcut=0x7f08010d;
    public static final int showCustom=0x7f08010e;
    public static final int showHome=0x7f08010f;
    public static final int showTitle=0x7f080110;
    public static final int smallLabel=0x7f080111;
    public static final int snackbar_action=0x7f080112;
    public static final int snackbar_text=0x7f080113;
    public static final int snap=0x7f080114;
    public static final int snapMargins=0x7f080115;
    public static final int spacer=0x7f080116;
    public static final int split_action_bar=0x7f080117;
    public static final int src_atop=0x7f080118;
    public static final int src_in=0x7f080119;
    public static final int src_over=0x7f08011a;
    public static final int standard=0x7f08011b;
    public static final int start=0x7f08011c;
    public static final int status_bar_latest_event_content=0x7f08011d;
    public static final int stretch=0x7f08011e;
    public static final int submenuarrow=0x7f08011f;
    public static final int submit_area=0x7f080120;
    public static final int suggestion_img=0x7f080121;
    public static final int suggestion_text=0x7f080122;
    public static final int tabLayout=0x7f080123;
    public static final int tabMode=0x7f080124;
    public static final int tag_transition_group=0x7f080125;
    public static final int tag_unhandled_key_event_manager=0x7f080126;
    public static final int tag_unhandled_key_listeners=0x7f080127;
    public static final int text=0x7f080128;
    public static final int text1=0x7f080129;
    public static final int text2=0x7f08012a;
    public static final int textSpacerNoButtons=0x7f08012b;
    public static final int textSpacerNoTitle=0x7f08012c;
    public static final int textStart=0x7f08012d;
    public static final int text_input_password_toggle=0x7f08012e;
    public static final int textinput_counter=0x7f08012f;
    public static final int textinput_error=0x7f080130;
    public static final int textinput_helper_text=0x7f080131;
    public static final int time=0x7f080132;
    public static final int title=0x7f080133;
    public static final int titleDividerNoCustom=0x7f080134;
    public static final int title_template=0x7f080135;
    public static final int tokenimage=0x7f080136;
    public static final int tokentext=0x7f080137;
    public static final int toolbar=0x7f080138;
    public static final int tooltip_content_container=0x7f080139;
    public static final int top=0x7f08013a;
    public static final int topPanel=0x7f08013b;
    public static final int touch_outside=0x7f08013c;
    public static final int trackball_points_list=0x7f08013d;
    public static final int transition_current_scene=0x7f08013e;
    public static final int transition_layout_save=0x7f08013f;
    public static final int transition_position=0x7f080140;
    public static final int transition_scene_layoutid_cache=0x7f080141;
    public static final int transition_transform=0x7f080142;
    public static final int txtErrorMsg=0x7f080143;
    public static final int uniform=0x7f080144;
    public static final int unlabeled=0x7f080145;
    public static final int up=0x7f080146;
    public static final int useLogo=0x7f080147;
    public static final int vertical=0x7f080148;
    public static final int view_offset_helper=0x7f080149;
    public static final int visible=0x7f08014a;
    public static final int wide=0x7f08014b;
    public static final int withText=0x7f08014c;
    public static final int wrap_content=0x7f08014d;
    public static final int xText=0x7f08014e;
    public static final int xview=0x7f08014f;
    public static final int yText=0x7f080150;
  }
  public static final class integer {
    public static final int abc_config_activityDefaultDur=0x7f090000;
    public static final int abc_config_activityShortDur=0x7f090001;
    public static final int app_bar_elevation_anim_duration=0x7f090002;
    public static final int bottom_sheet_slide_duration=0x7f090003;
    public static final int cancel_button_image_alpha=0x7f090004;
    public static final int config_tooltipAnimTime=0x7f090005;
    public static final int design_snackbar_text_max_lines=0x7f090006;
    public static final int design_tab_indicator_anim_duration_ms=0x7f090007;
    public static final int google_play_services_version=0x7f090008;
    public static final int hide_password_duration=0x7f090009;
    public static final int mtrl_btn_anim_delay_ms=0x7f09000a;
    public static final int mtrl_btn_anim_duration_ms=0x7f09000b;
    public static final int mtrl_chip_anim_duration=0x7f09000c;
    public static final int mtrl_tab_indicator_anim_duration_ms=0x7f09000d;
    public static final int show_password_duration=0x7f09000e;
    public static final int status_bar_notification_info_maxnum=0x7f09000f;
  }
  public static final class interpolator {
    public static final int mtrl_fast_out_linear_in=0x7f0a0000;
    public static final int mtrl_fast_out_slow_in=0x7f0a0001;
    public static final int mtrl_linear=0x7f0a0002;
    public static final int mtrl_linear_out_slow_in=0x7f0a0003;
  }
  public static final class layout {
    public static final int abc_action_bar_title_item=0x7f0b0000;
    public static final int abc_action_bar_up_container=0x7f0b0001;
    public static final int abc_action_menu_item_layout=0x7f0b0002;
    public static final int abc_action_menu_layout=0x7f0b0003;
    public static final int abc_action_mode_bar=0x7f0b0004;
    public static final int abc_action_mode_close_item_material=0x7f0b0005;
    public static final int abc_activity_chooser_view=0x7f0b0006;
    public static final int abc_activity_chooser_view_list_item=0x7f0b0007;
    public static final int abc_alert_dialog_button_bar_material=0x7f0b0008;
    public static final int abc_alert_dialog_material=0x7f0b0009;
    public static final int abc_alert_dialog_title_material=0x7f0b000a;
    public static final int abc_cascading_menu_item_layout=0x7f0b000b;
    public static final int abc_dialog_title_material=0x7f0b000c;
    public static final int abc_expanded_menu_layout=0x7f0b000d;
    public static final int abc_list_menu_item_checkbox=0x7f0b000e;
    public static final int abc_list_menu_item_icon=0x7f0b000f;
    public static final int abc_list_menu_item_layout=0x7f0b0010;
    public static final int abc_list_menu_item_radio=0x7f0b0011;
    public static final int abc_popup_menu_header_item_layout=0x7f0b0012;
    public static final int abc_popup_menu_item_layout=0x7f0b0013;
    public static final int abc_screen_content_include=0x7f0b0014;
    public static final int abc_screen_simple=0x7f0b0015;
    public static final int abc_screen_simple_overlay_action_mode=0x7f0b0016;
    public static final int abc_screen_toolbar=0x7f0b0017;
    public static final int abc_search_dropdown_item_icons_2line=0x7f0b0018;
    public static final int abc_search_view=0x7f0b0019;
    public static final int abc_select_dialog_material=0x7f0b001a;
    public static final int abc_tooltip=0x7f0b001b;
    public static final int browser_actions_context_menu_page=0x7f0b001c;
    public static final int browser_actions_context_menu_row=0x7f0b001d;
    public static final int calendar_all_day_event_view=0x7f0b001e;
    public static final int calendar_day_event_view=0x7f0b001f;
    public static final int data_form_autocomplete_editor=0x7f0b0020;
    public static final int data_form_checkbox_editor=0x7f0b0021;
    public static final int data_form_date_editor=0x7f0b0022;
    public static final int data_form_decimal_editor=0x7f0b0023;
    public static final int data_form_default_group_layout=0x7f0b0024;
    public static final int data_form_editor_header_layout_1=0x7f0b0025;
    public static final int data_form_editor_header_layout_2=0x7f0b0026;
    public static final int data_form_editor_header_layout_3=0x7f0b0027;
    public static final int data_form_editor_layout_1=0x7f0b0028;
    public static final int data_form_editor_layout_2=0x7f0b0029;
    public static final int data_form_editor_layout_3=0x7f0b002a;
    public static final int data_form_editor_validation_layout_1=0x7f0b002b;
    public static final int data_form_expandable_group_layout=0x7f0b002c;
    public static final int data_form_group_layout=0x7f0b002d;
    public static final int data_form_integer_editor=0x7f0b002e;
    public static final int data_form_label_editor=0x7f0b002f;
    public static final int data_form_linear_layout=0x7f0b0030;
    public static final int data_form_list_editor=0x7f0b0031;
    public static final int data_form_list_editor_item=0x7f0b0032;
    public static final int data_form_number_picker=0x7f0b0033;
    public static final int data_form_rad_autocomplete_editor=0x7f0b0034;
    public static final int data_form_radio_group_editor=0x7f0b0035;
    public static final int data_form_root_layout=0x7f0b0036;
    public static final int data_form_seek_bar_editor=0x7f0b0037;
    public static final int data_form_segmented_editor=0x7f0b0038;
    public static final int data_form_spinner_editor=0x7f0b0039;
    public static final int data_form_spinner_item=0x7f0b003a;
    public static final int data_form_switch_editor=0x7f0b003b;
    public static final int data_form_text_editor=0x7f0b003c;
    public static final int data_form_text_viewer=0x7f0b003d;
    public static final int data_form_time_editor=0x7f0b003e;
    public static final int data_form_toggle_button_editor=0x7f0b003f;
    public static final int default_tooltip_content=0x7f0b0040;
    public static final int default_tooltip_ohlc_content=0x7f0b0041;
    public static final int default_tooltip_scatter_bubble_content=0x7f0b0042;
    public static final int default_tooltip_scatter_content=0x7f0b0043;
    public static final int default_trackball_content=0x7f0b0044;
    public static final int default_trackball_item_content=0x7f0b0045;
    public static final int design_bottom_navigation_item=0x7f0b0046;
    public static final int design_bottom_sheet_dialog=0x7f0b0047;
    public static final int design_layout_snackbar=0x7f0b0048;
    public static final int design_layout_snackbar_include=0x7f0b0049;
    public static final int design_layout_tab_icon=0x7f0b004a;
    public static final int design_layout_tab_text=0x7f0b004b;
    public static final int design_menu_item_action_area=0x7f0b004c;
    public static final int design_navigation_item=0x7f0b004d;
    public static final int design_navigation_item_header=0x7f0b004e;
    public static final int design_navigation_item_separator=0x7f0b004f;
    public static final int design_navigation_item_subheader=0x7f0b0050;
    public static final int design_navigation_menu=0x7f0b0051;
    public static final int design_navigation_menu_item=0x7f0b0052;
    public static final int design_text_input_password_icon=0x7f0b0053;
    public static final int drawer_blur_fade_layer=0x7f0b0054;
    public static final int error_activity=0x7f0b0055;
    public static final int exception_tab=0x7f0b0056;
    public static final int inline_event=0x7f0b0057;
    public static final int legend_item_view=0x7f0b0058;
    public static final int logcat_tab=0x7f0b0059;
    public static final int mtrl_layout_snackbar=0x7f0b005a;
    public static final int mtrl_layout_snackbar_include=0x7f0b005b;
    public static final int navigation_drawer_content=0x7f0b005c;
    public static final int navigation_item_view=0x7f0b005d;
    public static final int notification_action=0x7f0b005e;
    public static final int notification_action_tombstone=0x7f0b005f;
    public static final int notification_media_action=0x7f0b0060;
    public static final int notification_media_cancel_action=0x7f0b0061;
    public static final int notification_template_big_media=0x7f0b0062;
    public static final int notification_template_big_media_custom=0x7f0b0063;
    public static final int notification_template_big_media_narrow=0x7f0b0064;
    public static final int notification_template_big_media_narrow_custom=0x7f0b0065;
    public static final int notification_template_custom_big=0x7f0b0066;
    public static final int notification_template_icon_group=0x7f0b0067;
    public static final int notification_template_lines_media=0x7f0b0068;
    public static final int notification_template_media=0x7f0b0069;
    public static final int notification_template_media_custom=0x7f0b006a;
    public static final int notification_template_part_chronometer=0x7f0b006b;
    public static final int notification_template_part_time=0x7f0b006c;
    public static final int number_picker=0x7f0b006d;
    public static final int ohlc_trackball_item_content=0x7f0b006e;
    public static final int on_demand_automatic=0x7f0b006f;
    public static final int on_demand_manual=0x7f0b0070;
    public static final int popup_event=0x7f0b0071;
    public static final int radchartbase=0x7f0b0072;
    public static final int radlegendcontrol=0x7f0b0073;
    public static final int range_trackball_item_content=0x7f0b0074;
    public static final int select_dialog_item_material=0x7f0b0075;
    public static final int select_dialog_multichoice_material=0x7f0b0076;
    public static final int select_dialog_singlechoice_material=0x7f0b0077;
    public static final int simple_empty_content=0x7f0b0078;
    public static final int simple_group_header_item=0x7f0b0079;
    public static final int simple_list_item=0x7f0b007a;
    public static final int suggestion_item_layout=0x7f0b007b;
    public static final int support_simple_spinner_dropdown_item=0x7f0b007c;
    public static final int token=0x7f0b007d;
    public static final int tooltip_container=0x7f0b007e;
    public static final int trackball_container=0x7f0b007f;
  }
  public static final class string {
    public static final int abc_action_bar_home_description=0x7f0c0000;
    public static final int abc_action_bar_up_description=0x7f0c0001;
    public static final int abc_action_menu_overflow_description=0x7f0c0002;
    public static final int abc_action_mode_done=0x7f0c0003;
    public static final int abc_activity_chooser_view_see_all=0x7f0c0004;
    public static final int abc_activitychooserview_choose_application=0x7f0c0005;
    public static final int abc_capital_off=0x7f0c0006;
    public static final int abc_capital_on=0x7f0c0007;
    public static final int abc_font_family_body_1_material=0x7f0c0008;
    public static final int abc_font_family_body_2_material=0x7f0c0009;
    public static final int abc_font_family_button_material=0x7f0c000a;
    public static final int abc_font_family_caption_material=0x7f0c000b;
    public static final int abc_font_family_display_1_material=0x7f0c000c;
    public static final int abc_font_family_display_2_material=0x7f0c000d;
    public static final int abc_font_family_display_3_material=0x7f0c000e;
    public static final int abc_font_family_display_4_material=0x7f0c000f;
    public static final int abc_font_family_headline_material=0x7f0c0010;
    public static final int abc_font_family_menu_material=0x7f0c0011;
    public static final int abc_font_family_subhead_material=0x7f0c0012;
    public static final int abc_font_family_title_material=0x7f0c0013;
    public static final int abc_menu_alt_shortcut_label=0x7f0c0014;
    public static final int abc_menu_ctrl_shortcut_label=0x7f0c0015;
    public static final int abc_menu_delete_shortcut_label=0x7f0c0016;
    public static final int abc_menu_enter_shortcut_label=0x7f0c0017;
    public static final int abc_menu_function_shortcut_label=0x7f0c0018;
    public static final int abc_menu_meta_shortcut_label=0x7f0c0019;
    public static final int abc_menu_shift_shortcut_label=0x7f0c001a;
    public static final int abc_menu_space_shortcut_label=0x7f0c001b;
    public static final int abc_menu_sym_shortcut_label=0x7f0c001c;
    public static final int abc_prepend_shortcut_label=0x7f0c001d;
    public static final int abc_search_hint=0x7f0c001e;
    public static final int abc_searchview_description_clear=0x7f0c001f;
    public static final int abc_searchview_description_query=0x7f0c0020;
    public static final int abc_searchview_description_search=0x7f0c0021;
    public static final int abc_searchview_description_submit=0x7f0c0022;
    public static final int abc_searchview_description_voice=0x7f0c0023;
    public static final int abc_shareactionprovider_share_with=0x7f0c0024;
    public static final int abc_shareactionprovider_share_with_application=0x7f0c0025;
    public static final int abc_toolbar_collapse_description=0x7f0c0026;
    public static final int app_name=0x7f0c0027;
    public static final int appbar_scrolling_view_behavior=0x7f0c0028;
    public static final int bottom_sheet_behavior=0x7f0c0029;
    public static final int character_counter_content_description=0x7f0c002a;
    public static final int character_counter_pattern=0x7f0c002b;
    public static final int common_google_play_services_enable_button=0x7f0c002c;
    public static final int common_google_play_services_enable_text=0x7f0c002d;
    public static final int common_google_play_services_enable_title=0x7f0c002e;
    public static final int common_google_play_services_install_button=0x7f0c002f;
    public static final int common_google_play_services_install_text=0x7f0c0030;
    public static final int common_google_play_services_install_title=0x7f0c0031;
    public static final int common_google_play_services_notification_ticker=0x7f0c0032;
    public static final int common_google_play_services_unknown_issue=0x7f0c0033;
    public static final int common_google_play_services_unsupported_text=0x7f0c0034;
    public static final int common_google_play_services_update_button=0x7f0c0035;
    public static final int common_google_play_services_update_text=0x7f0c0036;
    public static final int common_google_play_services_update_title=0x7f0c0037;
    public static final int common_google_play_services_updating_text=0x7f0c0038;
    public static final int common_google_play_services_wear_update_text=0x7f0c0039;
    public static final int common_open_on_phone=0x7f0c003a;
    public static final int common_signin_button_text=0x7f0c003b;
    public static final int common_signin_button_text_long=0x7f0c003c;
    public static final int fab_transformation_scrim_behavior=0x7f0c003d;
    public static final int fab_transformation_sheet_behavior=0x7f0c003e;
    public static final int hide_bottom_view_on_scroll_behavior=0x7f0c003f;
    public static final int list_view_default_empty_content=0x7f0c0040;
    public static final int mtrl_chip_close_icon_content_description=0x7f0c0041;
    public static final int on_demand_manual_button_busy=0x7f0c0042;
    public static final int on_demand_manual_button_idle=0x7f0c0043;
    public static final int password_toggle_content_description=0x7f0c0044;
    public static final int path_password_eye=0x7f0c0045;
    public static final int path_password_eye_mask_strike_through=0x7f0c0046;
    public static final int path_password_eye_mask_visible=0x7f0c0047;
    public static final int path_password_strike_through=0x7f0c0048;
    public static final int search_menu_title=0x7f0c0049;
    public static final int status_bar_notification_info_overflow=0x7f0c004a;
    public static final int title_activity_kimera=0x7f0c004b;
  }
  public static final class style {
    public static final int AlertDialog_AppCompat=0x7f0d0000;
    public static final int AlertDialog_AppCompat_Light=0x7f0d0001;
    public static final int Animation_AppCompat_Dialog=0x7f0d0002;
    public static final int Animation_AppCompat_DropDownUp=0x7f0d0003;
    public static final int Animation_AppCompat_Tooltip=0x7f0d0004;
    public static final int Animation_Design_BottomSheetDialog=0x7f0d0005;
    public static final int AppTheme=0x7f0d0006;
    public static final int AppThemeBase=0x7f0d0007;
    public static final int AxisStyle=0x7f0d0008;
    public static final int AxisStyle_LineAxisStyle=0x7f0d0009;
    public static final int AxisStyle_LineAxisStyle_CartesianAxisStyle=0x7f0d000a;
    public static final int AxisStyle_LineAxisStyle_CartesianAxisStyle_CategoricalAxisStyle=0x7f0d000b;
    public static final int AxisStyle_LineAxisStyle_CartesianAxisStyle_CategoricalAxisStyle_DateTimeCategoricalAxisStyle=0x7f0d000c;
    public static final int AxisStyle_LineAxisStyle_CartesianAxisStyle_CategoricalAxisStyle_TestDateTimeCategoricalAxisStyle=0x7f0d000d;
    public static final int AxisStyle_LineAxisStyle_CartesianAxisStyle_DateTimeContinuousAxisStyle=0x7f0d000e;
    public static final int Base_AlertDialog_AppCompat=0x7f0d000f;
    public static final int Base_AlertDialog_AppCompat_Light=0x7f0d0010;
    public static final int Base_Animation_AppCompat_Dialog=0x7f0d0011;
    public static final int Base_Animation_AppCompat_DropDownUp=0x7f0d0012;
    public static final int Base_Animation_AppCompat_Tooltip=0x7f0d0013;
    public static final int Base_CardView=0x7f0d0014;
    public static final int Base_DialogWindowTitle_AppCompat=0x7f0d0015;
    public static final int Base_DialogWindowTitleBackground_AppCompat=0x7f0d0016;
    public static final int Base_TextAppearance_AppCompat=0x7f0d0017;
    public static final int Base_TextAppearance_AppCompat_Body1=0x7f0d0018;
    public static final int Base_TextAppearance_AppCompat_Body2=0x7f0d0019;
    public static final int Base_TextAppearance_AppCompat_Button=0x7f0d001a;
    public static final int Base_TextAppearance_AppCompat_Caption=0x7f0d001b;
    public static final int Base_TextAppearance_AppCompat_Display1=0x7f0d001c;
    public static final int Base_TextAppearance_AppCompat_Display2=0x7f0d001d;
    public static final int Base_TextAppearance_AppCompat_Display3=0x7f0d001e;
    public static final int Base_TextAppearance_AppCompat_Display4=0x7f0d001f;
    public static final int Base_TextAppearance_AppCompat_Headline=0x7f0d0020;
    public static final int Base_TextAppearance_AppCompat_Inverse=0x7f0d0021;
    public static final int Base_TextAppearance_AppCompat_Large=0x7f0d0022;
    public static final int Base_TextAppearance_AppCompat_Large_Inverse=0x7f0d0023;
    public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x7f0d0024;
    public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x7f0d0025;
    public static final int Base_TextAppearance_AppCompat_Medium=0x7f0d0026;
    public static final int Base_TextAppearance_AppCompat_Medium_Inverse=0x7f0d0027;
    public static final int Base_TextAppearance_AppCompat_Menu=0x7f0d0028;
    public static final int Base_TextAppearance_AppCompat_SearchResult=0x7f0d0029;
    public static final int Base_TextAppearance_AppCompat_SearchResult_Subtitle=0x7f0d002a;
    public static final int Base_TextAppearance_AppCompat_SearchResult_Title=0x7f0d002b;
    public static final int Base_TextAppearance_AppCompat_Small=0x7f0d002c;
    public static final int Base_TextAppearance_AppCompat_Small_Inverse=0x7f0d002d;
    public static final int Base_TextAppearance_AppCompat_Subhead=0x7f0d002e;
    public static final int Base_TextAppearance_AppCompat_Subhead_Inverse=0x7f0d002f;
    public static final int Base_TextAppearance_AppCompat_Title=0x7f0d0030;
    public static final int Base_TextAppearance_AppCompat_Title_Inverse=0x7f0d0031;
    public static final int Base_TextAppearance_AppCompat_Tooltip=0x7f0d0032;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu=0x7f0d0033;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x7f0d0034;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x7f0d0035;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title=0x7f0d0036;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x7f0d0037;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x7f0d0038;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Title=0x7f0d0039;
    public static final int Base_TextAppearance_AppCompat_Widget_Button=0x7f0d003a;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored=0x7f0d003b;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Colored=0x7f0d003c;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Inverse=0x7f0d003d;
    public static final int Base_TextAppearance_AppCompat_Widget_DropDownItem=0x7f0d003e;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header=0x7f0d003f;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large=0x7f0d0040;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small=0x7f0d0041;
    public static final int Base_TextAppearance_AppCompat_Widget_Switch=0x7f0d0042;
    public static final int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem=0x7f0d0043;
    public static final int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x7f0d0044;
    public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x7f0d0045;
    public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Title=0x7f0d0046;
    public static final int Base_Theme_AppCompat=0x7f0d0047;
    public static final int Base_Theme_AppCompat_CompactMenu=0x7f0d0048;
    public static final int Base_Theme_AppCompat_Dialog=0x7f0d0049;
    public static final int Base_Theme_AppCompat_Dialog_Alert=0x7f0d004a;
    public static final int Base_Theme_AppCompat_Dialog_FixedSize=0x7f0d004b;
    public static final int Base_Theme_AppCompat_Dialog_MinWidth=0x7f0d004c;
    public static final int Base_Theme_AppCompat_DialogWhenLarge=0x7f0d004d;
    public static final int Base_Theme_AppCompat_Light=0x7f0d004e;
    public static final int Base_Theme_AppCompat_Light_DarkActionBar=0x7f0d004f;
    public static final int Base_Theme_AppCompat_Light_Dialog=0x7f0d0050;
    public static final int Base_Theme_AppCompat_Light_Dialog_Alert=0x7f0d0051;
    public static final int Base_Theme_AppCompat_Light_Dialog_FixedSize=0x7f0d0052;
    public static final int Base_Theme_AppCompat_Light_Dialog_MinWidth=0x7f0d0053;
    public static final int Base_Theme_AppCompat_Light_DialogWhenLarge=0x7f0d0054;
    public static final int Base_Theme_MaterialComponents=0x7f0d0055;
    public static final int Base_Theme_MaterialComponents_Bridge=0x7f0d0056;
    public static final int Base_Theme_MaterialComponents_CompactMenu=0x7f0d0057;
    public static final int Base_Theme_MaterialComponents_Dialog=0x7f0d0058;
    public static final int Base_Theme_MaterialComponents_Dialog_Alert=0x7f0d0059;
    public static final int Base_Theme_MaterialComponents_Dialog_FixedSize=0x7f0d005a;
    public static final int Base_Theme_MaterialComponents_Dialog_MinWidth=0x7f0d005b;
    public static final int Base_Theme_MaterialComponents_DialogWhenLarge=0x7f0d005c;
    public static final int Base_Theme_MaterialComponents_Light=0x7f0d005d;
    public static final int Base_Theme_MaterialComponents_Light_Bridge=0x7f0d005e;
    public static final int Base_Theme_MaterialComponents_Light_DarkActionBar=0x7f0d005f;
    public static final int Base_Theme_MaterialComponents_Light_DarkActionBar_Bridge=0x7f0d0060;
    public static final int Base_Theme_MaterialComponents_Light_Dialog=0x7f0d0061;
    public static final int Base_Theme_MaterialComponents_Light_Dialog_Alert=0x7f0d0062;
    public static final int Base_Theme_MaterialComponents_Light_Dialog_FixedSize=0x7f0d0063;
    public static final int Base_Theme_MaterialComponents_Light_Dialog_MinWidth=0x7f0d0064;
    public static final int Base_Theme_MaterialComponents_Light_DialogWhenLarge=0x7f0d0065;
    public static final int Base_ThemeOverlay_AppCompat=0x7f0d0066;
    public static final int Base_ThemeOverlay_AppCompat_ActionBar=0x7f0d0067;
    public static final int Base_ThemeOverlay_AppCompat_Dark=0x7f0d0068;
    public static final int Base_ThemeOverlay_AppCompat_Dark_ActionBar=0x7f0d0069;
    public static final int Base_ThemeOverlay_AppCompat_Dialog=0x7f0d006a;
    public static final int Base_ThemeOverlay_AppCompat_Dialog_Alert=0x7f0d006b;
    public static final int Base_ThemeOverlay_AppCompat_Light=0x7f0d006c;
    public static final int Base_ThemeOverlay_MaterialComponents_Dialog=0x7f0d006d;
    public static final int Base_ThemeOverlay_MaterialComponents_Dialog_Alert=0x7f0d006e;
    public static final int Base_V14_Theme_MaterialComponents=0x7f0d006f;
    public static final int Base_V14_Theme_MaterialComponents_Bridge=0x7f0d0070;
    public static final int Base_V14_Theme_MaterialComponents_Dialog=0x7f0d0071;
    public static final int Base_V14_Theme_MaterialComponents_Light=0x7f0d0072;
    public static final int Base_V14_Theme_MaterialComponents_Light_Bridge=0x7f0d0073;
    public static final int Base_V14_Theme_MaterialComponents_Light_DarkActionBar_Bridge=0x7f0d0074;
    public static final int Base_V14_Theme_MaterialComponents_Light_Dialog=0x7f0d0075;
    public static final int Base_V14_ThemeOverlay_MaterialComponents_Dialog=0x7f0d0076;
    public static final int Base_V14_ThemeOverlay_MaterialComponents_Dialog_Alert=0x7f0d0077;
    public static final int Base_V21_Theme_AppCompat=0x7f0d0078;
    public static final int Base_V21_Theme_AppCompat_Dialog=0x7f0d0079;
    public static final int Base_V21_Theme_AppCompat_Light=0x7f0d007a;
    public static final int Base_V21_Theme_AppCompat_Light_Dialog=0x7f0d007b;
    public static final int Base_V21_ThemeOverlay_AppCompat_Dialog=0x7f0d007c;
    public static final int Base_V22_Theme_AppCompat=0x7f0d007d;
    public static final int Base_V22_Theme_AppCompat_Light=0x7f0d007e;
    public static final int Base_V23_Theme_AppCompat=0x7f0d007f;
    public static final int Base_V23_Theme_AppCompat_Light=0x7f0d0080;
    public static final int Base_V26_Theme_AppCompat=0x7f0d0081;
    public static final int Base_V26_Theme_AppCompat_Light=0x7f0d0082;
    public static final int Base_V26_Widget_AppCompat_Toolbar=0x7f0d0083;
    public static final int Base_V28_Theme_AppCompat=0x7f0d0084;
    public static final int Base_V28_Theme_AppCompat_Light=0x7f0d0085;
    public static final int Base_V7_Theme_AppCompat=0x7f0d0086;
    public static final int Base_V7_Theme_AppCompat_Dialog=0x7f0d0087;
    public static final int Base_V7_Theme_AppCompat_Light=0x7f0d0088;
    public static final int Base_V7_Theme_AppCompat_Light_Dialog=0x7f0d0089;
    public static final int Base_V7_ThemeOverlay_AppCompat_Dialog=0x7f0d008a;
    public static final int Base_V7_Widget_AppCompat_AutoCompleteTextView=0x7f0d008b;
    public static final int Base_V7_Widget_AppCompat_EditText=0x7f0d008c;
    public static final int Base_V7_Widget_AppCompat_Toolbar=0x7f0d008d;
    public static final int Base_Widget_AppCompat_ActionBar=0x7f0d008e;
    public static final int Base_Widget_AppCompat_ActionBar_Solid=0x7f0d008f;
    public static final int Base_Widget_AppCompat_ActionBar_TabBar=0x7f0d0090;
    public static final int Base_Widget_AppCompat_ActionBar_TabText=0x7f0d0091;
    public static final int Base_Widget_AppCompat_ActionBar_TabView=0x7f0d0092;
    public static final int Base_Widget_AppCompat_ActionButton=0x7f0d0093;
    public static final int Base_Widget_AppCompat_ActionButton_CloseMode=0x7f0d0094;
    public static final int Base_Widget_AppCompat_ActionButton_Overflow=0x7f0d0095;
    public static final int Base_Widget_AppCompat_ActionMode=0x7f0d0096;
    public static final int Base_Widget_AppCompat_ActivityChooserView=0x7f0d0097;
    public static final int Base_Widget_AppCompat_AutoCompleteTextView=0x7f0d0098;
    public static final int Base_Widget_AppCompat_Button=0x7f0d0099;
    public static final int Base_Widget_AppCompat_Button_Borderless=0x7f0d009a;
    public static final int Base_Widget_AppCompat_Button_Borderless_Colored=0x7f0d009b;
    public static final int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog=0x7f0d009c;
    public static final int Base_Widget_AppCompat_Button_Colored=0x7f0d009d;
    public static final int Base_Widget_AppCompat_Button_Small=0x7f0d009e;
    public static final int Base_Widget_AppCompat_ButtonBar=0x7f0d009f;
    public static final int Base_Widget_AppCompat_ButtonBar_AlertDialog=0x7f0d00a0;
    public static final int Base_Widget_AppCompat_CompoundButton_CheckBox=0x7f0d00a1;
    public static final int Base_Widget_AppCompat_CompoundButton_RadioButton=0x7f0d00a2;
    public static final int Base_Widget_AppCompat_CompoundButton_Switch=0x7f0d00a3;
    public static final int Base_Widget_AppCompat_DrawerArrowToggle=0x7f0d00a4;
    public static final int Base_Widget_AppCompat_DrawerArrowToggle_Common=0x7f0d00a5;
    public static final int Base_Widget_AppCompat_DropDownItem_Spinner=0x7f0d00a6;
    public static final int Base_Widget_AppCompat_EditText=0x7f0d00a7;
    public static final int Base_Widget_AppCompat_ImageButton=0x7f0d00a8;
    public static final int Base_Widget_AppCompat_Light_ActionBar=0x7f0d00a9;
    public static final int Base_Widget_AppCompat_Light_ActionBar_Solid=0x7f0d00aa;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabBar=0x7f0d00ab;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabText=0x7f0d00ac;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x7f0d00ad;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabView=0x7f0d00ae;
    public static final int Base_Widget_AppCompat_Light_PopupMenu=0x7f0d00af;
    public static final int Base_Widget_AppCompat_Light_PopupMenu_Overflow=0x7f0d00b0;
    public static final int Base_Widget_AppCompat_ListMenuView=0x7f0d00b1;
    public static final int Base_Widget_AppCompat_ListPopupWindow=0x7f0d00b2;
    public static final int Base_Widget_AppCompat_ListView=0x7f0d00b3;
    public static final int Base_Widget_AppCompat_ListView_DropDown=0x7f0d00b4;
    public static final int Base_Widget_AppCompat_ListView_Menu=0x7f0d00b5;
    public static final int Base_Widget_AppCompat_PopupMenu=0x7f0d00b6;
    public static final int Base_Widget_AppCompat_PopupMenu_Overflow=0x7f0d00b7;
    public static final int Base_Widget_AppCompat_PopupWindow=0x7f0d00b8;
    public static final int Base_Widget_AppCompat_ProgressBar=0x7f0d00b9;
    public static final int Base_Widget_AppCompat_ProgressBar_Horizontal=0x7f0d00ba;
    public static final int Base_Widget_AppCompat_RatingBar=0x7f0d00bb;
    public static final int Base_Widget_AppCompat_RatingBar_Indicator=0x7f0d00bc;
    public static final int Base_Widget_AppCompat_RatingBar_Small=0x7f0d00bd;
    public static final int Base_Widget_AppCompat_SearchView=0x7f0d00be;
    public static final int Base_Widget_AppCompat_SearchView_ActionBar=0x7f0d00bf;
    public static final int Base_Widget_AppCompat_SeekBar=0x7f0d00c0;
    public static final int Base_Widget_AppCompat_SeekBar_Discrete=0x7f0d00c1;
    public static final int Base_Widget_AppCompat_Spinner=0x7f0d00c2;
    public static final int Base_Widget_AppCompat_Spinner_Underlined=0x7f0d00c3;
    public static final int Base_Widget_AppCompat_TextView_SpinnerItem=0x7f0d00c4;
    public static final int Base_Widget_AppCompat_Toolbar=0x7f0d00c5;
    public static final int Base_Widget_AppCompat_Toolbar_Button_Navigation=0x7f0d00c6;
    public static final int Base_Widget_Design_TabLayout=0x7f0d00c7;
    public static final int Base_Widget_MaterialComponents_Chip=0x7f0d00c8;
    public static final int Base_Widget_MaterialComponents_TextInputEditText=0x7f0d00c9;
    public static final int Base_Widget_MaterialComponents_TextInputLayout=0x7f0d00ca;
    public static final int CardView=0x7f0d00cb;
    public static final int CardView_Dark=0x7f0d00cc;
    public static final int CardView_Light=0x7f0d00cd;
    public static final int ChartAnnotationStyle=0x7f0d00ce;
    public static final int ChartAnnotationStyle_CartesianCustomAnnotationStyle=0x7f0d00cf;
    public static final int ChartAnnotationStyle_CartesianStrokedAnnotationStyle=0x7f0d00d0;
    public static final int ChartAnnotationStyle_CartesianStrokedAnnotationStyle_CartesianPlotBandAnnotationStyle=0x7f0d00d1;
    public static final int ChartSeriesStyle=0x7f0d00d2;
    public static final int ChartSeriesStyle_CategoricalSeriesStyle=0x7f0d00d3;
    public static final int ChartSeriesStyle_CategoricalSeriesStyle_BarSeriesStyle=0x7f0d00d4;
    public static final int ChartSeriesStyle_CategoricalSeriesStyle_CategoricalStrokedSeriesStyle=0x7f0d00d5;
    public static final int ChartSeriesStyle_CategoricalSeriesStyle_CategoricalStrokedSeriesStyle_AreaSeriesStyle=0x7f0d00d6;
    public static final int ChartSeriesStyle_CategoricalSeriesStyle_RangeBarSeriesStyle=0x7f0d00d7;
    public static final int LaunchScreenTheme=0x7f0d00d8;
    public static final int LaunchScreenThemeBase=0x7f0d00d9;
    public static final int NativeScriptToolbarStyle=0x7f0d00da;
    public static final int NativeScriptToolbarStyleBase=0x7f0d00db;
    public static final int NoActionBar=0x7f0d00dc;
    public static final int Platform_AppCompat=0x7f0d00dd;
    public static final int Platform_AppCompat_Light=0x7f0d00de;
    public static final int Platform_MaterialComponents=0x7f0d00df;
    public static final int Platform_MaterialComponents_Dialog=0x7f0d00e0;
    public static final int Platform_MaterialComponents_Light=0x7f0d00e1;
    public static final int Platform_MaterialComponents_Light_Dialog=0x7f0d00e2;
    public static final int Platform_ThemeOverlay_AppCompat=0x7f0d00e3;
    public static final int Platform_ThemeOverlay_AppCompat_Dark=0x7f0d00e4;
    public static final int Platform_ThemeOverlay_AppCompat_Light=0x7f0d00e5;
    public static final int Platform_V21_AppCompat=0x7f0d00e6;
    public static final int Platform_V21_AppCompat_Light=0x7f0d00e7;
    public static final int Platform_V25_AppCompat=0x7f0d00e8;
    public static final int Platform_V25_AppCompat_Light=0x7f0d00e9;
    public static final int Platform_Widget_AppCompat_Spinner=0x7f0d00ea;
    public static final int RadChartBaseStyle=0x7f0d00eb;
    public static final int RadScrollViewStyle=0x7f0d00ec;
    public static final int RadScrollViewTheme=0x7f0d00ed;
    public static final int RtlOverlay_DialogWindowTitle_AppCompat=0x7f0d00ee;
    public static final int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem=0x7f0d00ef;
    public static final int RtlOverlay_Widget_AppCompat_DialogTitle_Icon=0x7f0d00f0;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem=0x7f0d00f1;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup=0x7f0d00f2;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut=0x7f0d00f3;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow=0x7f0d00f4;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text=0x7f0d00f5;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title=0x7f0d00f6;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown=0x7f0d00f7;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1=0x7f0d00f8;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2=0x7f0d00f9;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Query=0x7f0d00fa;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Text=0x7f0d00fb;
    public static final int RtlOverlay_Widget_AppCompat_SearchView_MagIcon=0x7f0d00fc;
    public static final int RtlUnderlay_Widget_AppCompat_ActionButton=0x7f0d00fd;
    public static final int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow=0x7f0d00fe;
    public static final int SpinnerDatePicker=0x7f0d00ff;
    public static final int SpinnerTimePicker=0x7f0d0100;
    public static final int TextAppearance_AppCompat=0x7f0d0101;
    public static final int TextAppearance_AppCompat_Body1=0x7f0d0102;
    public static final int TextAppearance_AppCompat_Body2=0x7f0d0103;
    public static final int TextAppearance_AppCompat_Button=0x7f0d0104;
    public static final int TextAppearance_AppCompat_Caption=0x7f0d0105;
    public static final int TextAppearance_AppCompat_Display1=0x7f0d0106;
    public static final int TextAppearance_AppCompat_Display2=0x7f0d0107;
    public static final int TextAppearance_AppCompat_Display3=0x7f0d0108;
    public static final int TextAppearance_AppCompat_Display4=0x7f0d0109;
    public static final int TextAppearance_AppCompat_Headline=0x7f0d010a;
    public static final int TextAppearance_AppCompat_Inverse=0x7f0d010b;
    public static final int TextAppearance_AppCompat_Large=0x7f0d010c;
    public static final int TextAppearance_AppCompat_Large_Inverse=0x7f0d010d;
    public static final int TextAppearance_AppCompat_Light_SearchResult_Subtitle=0x7f0d010e;
    public static final int TextAppearance_AppCompat_Light_SearchResult_Title=0x7f0d010f;
    public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x7f0d0110;
    public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x7f0d0111;
    public static final int TextAppearance_AppCompat_Medium=0x7f0d0112;
    public static final int TextAppearance_AppCompat_Medium_Inverse=0x7f0d0113;
    public static final int TextAppearance_AppCompat_Menu=0x7f0d0114;
    public static final int TextAppearance_AppCompat_SearchResult_Subtitle=0x7f0d0115;
    public static final int TextAppearance_AppCompat_SearchResult_Title=0x7f0d0116;
    public static final int TextAppearance_AppCompat_Small=0x7f0d0117;
    public static final int TextAppearance_AppCompat_Small_Inverse=0x7f0d0118;
    public static final int TextAppearance_AppCompat_Subhead=0x7f0d0119;
    public static final int TextAppearance_AppCompat_Subhead_Inverse=0x7f0d011a;
    public static final int TextAppearance_AppCompat_Title=0x7f0d011b;
    public static final int TextAppearance_AppCompat_Title_Inverse=0x7f0d011c;
    public static final int TextAppearance_AppCompat_Tooltip=0x7f0d011d;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Menu=0x7f0d011e;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x7f0d011f;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x7f0d0120;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Title=0x7f0d0121;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x7f0d0122;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x7f0d0123;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse=0x7f0d0124;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Title=0x7f0d0125;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse=0x7f0d0126;
    public static final int TextAppearance_AppCompat_Widget_Button=0x7f0d0127;
    public static final int TextAppearance_AppCompat_Widget_Button_Borderless_Colored=0x7f0d0128;
    public static final int TextAppearance_AppCompat_Widget_Button_Colored=0x7f0d0129;
    public static final int TextAppearance_AppCompat_Widget_Button_Inverse=0x7f0d012a;
    public static final int TextAppearance_AppCompat_Widget_DropDownItem=0x7f0d012b;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Header=0x7f0d012c;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Large=0x7f0d012d;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Small=0x7f0d012e;
    public static final int TextAppearance_AppCompat_Widget_Switch=0x7f0d012f;
    public static final int TextAppearance_AppCompat_Widget_TextView_SpinnerItem=0x7f0d0130;
    public static final int TextAppearance_Compat_Notification=0x7f0d0131;
    public static final int TextAppearance_Compat_Notification_Info=0x7f0d0132;
    public static final int TextAppearance_Compat_Notification_Info_Media=0x7f0d0133;
    public static final int TextAppearance_Compat_Notification_Line2=0x7f0d0134;
    public static final int TextAppearance_Compat_Notification_Line2_Media=0x7f0d0135;
    public static final int TextAppearance_Compat_Notification_Media=0x7f0d0136;
    public static final int TextAppearance_Compat_Notification_Time=0x7f0d0137;
    public static final int TextAppearance_Compat_Notification_Time_Media=0x7f0d0138;
    public static final int TextAppearance_Compat_Notification_Title=0x7f0d0139;
    public static final int TextAppearance_Compat_Notification_Title_Media=0x7f0d013a;
    public static final int TextAppearance_Design_CollapsingToolbar_Expanded=0x7f0d013b;
    public static final int TextAppearance_Design_Counter=0x7f0d013c;
    public static final int TextAppearance_Design_Counter_Overflow=0x7f0d013d;
    public static final int TextAppearance_Design_Error=0x7f0d013e;
    public static final int TextAppearance_Design_HelperText=0x7f0d013f;
    public static final int TextAppearance_Design_Hint=0x7f0d0140;
    public static final int TextAppearance_Design_Snackbar_Message=0x7f0d0141;
    public static final int TextAppearance_Design_Tab=0x7f0d0142;
    public static final int TextAppearance_MaterialComponents_Body1=0x7f0d0143;
    public static final int TextAppearance_MaterialComponents_Body2=0x7f0d0144;
    public static final int TextAppearance_MaterialComponents_Button=0x7f0d0145;
    public static final int TextAppearance_MaterialComponents_Caption=0x7f0d0146;
    public static final int TextAppearance_MaterialComponents_Chip=0x7f0d0147;
    public static final int TextAppearance_MaterialComponents_Headline1=0x7f0d0148;
    public static final int TextAppearance_MaterialComponents_Headline2=0x7f0d0149;
    public static final int TextAppearance_MaterialComponents_Headline3=0x7f0d014a;
    public static final int TextAppearance_MaterialComponents_Headline4=0x7f0d014b;
    public static final int TextAppearance_MaterialComponents_Headline5=0x7f0d014c;
    public static final int TextAppearance_MaterialComponents_Headline6=0x7f0d014d;
    public static final int TextAppearance_MaterialComponents_Overline=0x7f0d014e;
    public static final int TextAppearance_MaterialComponents_Subtitle1=0x7f0d014f;
    public static final int TextAppearance_MaterialComponents_Subtitle2=0x7f0d0150;
    public static final int TextAppearance_MaterialComponents_Tab=0x7f0d0151;
    public static final int TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x7f0d0152;
    public static final int TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x7f0d0153;
    public static final int TextAppearance_Widget_AppCompat_Toolbar_Title=0x7f0d0154;
    public static final int Theme_AppCompat=0x7f0d0155;
    public static final int Theme_AppCompat_CompactMenu=0x7f0d0156;
    public static final int Theme_AppCompat_DayNight=0x7f0d0157;
    public static final int Theme_AppCompat_DayNight_DarkActionBar=0x7f0d0158;
    public static final int Theme_AppCompat_DayNight_Dialog=0x7f0d0159;
    public static final int Theme_AppCompat_DayNight_Dialog_Alert=0x7f0d015a;
    public static final int Theme_AppCompat_DayNight_Dialog_MinWidth=0x7f0d015b;
    public static final int Theme_AppCompat_DayNight_DialogWhenLarge=0x7f0d015c;
    public static final int Theme_AppCompat_DayNight_NoActionBar=0x7f0d015d;
    public static final int Theme_AppCompat_Dialog=0x7f0d015e;
    public static final int Theme_AppCompat_Dialog_Alert=0x7f0d015f;
    public static final int Theme_AppCompat_Dialog_MinWidth=0x7f0d0160;
    public static final int Theme_AppCompat_DialogWhenLarge=0x7f0d0161;
    public static final int Theme_AppCompat_Light=0x7f0d0162;
    public static final int Theme_AppCompat_Light_DarkActionBar=0x7f0d0163;
    public static final int Theme_AppCompat_Light_Dialog=0x7f0d0164;
    public static final int Theme_AppCompat_Light_Dialog_Alert=0x7f0d0165;
    public static final int Theme_AppCompat_Light_Dialog_MinWidth=0x7f0d0166;
    public static final int Theme_AppCompat_Light_DialogWhenLarge=0x7f0d0167;
    public static final int Theme_AppCompat_Light_NoActionBar=0x7f0d0168;
    public static final int Theme_AppCompat_NoActionBar=0x7f0d0169;
    public static final int Theme_ChartTheme=0x7f0d016a;
    public static final int Theme_Design=0x7f0d016b;
    public static final int Theme_Design_BottomSheetDialog=0x7f0d016c;
    public static final int Theme_Design_Light=0x7f0d016d;
    public static final int Theme_Design_Light_BottomSheetDialog=0x7f0d016e;
    public static final int Theme_Design_Light_NoActionBar=0x7f0d016f;
    public static final int Theme_Design_NoActionBar=0x7f0d0170;
    public static final int Theme_MaterialComponents=0x7f0d0171;
    public static final int Theme_MaterialComponents_BottomSheetDialog=0x7f0d0172;
    public static final int Theme_MaterialComponents_Bridge=0x7f0d0173;
    public static final int Theme_MaterialComponents_CompactMenu=0x7f0d0174;
    public static final int Theme_MaterialComponents_Dialog=0x7f0d0175;
    public static final int Theme_MaterialComponents_Dialog_Alert=0x7f0d0176;
    public static final int Theme_MaterialComponents_Dialog_MinWidth=0x7f0d0177;
    public static final int Theme_MaterialComponents_DialogWhenLarge=0x7f0d0178;
    public static final int Theme_MaterialComponents_Light=0x7f0d0179;
    public static final int Theme_MaterialComponents_Light_BottomSheetDialog=0x7f0d017a;
    public static final int Theme_MaterialComponents_Light_Bridge=0x7f0d017b;
    public static final int Theme_MaterialComponents_Light_DarkActionBar=0x7f0d017c;
    public static final int Theme_MaterialComponents_Light_DarkActionBar_Bridge=0x7f0d017d;
    public static final int Theme_MaterialComponents_Light_Dialog=0x7f0d017e;
    public static final int Theme_MaterialComponents_Light_Dialog_Alert=0x7f0d017f;
    public static final int Theme_MaterialComponents_Light_Dialog_MinWidth=0x7f0d0180;
    public static final int Theme_MaterialComponents_Light_DialogWhenLarge=0x7f0d0181;
    public static final int Theme_MaterialComponents_Light_NoActionBar=0x7f0d0182;
    public static final int Theme_MaterialComponents_Light_NoActionBar_Bridge=0x7f0d0183;
    public static final int Theme_MaterialComponents_NoActionBar=0x7f0d0184;
    public static final int Theme_MaterialComponents_NoActionBar_Bridge=0x7f0d0185;
    public static final int ThemeOverlay_AppCompat=0x7f0d0186;
    public static final int ThemeOverlay_AppCompat_ActionBar=0x7f0d0187;
    public static final int ThemeOverlay_AppCompat_Dark=0x7f0d0188;
    public static final int ThemeOverlay_AppCompat_Dark_ActionBar=0x7f0d0189;
    public static final int ThemeOverlay_AppCompat_Dialog=0x7f0d018a;
    public static final int ThemeOverlay_AppCompat_Dialog_Alert=0x7f0d018b;
    public static final int ThemeOverlay_AppCompat_Light=0x7f0d018c;
    public static final int ThemeOverlay_MaterialComponents=0x7f0d018d;
    public static final int ThemeOverlay_MaterialComponents_ActionBar=0x7f0d018e;
    public static final int ThemeOverlay_MaterialComponents_Dark=0x7f0d018f;
    public static final int ThemeOverlay_MaterialComponents_Dark_ActionBar=0x7f0d0190;
    public static final int ThemeOverlay_MaterialComponents_Dialog=0x7f0d0191;
    public static final int ThemeOverlay_MaterialComponents_Dialog_Alert=0x7f0d0192;
    public static final int ThemeOverlay_MaterialComponents_Light=0x7f0d0193;
    public static final int ThemeOverlay_MaterialComponents_TextInputEditText=0x7f0d0194;
    public static final int ThemeOverlay_MaterialComponents_TextInputEditText_FilledBox=0x7f0d0195;
    public static final int ThemeOverlay_MaterialComponents_TextInputEditText_FilledBox_Dense=0x7f0d0196;
    public static final int ThemeOverlay_MaterialComponents_TextInputEditText_OutlinedBox=0x7f0d0197;
    public static final int ThemeOverlay_MaterialComponents_TextInputEditText_OutlinedBox_Dense=0x7f0d0198;
    public static final int Widget_AppCompat_ActionBar=0x7f0d0199;
    public static final int Widget_AppCompat_ActionBar_Solid=0x7f0d019a;
    public static final int Widget_AppCompat_ActionBar_TabBar=0x7f0d019b;
    public static final int Widget_AppCompat_ActionBar_TabText=0x7f0d019c;
    public static final int Widget_AppCompat_ActionBar_TabView=0x7f0d019d;
    public static final int Widget_AppCompat_ActionButton=0x7f0d019e;
    public static final int Widget_AppCompat_ActionButton_CloseMode=0x7f0d019f;
    public static final int Widget_AppCompat_ActionButton_Overflow=0x7f0d01a0;
    public static final int Widget_AppCompat_ActionMode=0x7f0d01a1;
    public static final int Widget_AppCompat_ActivityChooserView=0x7f0d01a2;
    public static final int Widget_AppCompat_AutoCompleteTextView=0x7f0d01a3;
    public static final int Widget_AppCompat_Button=0x7f0d01a4;
    public static final int Widget_AppCompat_Button_Borderless=0x7f0d01a5;
    public static final int Widget_AppCompat_Button_Borderless_Colored=0x7f0d01a6;
    public static final int Widget_AppCompat_Button_ButtonBar_AlertDialog=0x7f0d01a7;
    public static final int Widget_AppCompat_Button_Colored=0x7f0d01a8;
    public static final int Widget_AppCompat_Button_Small=0x7f0d01a9;
    public static final int Widget_AppCompat_ButtonBar=0x7f0d01aa;
    public static final int Widget_AppCompat_ButtonBar_AlertDialog=0x7f0d01ab;
    public static final int Widget_AppCompat_CompoundButton_CheckBox=0x7f0d01ac;
    public static final int Widget_AppCompat_CompoundButton_RadioButton=0x7f0d01ad;
    public static final int Widget_AppCompat_CompoundButton_Switch=0x7f0d01ae;
    public static final int Widget_AppCompat_DrawerArrowToggle=0x7f0d01af;
    public static final int Widget_AppCompat_DropDownItem_Spinner=0x7f0d01b0;
    public static final int Widget_AppCompat_EditText=0x7f0d01b1;
    public static final int Widget_AppCompat_ImageButton=0x7f0d01b2;
    public static final int Widget_AppCompat_Light_ActionBar=0x7f0d01b3;
    public static final int Widget_AppCompat_Light_ActionBar_Solid=0x7f0d01b4;
    public static final int Widget_AppCompat_Light_ActionBar_Solid_Inverse=0x7f0d01b5;
    public static final int Widget_AppCompat_Light_ActionBar_TabBar=0x7f0d01b6;
    public static final int Widget_AppCompat_Light_ActionBar_TabBar_Inverse=0x7f0d01b7;
    public static final int Widget_AppCompat_Light_ActionBar_TabText=0x7f0d01b8;
    public static final int Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x7f0d01b9;
    public static final int Widget_AppCompat_Light_ActionBar_TabView=0x7f0d01ba;
    public static final int Widget_AppCompat_Light_ActionBar_TabView_Inverse=0x7f0d01bb;
    public static final int Widget_AppCompat_Light_ActionButton=0x7f0d01bc;
    public static final int Widget_AppCompat_Light_ActionButton_CloseMode=0x7f0d01bd;
    public static final int Widget_AppCompat_Light_ActionButton_Overflow=0x7f0d01be;
    public static final int Widget_AppCompat_Light_ActionMode_Inverse=0x7f0d01bf;
    public static final int Widget_AppCompat_Light_ActivityChooserView=0x7f0d01c0;
    public static final int Widget_AppCompat_Light_AutoCompleteTextView=0x7f0d01c1;
    public static final int Widget_AppCompat_Light_DropDownItem_Spinner=0x7f0d01c2;
    public static final int Widget_AppCompat_Light_ListPopupWindow=0x7f0d01c3;
    public static final int Widget_AppCompat_Light_ListView_DropDown=0x7f0d01c4;
    public static final int Widget_AppCompat_Light_PopupMenu=0x7f0d01c5;
    public static final int Widget_AppCompat_Light_PopupMenu_Overflow=0x7f0d01c6;
    public static final int Widget_AppCompat_Light_SearchView=0x7f0d01c7;
    public static final int Widget_AppCompat_Light_Spinner_DropDown_ActionBar=0x7f0d01c8;
    public static final int Widget_AppCompat_ListMenuView=0x7f0d01c9;
    public static final int Widget_AppCompat_ListPopupWindow=0x7f0d01ca;
    public static final int Widget_AppCompat_ListView=0x7f0d01cb;
    public static final int Widget_AppCompat_ListView_DropDown=0x7f0d01cc;
    public static final int Widget_AppCompat_ListView_Menu=0x7f0d01cd;
    public static final int Widget_AppCompat_PopupMenu=0x7f0d01ce;
    public static final int Widget_AppCompat_PopupMenu_Overflow=0x7f0d01cf;
    public static final int Widget_AppCompat_PopupWindow=0x7f0d01d0;
    public static final int Widget_AppCompat_ProgressBar=0x7f0d01d1;
    public static final int Widget_AppCompat_ProgressBar_Horizontal=0x7f0d01d2;
    public static final int Widget_AppCompat_RatingBar=0x7f0d01d3;
    public static final int Widget_AppCompat_RatingBar_Indicator=0x7f0d01d4;
    public static final int Widget_AppCompat_RatingBar_Small=0x7f0d01d5;
    public static final int Widget_AppCompat_SearchView=0x7f0d01d6;
    public static final int Widget_AppCompat_SearchView_ActionBar=0x7f0d01d7;
    public static final int Widget_AppCompat_SeekBar=0x7f0d01d8;
    public static final int Widget_AppCompat_SeekBar_Discrete=0x7f0d01d9;
    public static final int Widget_AppCompat_Spinner=0x7f0d01da;
    public static final int Widget_AppCompat_Spinner_DropDown=0x7f0d01db;
    public static final int Widget_AppCompat_Spinner_DropDown_ActionBar=0x7f0d01dc;
    public static final int Widget_AppCompat_Spinner_Underlined=0x7f0d01dd;
    public static final int Widget_AppCompat_TextView_SpinnerItem=0x7f0d01de;
    public static final int Widget_AppCompat_Toolbar=0x7f0d01df;
    public static final int Widget_AppCompat_Toolbar_Button_Navigation=0x7f0d01e0;
    public static final int Widget_Compat_NotificationActionContainer=0x7f0d01e1;
    public static final int Widget_Compat_NotificationActionText=0x7f0d01e2;
    public static final int Widget_Design_AppBarLayout=0x7f0d01e3;
    public static final int Widget_Design_BottomNavigationView=0x7f0d01e4;
    public static final int Widget_Design_BottomSheet_Modal=0x7f0d01e5;
    public static final int Widget_Design_CollapsingToolbar=0x7f0d01e6;
    public static final int Widget_Design_FloatingActionButton=0x7f0d01e7;
    public static final int Widget_Design_NavigationView=0x7f0d01e8;
    public static final int Widget_Design_ScrimInsetsFrameLayout=0x7f0d01e9;
    public static final int Widget_Design_Snackbar=0x7f0d01ea;
    public static final int Widget_Design_TabLayout=0x7f0d01eb;
    public static final int Widget_Design_TextInputLayout=0x7f0d01ec;
    public static final int Widget_MaterialComponents_BottomAppBar=0x7f0d01ed;
    public static final int Widget_MaterialComponents_BottomAppBar_Colored=0x7f0d01ee;
    public static final int Widget_MaterialComponents_BottomNavigationView=0x7f0d01ef;
    public static final int Widget_MaterialComponents_BottomNavigationView_Colored=0x7f0d01f0;
    public static final int Widget_MaterialComponents_BottomSheet_Modal=0x7f0d01f1;
    public static final int Widget_MaterialComponents_Button=0x7f0d01f2;
    public static final int Widget_MaterialComponents_Button_Icon=0x7f0d01f3;
    public static final int Widget_MaterialComponents_Button_OutlinedButton=0x7f0d01f4;
    public static final int Widget_MaterialComponents_Button_OutlinedButton_Icon=0x7f0d01f5;
    public static final int Widget_MaterialComponents_Button_TextButton=0x7f0d01f6;
    public static final int Widget_MaterialComponents_Button_TextButton_Dialog=0x7f0d01f7;
    public static final int Widget_MaterialComponents_Button_TextButton_Dialog_Icon=0x7f0d01f8;
    public static final int Widget_MaterialComponents_Button_TextButton_Icon=0x7f0d01f9;
    public static final int Widget_MaterialComponents_Button_UnelevatedButton=0x7f0d01fa;
    public static final int Widget_MaterialComponents_Button_UnelevatedButton_Icon=0x7f0d01fb;
    public static final int Widget_MaterialComponents_CardView=0x7f0d01fc;
    public static final int Widget_MaterialComponents_Chip_Action=0x7f0d01fd;
    public static final int Widget_MaterialComponents_Chip_Choice=0x7f0d01fe;
    public static final int Widget_MaterialComponents_Chip_Entry=0x7f0d01ff;
    public static final int Widget_MaterialComponents_Chip_Filter=0x7f0d0200;
    public static final int Widget_MaterialComponents_ChipGroup=0x7f0d0201;
    public static final int Widget_MaterialComponents_FloatingActionButton=0x7f0d0202;
    public static final int Widget_MaterialComponents_NavigationView=0x7f0d0203;
    public static final int Widget_MaterialComponents_Snackbar=0x7f0d0204;
    public static final int Widget_MaterialComponents_Snackbar_FullWidth=0x7f0d0205;
    public static final int Widget_MaterialComponents_TabLayout=0x7f0d0206;
    public static final int Widget_MaterialComponents_TabLayout_Colored=0x7f0d0207;
    public static final int Widget_MaterialComponents_TextInputEditText_FilledBox=0x7f0d0208;
    public static final int Widget_MaterialComponents_TextInputEditText_FilledBox_Dense=0x7f0d0209;
    public static final int Widget_MaterialComponents_TextInputEditText_OutlinedBox=0x7f0d020a;
    public static final int Widget_MaterialComponents_TextInputEditText_OutlinedBox_Dense=0x7f0d020b;
    public static final int Widget_MaterialComponents_TextInputLayout_FilledBox=0x7f0d020c;
    public static final int Widget_MaterialComponents_TextInputLayout_FilledBox_Dense=0x7f0d020d;
    public static final int Widget_MaterialComponents_TextInputLayout_OutlinedBox=0x7f0d020e;
    public static final int Widget_MaterialComponents_TextInputLayout_OutlinedBox_Dense=0x7f0d020f;
    public static final int Widget_MaterialComponents_Toolbar=0x7f0d0210;
    public static final int Widget_Support_CoordinatorLayout=0x7f0d0211;
  }
  public static final class styleable {
    /**
     * Attributes that can be used with a ActionBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionBar_background org.nativescript.playvue:background}</code></td><td>Specifies a background drawable for the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_backgroundSplit org.nativescript.playvue:backgroundSplit}</code></td><td>Specifies a background drawable for the bottom component of a split action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_backgroundStacked org.nativescript.playvue:backgroundStacked}</code></td><td>Specifies a background drawable for a second stacked row of the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetEnd org.nativescript.playvue:contentInsetEnd}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetEndWithActions org.nativescript.playvue:contentInsetEndWithActions}</code></td><td>Minimum inset for content views within a bar when actions from a menu
     * are present.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetLeft org.nativescript.playvue:contentInsetLeft}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetRight org.nativescript.playvue:contentInsetRight}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetStart org.nativescript.playvue:contentInsetStart}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetStartWithNavigation org.nativescript.playvue:contentInsetStartWithNavigation}</code></td><td>Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button.</td></tr>
     * <tr><td><code>{@link #ActionBar_customNavigationLayout org.nativescript.playvue:customNavigationLayout}</code></td><td>Specifies a layout for custom navigation.</td></tr>
     * <tr><td><code>{@link #ActionBar_displayOptions org.nativescript.playvue:displayOptions}</code></td><td>Options affecting how the action bar is displayed.</td></tr>
     * <tr><td><code>{@link #ActionBar_divider org.nativescript.playvue:divider}</code></td><td>Specifies the drawable used for item dividers.</td></tr>
     * <tr><td><code>{@link #ActionBar_elevation org.nativescript.playvue:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #ActionBar_height org.nativescript.playvue:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionBar_hideOnContentScroll org.nativescript.playvue:hideOnContentScroll}</code></td><td>Set true to hide the action bar on a vertical nested scroll of content.</td></tr>
     * <tr><td><code>{@link #ActionBar_homeAsUpIndicator org.nativescript.playvue:homeAsUpIndicator}</code></td><td>Specifies a drawable to use for the 'home as up' indicator.</td></tr>
     * <tr><td><code>{@link #ActionBar_homeLayout org.nativescript.playvue:homeLayout}</code></td><td>Specifies a layout to use for the "home" section of the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_icon org.nativescript.playvue:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionBar_indeterminateProgressStyle org.nativescript.playvue:indeterminateProgressStyle}</code></td><td>Specifies a style resource to use for an indeterminate progress spinner.</td></tr>
     * <tr><td><code>{@link #ActionBar_itemPadding org.nativescript.playvue:itemPadding}</code></td><td>Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_logo org.nativescript.playvue:logo}</code></td><td>Specifies the drawable used for the application logo.</td></tr>
     * <tr><td><code>{@link #ActionBar_navigationMode org.nativescript.playvue:navigationMode}</code></td><td>The type of navigation to use.</td></tr>
     * <tr><td><code>{@link #ActionBar_popupTheme org.nativescript.playvue:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_progressBarPadding org.nativescript.playvue:progressBarPadding}</code></td><td>Specifies the horizontal padding on either end for an embedded progress bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_progressBarStyle org.nativescript.playvue:progressBarStyle}</code></td><td>Specifies a style resource to use for an embedded progress bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_subtitle org.nativescript.playvue:subtitle}</code></td><td>Specifies subtitle text used for navigationMode="normal"</td></tr>
     * <tr><td><code>{@link #ActionBar_subtitleTextStyle org.nativescript.playvue:subtitleTextStyle}</code></td><td>Specifies a style to use for subtitle text.</td></tr>
     * <tr><td><code>{@link #ActionBar_title org.nativescript.playvue:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionBar_titleTextStyle org.nativescript.playvue:titleTextStyle}</code></td><td>Specifies a style to use for title text.</td></tr>
     * </table>
     * @see #ActionBar_background
     * @see #ActionBar_backgroundSplit
     * @see #ActionBar_backgroundStacked
     * @see #ActionBar_contentInsetEnd
     * @see #ActionBar_contentInsetEndWithActions
     * @see #ActionBar_contentInsetLeft
     * @see #ActionBar_contentInsetRight
     * @see #ActionBar_contentInsetStart
     * @see #ActionBar_contentInsetStartWithNavigation
     * @see #ActionBar_customNavigationLayout
     * @see #ActionBar_displayOptions
     * @see #ActionBar_divider
     * @see #ActionBar_elevation
     * @see #ActionBar_height
     * @see #ActionBar_hideOnContentScroll
     * @see #ActionBar_homeAsUpIndicator
     * @see #ActionBar_homeLayout
     * @see #ActionBar_icon
     * @see #ActionBar_indeterminateProgressStyle
     * @see #ActionBar_itemPadding
     * @see #ActionBar_logo
     * @see #ActionBar_navigationMode
     * @see #ActionBar_popupTheme
     * @see #ActionBar_progressBarPadding
     * @see #ActionBar_progressBarStyle
     * @see #ActionBar_subtitle
     * @see #ActionBar_subtitleTextStyle
     * @see #ActionBar_title
     * @see #ActionBar_titleTextStyle
     */
    public static final int[] ActionBar={
      0x7f03004e, 0x7f030050, 0x7f030051, 0x7f0300bf, 
      0x7f0300c0, 0x7f0300c1, 0x7f0300c2, 0x7f0300c3, 
      0x7f0300c4, 0x7f0300d2, 0x7f0300da, 0x7f0300db, 
      0x7f0300e6, 0x7f030117, 0x7f03011c, 0x7f030121, 
      0x7f030122, 0x7f030127, 0x7f030133, 0x7f03013e, 
      0x7f030175, 0x7f030193, 0x7f0301ae, 0x7f0301b6, 
      0x7f0301b7, 0x7f030202, 0x7f030206, 0x7f030251, 
      0x7f03025c
    };
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:background
     */
    public static final int ActionBar_background=0;
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for the bottom component of a split action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:backgroundSplit
     */
    public static final int ActionBar_backgroundSplit=1;
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for a second stacked row of the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:backgroundStacked
     */
    public static final int ActionBar_backgroundStacked=2;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:contentInsetEnd
     */
    public static final int ActionBar_contentInsetEnd=3;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:contentInsetEndWithActions
     */
    public static final int ActionBar_contentInsetEndWithActions=4;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:contentInsetLeft
     */
    public static final int ActionBar_contentInsetLeft=5;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:contentInsetRight
     */
    public static final int ActionBar_contentInsetRight=6;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:contentInsetStart
     */
    public static final int ActionBar_contentInsetStart=7;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:contentInsetStartWithNavigation
     */
    public static final int ActionBar_contentInsetStartWithNavigation=8;
    /**
     * <p>
     * @attr description
     * Specifies a layout for custom navigation. Overrides navigationMode.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:customNavigationLayout
     */
    public static final int ActionBar_customNavigationLayout=9;
    /**
     * <p>
     * @attr description
     * Options affecting how the action bar is displayed.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disableHome</td><td>20</td><td></td></tr>
     * <tr><td>homeAsUp</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>showCustom</td><td>10</td><td></td></tr>
     * <tr><td>showHome</td><td>2</td><td></td></tr>
     * <tr><td>showTitle</td><td>8</td><td></td></tr>
     * <tr><td>useLogo</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:displayOptions
     */
    public static final int ActionBar_displayOptions=10;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for item dividers.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:divider
     */
    public static final int ActionBar_divider=11;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:elevation
     */
    public static final int ActionBar_elevation=12;
    /**
     * <p>
     * @attr description
     * Specifies a fixed height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:height
     */
    public static final int ActionBar_height=13;
    /**
     * <p>
     * @attr description
     * Set true to hide the action bar on a vertical nested scroll of content.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:hideOnContentScroll
     */
    public static final int ActionBar_hideOnContentScroll=14;
    /**
     * <p>
     * @attr description
     * Up navigation glyph
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:homeAsUpIndicator
     */
    public static final int ActionBar_homeAsUpIndicator=15;
    /**
     * <p>
     * @attr description
     * Specifies a layout to use for the "home" section of the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:homeLayout
     */
    public static final int ActionBar_homeLayout=16;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for the application icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:icon
     */
    public static final int ActionBar_icon=17;
    /**
     * <p>
     * @attr description
     * Specifies a style resource to use for an indeterminate progress spinner.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:indeterminateProgressStyle
     */
    public static final int ActionBar_indeterminateProgressStyle=18;
    /**
     * <p>
     * @attr description
     * Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:itemPadding
     */
    public static final int ActionBar_itemPadding=19;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for the application logo.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:logo
     */
    public static final int ActionBar_logo=20;
    /**
     * <p>
     * @attr description
     * The type of navigation to use.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>listMode</td><td>1</td><td>The action bar will use a selection list for navigation.</td></tr>
     * <tr><td>normal</td><td>0</td><td>Normal static title text</td></tr>
     * <tr><td>tabMode</td><td>2</td><td>The action bar will use a series of horizontal tabs for navigation.</td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:navigationMode
     */
    public static final int ActionBar_navigationMode=21;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:popupTheme
     */
    public static final int ActionBar_popupTheme=22;
    /**
     * <p>
     * @attr description
     * Specifies the horizontal padding on either end for an embedded progress bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:progressBarPadding
     */
    public static final int ActionBar_progressBarPadding=23;
    /**
     * <p>
     * @attr description
     * Specifies a style resource to use for an embedded progress bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:progressBarStyle
     */
    public static final int ActionBar_progressBarStyle=24;
    /**
     * <p>
     * @attr description
     * Specifies subtitle text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:subtitle
     */
    public static final int ActionBar_subtitle=25;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for subtitle text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:subtitleTextStyle
     */
    public static final int ActionBar_subtitleTextStyle=26;
    /**
     * <p>
     * @attr description
     * Specifies title text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:title
     */
    public static final int ActionBar_title=27;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for title text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:titleTextStyle
     */
    public static final int ActionBar_titleTextStyle=28;
    /**
     * Attributes that can be used with a ActionBarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionBarLayout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * </table>
     * @see #ActionBarLayout_android_layout_gravity
     */
    public static final int[] ActionBarLayout={
      0x010100b3
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #ActionBarLayout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int ActionBarLayout_android_layout_gravity=0;
    /**
     * Attributes that can be used with a ActionMenuItemView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionMenuItemView_android_minWidth android:minWidth}</code></td><td></td></tr>
     * </table>
     * @see #ActionMenuItemView_android_minWidth
     */
    public static final int[] ActionMenuItemView={
      0x0101013f
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minWidth}
     * attribute's value can be found in the {@link #ActionMenuItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int ActionMenuItemView_android_minWidth=0;
    public static final int[] ActionMenuView={
    };
    /**
     * Attributes that can be used with a ActionMode.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionMode_background org.nativescript.playvue:background}</code></td><td>Specifies a background drawable for the action bar.</td></tr>
     * <tr><td><code>{@link #ActionMode_backgroundSplit org.nativescript.playvue:backgroundSplit}</code></td><td>Specifies a background drawable for the bottom component of a split action bar.</td></tr>
     * <tr><td><code>{@link #ActionMode_closeItemLayout org.nativescript.playvue:closeItemLayout}</code></td><td>Specifies a layout to use for the "close" item at the starting edge.</td></tr>
     * <tr><td><code>{@link #ActionMode_height org.nativescript.playvue:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionMode_subtitleTextStyle org.nativescript.playvue:subtitleTextStyle}</code></td><td>Specifies a style to use for subtitle text.</td></tr>
     * <tr><td><code>{@link #ActionMode_titleTextStyle org.nativescript.playvue:titleTextStyle}</code></td><td>Specifies a style to use for title text.</td></tr>
     * </table>
     * @see #ActionMode_background
     * @see #ActionMode_backgroundSplit
     * @see #ActionMode_closeItemLayout
     * @see #ActionMode_height
     * @see #ActionMode_subtitleTextStyle
     * @see #ActionMode_titleTextStyle
     */
    public static final int[] ActionMode={
      0x7f03004e, 0x7f030050, 0x7f0300a9, 0x7f030117, 
      0x7f030206, 0x7f03025c
    };
    /**
     * <p>
     * @attr description
     * Specifies a background for the action mode bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:background
     */
    public static final int ActionMode_background=0;
    /**
     * <p>
     * @attr description
     * Specifies a background for the split action mode bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:backgroundSplit
     */
    public static final int ActionMode_backgroundSplit=1;
    /**
     * <p>
     * @attr description
     * Specifies a layout to use for the "close" item at the starting edge.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:closeItemLayout
     */
    public static final int ActionMode_closeItemLayout=2;
    /**
     * <p>
     * @attr description
     * Specifies a fixed height for the action mode bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:height
     */
    public static final int ActionMode_height=3;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for subtitle text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:subtitleTextStyle
     */
    public static final int ActionMode_subtitleTextStyle=4;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for title text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:titleTextStyle
     */
    public static final int ActionMode_titleTextStyle=5;
    /**
     * Attributes that can be used with a ActivityChooserView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActivityChooserView_expandActivityOverflowButtonDrawable org.nativescript.playvue:expandActivityOverflowButtonDrawable}</code></td><td>The drawable to show in the button for expanding the activities overflow popup.</td></tr>
     * <tr><td><code>{@link #ActivityChooserView_initialActivityCount org.nativescript.playvue:initialActivityCount}</code></td><td>The maximal number of items initially shown in the activity list.</td></tr>
     * </table>
     * @see #ActivityChooserView_expandActivityOverflowButtonDrawable
     * @see #ActivityChooserView_initialActivityCount
     */
    public static final int[] ActivityChooserView={
      0x7f0300ec, 0x7f030134
    };
    /**
     * <p>
     * @attr description
     * The drawable to show in the button for expanding the activities overflow popup.
     * <strong>Note:</strong> Clients would like to set this drawable
     * as a clue about the action the chosen activity will perform. For
     * example, if share activity is to be chosen the drawable should
     * give a clue that sharing is to be performed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:expandActivityOverflowButtonDrawable
     */
    public static final int ActivityChooserView_expandActivityOverflowButtonDrawable=0;
    /**
     * <p>
     * @attr description
     * The maximal number of items initially shown in the activity list.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:initialActivityCount
     */
    public static final int ActivityChooserView_initialActivityCount=1;
    /**
     * Attributes that can be used with a AlertDialog.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AlertDialog_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_buttonIconDimen org.nativescript.playvue:buttonIconDimen}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_buttonPanelSideLayout org.nativescript.playvue:buttonPanelSideLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_listItemLayout org.nativescript.playvue:listItemLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_listLayout org.nativescript.playvue:listLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_multiChoiceItemLayout org.nativescript.playvue:multiChoiceItemLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_showTitle org.nativescript.playvue:showTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_singleChoiceItemLayout org.nativescript.playvue:singleChoiceItemLayout}</code></td><td></td></tr>
     * </table>
     * @see #AlertDialog_android_layout
     * @see #AlertDialog_buttonIconDimen
     * @see #AlertDialog_buttonPanelSideLayout
     * @see #AlertDialog_listItemLayout
     * @see #AlertDialog_listLayout
     * @see #AlertDialog_multiChoiceItemLayout
     * @see #AlertDialog_showTitle
     * @see #AlertDialog_singleChoiceItemLayout
     */
    public static final int[] AlertDialog={
      0x010100f2, 0x7f030071, 0x7f030072, 0x7f03016b, 
      0x7f03016c, 0x7f030190, 0x7f0301e7, 0x7f0301e8
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int AlertDialog_android_layout=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#buttonIconDimen}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:buttonIconDimen
     */
    public static final int AlertDialog_buttonIconDimen=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#buttonPanelSideLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:buttonPanelSideLayout
     */
    public static final int AlertDialog_buttonPanelSideLayout=2;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#listItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:listItemLayout
     */
    public static final int AlertDialog_listItemLayout=3;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#listLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:listLayout
     */
    public static final int AlertDialog_listLayout=4;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#multiChoiceItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:multiChoiceItemLayout
     */
    public static final int AlertDialog_multiChoiceItemLayout=5;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#showTitle}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:showTitle
     */
    public static final int AlertDialog_showTitle=6;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#singleChoiceItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:singleChoiceItemLayout
     */
    public static final int AlertDialog_singleChoiceItemLayout=7;
    /**
     * Attributes that can be used with a AnimatedStateListDrawableCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_dither android:dither}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_variablePadding android:variablePadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_constantSize android:constantSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_enterFadeDuration android:enterFadeDuration}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_exitFadeDuration android:exitFadeDuration}</code></td><td></td></tr>
     * </table>
     * @see #AnimatedStateListDrawableCompat_android_dither
     * @see #AnimatedStateListDrawableCompat_android_visible
     * @see #AnimatedStateListDrawableCompat_android_variablePadding
     * @see #AnimatedStateListDrawableCompat_android_constantSize
     * @see #AnimatedStateListDrawableCompat_android_enterFadeDuration
     * @see #AnimatedStateListDrawableCompat_android_exitFadeDuration
     */
    public static final int[] AnimatedStateListDrawableCompat={
      0x0101011c, 0x01010194, 0x01010195, 0x01010196, 
      0x0101030c, 0x0101030d
    };
    /**
     * <p>
     * @attr description
     * Enables or disables dithering of the bitmap if the bitmap does not have the
     * same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
     * an RGB 565 screen).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:dither
     */
    public static final int AnimatedStateListDrawableCompat_android_dither=0;
    /**
     * <p>
     * @attr description
     * Indicates whether the drawable should be initially visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int AnimatedStateListDrawableCompat_android_visible=1;
    /**
     * <p>
     * @attr description
     * If true, allows the drawable's padding to change based on the
     * current state that is selected.  If false, the padding will
     * stay the same (based on the maximum padding of all the states).
     * Enabling this feature requires that the owner of the drawable
     * deal with performing layout when the state changes, which is
     * often not supported.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:variablePadding
     */
    public static final int AnimatedStateListDrawableCompat_android_variablePadding=2;
    /**
     * <p>
     * @attr description
     * If true, the drawable's reported internal size will remain
     * constant as the state changes; the size is the maximum of all
     * of the states.  If false, the size will vary based on the
     * current state.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:constantSize
     */
    public static final int AnimatedStateListDrawableCompat_android_constantSize=3;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade in a new state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:enterFadeDuration
     */
    public static final int AnimatedStateListDrawableCompat_android_enterFadeDuration=4;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade out an old state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:exitFadeDuration
     */
    public static final int AnimatedStateListDrawableCompat_android_exitFadeDuration=5;
    /**
     * Attributes that can be used with a AnimatedStateListDrawableItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableItem_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableItem_android_drawable android:drawable}</code></td><td></td></tr>
     * </table>
     * @see #AnimatedStateListDrawableItem_android_id
     * @see #AnimatedStateListDrawableItem_android_drawable
     */
    public static final int[] AnimatedStateListDrawableItem={
      0x010100d0, 0x01010199
    };
    /**
     * <p>
     * @attr description
     * Keyframe identifier for use in specifying transitions.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int AnimatedStateListDrawableItem_android_id=0;
    /**
     * <p>
     * @attr description
     * Reference to a drawable resource to use for the frame.  If not
     * given, the drawable must be defined by the first child tag.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:drawable
     */
    public static final int AnimatedStateListDrawableItem_android_drawable=1;
    /**
     * Attributes that can be used with a AnimatedStateListDrawableTransition.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_drawable android:drawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_toId android:toId}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_fromId android:fromId}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_reversible android:reversible}</code></td><td></td></tr>
     * </table>
     * @see #AnimatedStateListDrawableTransition_android_drawable
     * @see #AnimatedStateListDrawableTransition_android_toId
     * @see #AnimatedStateListDrawableTransition_android_fromId
     * @see #AnimatedStateListDrawableTransition_android_reversible
     */
    public static final int[] AnimatedStateListDrawableTransition={
      0x01010199, 0x01010449, 0x0101044a, 0x0101044b
    };
    /**
     * <p>
     * @attr description
     * Reference to a animation drawable resource to use for the frame.  If not
     * given, the animation drawable must be defined by the first child tag.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:drawable
     */
    public static final int AnimatedStateListDrawableTransition_android_drawable=0;
    /**
     * <p>
     * @attr description
     * Keyframe identifier for the ending state.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:toId
     */
    public static final int AnimatedStateListDrawableTransition_android_toId=1;
    /**
     * <p>
     * @attr description
     * Keyframe identifier for the starting state.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:fromId
     */
    public static final int AnimatedStateListDrawableTransition_android_fromId=2;
    /**
     * <p>
     * @attr description
     * Whether this transition is reversible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:reversible
     */
    public static final int AnimatedStateListDrawableTransition_android_reversible=3;
    /**
     * Attributes that can be used with a AppBarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppBarLayout_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_android_touchscreenBlocksFocus android:touchscreenBlocksFocus}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_android_keyboardNavigationCluster android:keyboardNavigationCluster}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_elevation org.nativescript.playvue:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #AppBarLayout_expanded org.nativescript.playvue:expanded}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_liftOnScroll org.nativescript.playvue:liftOnScroll}</code></td><td></td></tr>
     * </table>
     * @see #AppBarLayout_android_background
     * @see #AppBarLayout_android_touchscreenBlocksFocus
     * @see #AppBarLayout_android_keyboardNavigationCluster
     * @see #AppBarLayout_elevation
     * @see #AppBarLayout_expanded
     * @see #AppBarLayout_liftOnScroll
     */
    public static final int[] AppBarLayout={
      0x010100d4, 0x0101048f, 0x01010540, 0x7f0300e6, 
      0x7f0300ed, 0x7f030163
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #AppBarLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int AppBarLayout_android_background=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#touchscreenBlocksFocus}
     * attribute's value can be found in the {@link #AppBarLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:touchscreenBlocksFocus
     */
    public static final int AppBarLayout_android_touchscreenBlocksFocus=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#keyboardNavigationCluster}
     * attribute's value can be found in the {@link #AppBarLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:keyboardNavigationCluster
     */
    public static final int AppBarLayout_android_keyboardNavigationCluster=2;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:elevation
     */
    public static final int AppBarLayout_elevation=3;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#expanded}
     * attribute's value can be found in the {@link #AppBarLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:expanded
     */
    public static final int AppBarLayout_expanded=4;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#liftOnScroll}
     * attribute's value can be found in the {@link #AppBarLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:liftOnScroll
     */
    public static final int AppBarLayout_liftOnScroll=5;
    /**
     * Attributes that can be used with a AppBarLayoutStates.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppBarLayoutStates_state_collapsed org.nativescript.playvue:state_collapsed}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayoutStates_state_collapsible org.nativescript.playvue:state_collapsible}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayoutStates_state_liftable org.nativescript.playvue:state_liftable}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayoutStates_state_lifted org.nativescript.playvue:state_lifted}</code></td><td></td></tr>
     * </table>
     * @see #AppBarLayoutStates_state_collapsed
     * @see #AppBarLayoutStates_state_collapsible
     * @see #AppBarLayoutStates_state_liftable
     * @see #AppBarLayoutStates_state_lifted
     */
    public static final int[] AppBarLayoutStates={
      0x7f0301f7, 0x7f0301f8, 0x7f0301f9, 0x7f0301fa
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#state_collapsed}
     * attribute's value can be found in the {@link #AppBarLayoutStates} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:state_collapsed
     */
    public static final int AppBarLayoutStates_state_collapsed=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#state_collapsible}
     * attribute's value can be found in the {@link #AppBarLayoutStates} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:state_collapsible
     */
    public static final int AppBarLayoutStates_state_collapsible=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#state_liftable}
     * attribute's value can be found in the {@link #AppBarLayoutStates} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:state_liftable
     */
    public static final int AppBarLayoutStates_state_liftable=2;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#state_lifted}
     * attribute's value can be found in the {@link #AppBarLayoutStates} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:state_lifted
     */
    public static final int AppBarLayoutStates_state_lifted=3;
    /**
     * Attributes that can be used with a AppBarLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppBarLayout_Layout_layout_scrollFlags org.nativescript.playvue:layout_scrollFlags}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_Layout_layout_scrollInterpolator org.nativescript.playvue:layout_scrollInterpolator}</code></td><td></td></tr>
     * </table>
     * @see #AppBarLayout_Layout_layout_scrollFlags
     * @see #AppBarLayout_Layout_layout_scrollInterpolator
     */
    public static final int[] AppBarLayout_Layout={
      0x7f030160, 0x7f030161
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#layout_scrollFlags}
     * attribute's value can be found in the {@link #AppBarLayout_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>enterAlways</td><td>4</td><td></td></tr>
     * <tr><td>enterAlwaysCollapsed</td><td>8</td><td></td></tr>
     * <tr><td>exitUntilCollapsed</td><td>2</td><td></td></tr>
     * <tr><td>scroll</td><td>1</td><td></td></tr>
     * <tr><td>snap</td><td>10</td><td></td></tr>
     * <tr><td>snapMargins</td><td>20</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:layout_scrollFlags
     */
    public static final int AppBarLayout_Layout_layout_scrollFlags=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#layout_scrollInterpolator}
     * attribute's value can be found in the {@link #AppBarLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:layout_scrollInterpolator
     */
    public static final int AppBarLayout_Layout_layout_scrollInterpolator=1;
    /**
     * Attributes that can be used with a AppCompatImageView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatImageView_android_src android:src}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatImageView_srcCompat org.nativescript.playvue:srcCompat}</code></td><td>Sets a drawable as the content of this ImageView.</td></tr>
     * <tr><td><code>{@link #AppCompatImageView_tint org.nativescript.playvue:tint}</code></td><td>Tint to apply to the image source.</td></tr>
     * <tr><td><code>{@link #AppCompatImageView_tintMode org.nativescript.playvue:tintMode}</code></td><td>Blending mode used to apply the image source tint.</td></tr>
     * </table>
     * @see #AppCompatImageView_android_src
     * @see #AppCompatImageView_srcCompat
     * @see #AppCompatImageView_tint
     * @see #AppCompatImageView_tintMode
     */
    public static final int[] AppCompatImageView={
      0x01010119, 0x7f0301f2, 0x7f03024f, 0x7f030250
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#src}
     * attribute's value can be found in the {@link #AppCompatImageView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:src
     */
    public static final int AppCompatImageView_android_src=0;
    /**
     * <p>
     * @attr description
     * Sets a drawable as the content of this ImageView. Allows the use of vector drawable
     * when running on older versions of the platform.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:srcCompat
     */
    public static final int AppCompatImageView_srcCompat=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the image source.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:tint
     */
    public static final int AppCompatImageView_tint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the image source tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:tintMode
     */
    public static final int AppCompatImageView_tintMode=3;
    /**
     * Attributes that can be used with a AppCompatSeekBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_android_thumb android:thumb}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMark org.nativescript.playvue:tickMark}</code></td><td>Drawable displayed at each progress position on a seekbar.</td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMarkTint org.nativescript.playvue:tickMarkTint}</code></td><td>Tint to apply to the tick mark drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMarkTintMode org.nativescript.playvue:tickMarkTintMode}</code></td><td>Blending mode used to apply the tick mark tint.</td></tr>
     * </table>
     * @see #AppCompatSeekBar_android_thumb
     * @see #AppCompatSeekBar_tickMark
     * @see #AppCompatSeekBar_tickMarkTint
     * @see #AppCompatSeekBar_tickMarkTintMode
     */
    public static final int[] AppCompatSeekBar={
      0x01010142, 0x7f030248, 0x7f030249, 0x7f03024a
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#thumb}
     * attribute's value can be found in the {@link #AppCompatSeekBar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:thumb
     */
    public static final int AppCompatSeekBar_android_thumb=0;
    /**
     * <p>
     * @attr description
     * Drawable displayed at each progress position on a seekbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:tickMark
     */
    public static final int AppCompatSeekBar_tickMark=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the tick mark drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:tickMarkTint
     */
    public static final int AppCompatSeekBar_tickMarkTint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the tick mark tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:tickMarkTintMode
     */
    public static final int AppCompatSeekBar_tickMarkTintMode=3;
    /**
     * Attributes that can be used with a AppCompatTextHelper.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableTop android:drawableTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableBottom android:drawableBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableLeft android:drawableLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableRight android:drawableRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableStart android:drawableStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableEnd android:drawableEnd}</code></td><td></td></tr>
     * </table>
     * @see #AppCompatTextHelper_android_textAppearance
     * @see #AppCompatTextHelper_android_drawableTop
     * @see #AppCompatTextHelper_android_drawableBottom
     * @see #AppCompatTextHelper_android_drawableLeft
     * @see #AppCompatTextHelper_android_drawableRight
     * @see #AppCompatTextHelper_android_drawableStart
     * @see #AppCompatTextHelper_android_drawableEnd
     */
    public static final int[] AppCompatTextHelper={
      0x01010034, 0x0101016d, 0x0101016e, 0x0101016f, 
      0x01010170, 0x01010392, 0x01010393
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int AppCompatTextHelper_android_textAppearance=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableTop}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableTop
     */
    public static final int AppCompatTextHelper_android_drawableTop=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableBottom}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableBottom
     */
    public static final int AppCompatTextHelper_android_drawableBottom=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableLeft}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableLeft
     */
    public static final int AppCompatTextHelper_android_drawableLeft=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableRight}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableRight
     */
    public static final int AppCompatTextHelper_android_drawableRight=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableStart}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableStart
     */
    public static final int AppCompatTextHelper_android_drawableStart=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableEnd}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableEnd
     */
    public static final int AppCompatTextHelper_android_drawableEnd=6;
    /**
     * Attributes that can be used with a AppCompatTextView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTextView_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeMaxTextSize org.nativescript.playvue:autoSizeMaxTextSize}</code></td><td>The maximum text size constraint to be used when auto-sizing text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeMinTextSize org.nativescript.playvue:autoSizeMinTextSize}</code></td><td>The minimum text size constraint to be used when auto-sizing text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizePresetSizes org.nativescript.playvue:autoSizePresetSizes}</code></td><td>Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeStepGranularity org.nativescript.playvue:autoSizeStepGranularity}</code></td><td>Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeTextType org.nativescript.playvue:autoSizeTextType}</code></td><td>Specify the type of auto-size.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_firstBaselineToTopHeight org.nativescript.playvue:firstBaselineToTopHeight}</code></td><td>Distance from the top of the TextView to the first text baseline.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_fontFamily org.nativescript.playvue:fontFamily}</code></td><td>The attribute for the font family.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_lastBaselineToBottomHeight org.nativescript.playvue:lastBaselineToBottomHeight}</code></td><td>Distance from the bottom of the TextView to the last text baseline.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_lineHeight org.nativescript.playvue:lineHeight}</code></td><td>Explicit height between lines of text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_textAllCaps org.nativescript.playvue:textAllCaps}</code></td><td>Present the text in ALL CAPS.</td></tr>
     * </table>
     * @see #AppCompatTextView_android_textAppearance
     * @see #AppCompatTextView_autoSizeMaxTextSize
     * @see #AppCompatTextView_autoSizeMinTextSize
     * @see #AppCompatTextView_autoSizePresetSizes
     * @see #AppCompatTextView_autoSizeStepGranularity
     * @see #AppCompatTextView_autoSizeTextType
     * @see #AppCompatTextView_firstBaselineToTopHeight
     * @see #AppCompatTextView_fontFamily
     * @see #AppCompatTextView_lastBaselineToBottomHeight
     * @see #AppCompatTextView_lineHeight
     * @see #AppCompatTextView_textAllCaps
     */
    public static final int[] AppCompatTextView={
      0x01010034, 0x7f030046, 0x7f030047, 0x7f030048, 
      0x7f030049, 0x7f03004a, 0x7f030105, 0x7f030108, 
      0x7f030155, 0x7f030165, 0x7f030228
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int AppCompatTextView_android_textAppearance=0;
    /**
     * <p>
     * @attr description
     * The maximum text size constraint to be used when auto-sizing text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:autoSizeMaxTextSize
     */
    public static final int AppCompatTextView_autoSizeMaxTextSize=1;
    /**
     * <p>
     * @attr description
     * The minimum text size constraint to be used when auto-sizing text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:autoSizeMinTextSize
     */
    public static final int AppCompatTextView_autoSizeMinTextSize=2;
    /**
     * <p>
     * @attr description
     * Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>. Overrides
     * <code>autoSizeStepGranularity</code> if set.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:autoSizePresetSizes
     */
    public static final int AppCompatTextView_autoSizePresetSizes=3;
    /**
     * <p>
     * @attr description
     * Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>. The default is 1px. Overwrites
     * <code>autoSizePresetSizes</code> if set.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:autoSizeStepGranularity
     */
    public static final int AppCompatTextView_autoSizeStepGranularity=4;
    /**
     * <p>
     * @attr description
     * Specify the type of auto-size. Note that this feature is not supported by EditText,
     * works only for TextView.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>No auto-sizing (default).</td></tr>
     * <tr><td>uniform</td><td>1</td><td>Uniform horizontal and vertical text size scaling to fit within the
     * container.</td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:autoSizeTextType
     */
    public static final int AppCompatTextView_autoSizeTextType=5;
    /**
     * <p>
     * @attr description
     * Distance from the top of the TextView to the first text baseline. If set, this
     * overrides the value set for paddingTop.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:firstBaselineToTopHeight
     */
    public static final int AppCompatTextView_firstBaselineToTopHeight=6;
    /**
     * <p>
     * @attr description
     * The attribute for the font family.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:fontFamily
     */
    public static final int AppCompatTextView_fontFamily=7;
    /**
     * <p>
     * @attr description
     * Distance from the bottom of the TextView to the last text baseline. If set, this
     * overrides the value set for paddingBottom.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:lastBaselineToBottomHeight
     */
    public static final int AppCompatTextView_lastBaselineToBottomHeight=8;
    /**
     * <p>
     * @attr description
     * Explicit height between lines of text. If set, this will override the values set
     * for lineSpacingExtra and lineSpacingMultiplier.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:lineHeight
     */
    public static final int AppCompatTextView_lineHeight=9;
    /**
     * <p>
     * @attr description
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:textAllCaps
     */
    public static final int AppCompatTextView_textAllCaps=10;
    /**
     * Attributes that can be used with a AppCompatTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTheme_android_windowIsFloating android:windowIsFloating}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarDivider org.nativescript.playvue:actionBarDivider}</code></td><td>Custom divider drawable to use for elements in the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarItemBackground org.nativescript.playvue:actionBarItemBackground}</code></td><td>Custom item state list drawable background for action bar items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarPopupTheme org.nativescript.playvue:actionBarPopupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarSize org.nativescript.playvue:actionBarSize}</code></td><td>Size of the Action Bar, including the contextual
     * bar used to present Action Modes.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarSplitStyle org.nativescript.playvue:actionBarSplitStyle}</code></td><td>Reference to a style for the split Action Bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarStyle org.nativescript.playvue:actionBarStyle}</code></td><td>Reference to a style for the Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabBarStyle org.nativescript.playvue:actionBarTabBarStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabStyle org.nativescript.playvue:actionBarTabStyle}</code></td><td>Default style for tabs within an action bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabTextStyle org.nativescript.playvue:actionBarTabTextStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTheme org.nativescript.playvue:actionBarTheme}</code></td><td>Reference to a theme that should be used to inflate the
     * action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarWidgetTheme org.nativescript.playvue:actionBarWidgetTheme}</code></td><td>Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionButtonStyle org.nativescript.playvue:actionButtonStyle}</code></td><td>Default action button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionDropDownStyle org.nativescript.playvue:actionDropDownStyle}</code></td><td>Default ActionBar dropdown style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionMenuTextAppearance org.nativescript.playvue:actionMenuTextAppearance}</code></td><td>TextAppearance style that will be applied to text that
     * appears within action menu items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionMenuTextColor org.nativescript.playvue:actionMenuTextColor}</code></td><td>Color for text that appears within action menu items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeBackground org.nativescript.playvue:actionModeBackground}</code></td><td>Background drawable to use for action mode UI</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCloseButtonStyle org.nativescript.playvue:actionModeCloseButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCloseDrawable org.nativescript.playvue:actionModeCloseDrawable}</code></td><td>Drawable to use for the close action mode button</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCopyDrawable org.nativescript.playvue:actionModeCopyDrawable}</code></td><td>Drawable to use for the Copy action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCutDrawable org.nativescript.playvue:actionModeCutDrawable}</code></td><td>Drawable to use for the Cut action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeFindDrawable org.nativescript.playvue:actionModeFindDrawable}</code></td><td>Drawable to use for the Find action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModePasteDrawable org.nativescript.playvue:actionModePasteDrawable}</code></td><td>Drawable to use for the Paste action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModePopupWindowStyle org.nativescript.playvue:actionModePopupWindowStyle}</code></td><td>PopupWindow style to use for action modes when showing as a window overlay.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeSelectAllDrawable org.nativescript.playvue:actionModeSelectAllDrawable}</code></td><td>Drawable to use for the Select all action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeShareDrawable org.nativescript.playvue:actionModeShareDrawable}</code></td><td>Drawable to use for the Share action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeSplitBackground org.nativescript.playvue:actionModeSplitBackground}</code></td><td>Background drawable to use for action mode UI in the lower split bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeStyle org.nativescript.playvue:actionModeStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeWebSearchDrawable org.nativescript.playvue:actionModeWebSearchDrawable}</code></td><td>Drawable to use for the Web Search action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionOverflowButtonStyle org.nativescript.playvue:actionOverflowButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionOverflowMenuStyle org.nativescript.playvue:actionOverflowMenuStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_activityChooserViewStyle org.nativescript.playvue:activityChooserViewStyle}</code></td><td>Default ActivityChooserView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogButtonGroupStyle org.nativescript.playvue:alertDialogButtonGroupStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogCenterButtons org.nativescript.playvue:alertDialogCenterButtons}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogStyle org.nativescript.playvue:alertDialogStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogTheme org.nativescript.playvue:alertDialogTheme}</code></td><td>Theme to use for alert dialogs spawned from this theme.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_autoCompleteTextViewStyle org.nativescript.playvue:autoCompleteTextViewStyle}</code></td><td>Default AutoCompleteTextView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_borderlessButtonStyle org.nativescript.playvue:borderlessButtonStyle}</code></td><td>Style for buttons without an explicit border, often used in groups.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarButtonStyle org.nativescript.playvue:buttonBarButtonStyle}</code></td><td>Style for buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarNegativeButtonStyle org.nativescript.playvue:buttonBarNegativeButtonStyle}</code></td><td>Style for the "negative" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarNeutralButtonStyle org.nativescript.playvue:buttonBarNeutralButtonStyle}</code></td><td>Style for the "neutral" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarPositiveButtonStyle org.nativescript.playvue:buttonBarPositiveButtonStyle}</code></td><td>Style for the "positive" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarStyle org.nativescript.playvue:buttonBarStyle}</code></td><td>Style for button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonStyle org.nativescript.playvue:buttonStyle}</code></td><td>Normal Button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonStyleSmall org.nativescript.playvue:buttonStyleSmall}</code></td><td>Small Button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_checkboxStyle org.nativescript.playvue:checkboxStyle}</code></td><td>Default Checkbox style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_checkedTextViewStyle org.nativescript.playvue:checkedTextViewStyle}</code></td><td>Default CheckedTextView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorAccent org.nativescript.playvue:colorAccent}</code></td><td>Bright complement to the primary branding color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorBackgroundFloating org.nativescript.playvue:colorBackgroundFloating}</code></td><td>Default color of background imagery for floating components, ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorButtonNormal org.nativescript.playvue:colorButtonNormal}</code></td><td>The color applied to framework buttons in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlActivated org.nativescript.playvue:colorControlActivated}</code></td><td>The color applied to framework controls in their activated (ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlHighlight org.nativescript.playvue:colorControlHighlight}</code></td><td>The color applied to framework control highlights (ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlNormal org.nativescript.playvue:colorControlNormal}</code></td><td>The color applied to framework controls in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorError org.nativescript.playvue:colorError}</code></td><td>Color used for error states and things that need to be drawn to
     * the user's attention.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorPrimary org.nativescript.playvue:colorPrimary}</code></td><td>The primary branding color for the app.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorPrimaryDark org.nativescript.playvue:colorPrimaryDark}</code></td><td>Dark variant of the primary branding color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorSwitchThumbNormal org.nativescript.playvue:colorSwitchThumbNormal}</code></td><td>The color applied to framework switch thumbs in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_controlBackground org.nativescript.playvue:controlBackground}</code></td><td>The background used by framework controls.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogCornerRadius org.nativescript.playvue:dialogCornerRadius}</code></td><td>Preferred corner radius of dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogPreferredPadding org.nativescript.playvue:dialogPreferredPadding}</code></td><td>Preferred padding for dialog content.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogTheme org.nativescript.playvue:dialogTheme}</code></td><td>Theme to use for dialogs spawned from this theme.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dividerHorizontal org.nativescript.playvue:dividerHorizontal}</code></td><td>A drawable that may be used as a horizontal divider between visual elements.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dividerVertical org.nativescript.playvue:dividerVertical}</code></td><td>A drawable that may be used as a vertical divider between visual elements.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dropDownListViewStyle org.nativescript.playvue:dropDownListViewStyle}</code></td><td>ListPopupWindow compatibility</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dropdownListPreferredItemHeight org.nativescript.playvue:dropdownListPreferredItemHeight}</code></td><td>The preferred item height for dropdown lists.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextBackground org.nativescript.playvue:editTextBackground}</code></td><td>EditText background drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextColor org.nativescript.playvue:editTextColor}</code></td><td>EditText text foreground color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextStyle org.nativescript.playvue:editTextStyle}</code></td><td>Default EditText style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_homeAsUpIndicator org.nativescript.playvue:homeAsUpIndicator}</code></td><td>Specifies a drawable to use for the 'home as up' indicator.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_imageButtonStyle org.nativescript.playvue:imageButtonStyle}</code></td><td>ImageButton background drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listChoiceBackgroundIndicator org.nativescript.playvue:listChoiceBackgroundIndicator}</code></td><td>Drawable used as a background for selected list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listDividerAlertDialog org.nativescript.playvue:listDividerAlertDialog}</code></td><td>The list divider used in alert dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listMenuViewStyle org.nativescript.playvue:listMenuViewStyle}</code></td><td>Default menu-style ListView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPopupWindowStyle org.nativescript.playvue:listPopupWindowStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeight org.nativescript.playvue:listPreferredItemHeight}</code></td><td>The preferred list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeightLarge org.nativescript.playvue:listPreferredItemHeightLarge}</code></td><td>A larger, more robust list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeightSmall org.nativescript.playvue:listPreferredItemHeightSmall}</code></td><td>A smaller, sleeker list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingLeft org.nativescript.playvue:listPreferredItemPaddingLeft}</code></td><td>The preferred padding along the left edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingRight org.nativescript.playvue:listPreferredItemPaddingRight}</code></td><td>The preferred padding along the right edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelBackground org.nativescript.playvue:panelBackground}</code></td><td>The background of a panel when it is inset from the left and right edges of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelMenuListTheme org.nativescript.playvue:panelMenuListTheme}</code></td><td>Default Panel Menu style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelMenuListWidth org.nativescript.playvue:panelMenuListWidth}</code></td><td>Default Panel Menu width.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_popupMenuStyle org.nativescript.playvue:popupMenuStyle}</code></td><td>Default PopupMenu style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_popupWindowStyle org.nativescript.playvue:popupWindowStyle}</code></td><td>Default PopupWindow style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_radioButtonStyle org.nativescript.playvue:radioButtonStyle}</code></td><td>Default RadioButton style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyle org.nativescript.playvue:ratingBarStyle}</code></td><td>Default RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyleIndicator org.nativescript.playvue:ratingBarStyleIndicator}</code></td><td>Indicator RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyleSmall org.nativescript.playvue:ratingBarStyleSmall}</code></td><td>Small indicator RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_searchViewStyle org.nativescript.playvue:searchViewStyle}</code></td><td>Style for the search query widget.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_seekBarStyle org.nativescript.playvue:seekBarStyle}</code></td><td>Default SeekBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_selectableItemBackground org.nativescript.playvue:selectableItemBackground}</code></td><td>A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_selectableItemBackgroundBorderless org.nativescript.playvue:selectableItemBackgroundBorderless}</code></td><td>Background drawable for borderless standalone items that need focus/pressed states.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_spinnerDropDownItemStyle org.nativescript.playvue:spinnerDropDownItemStyle}</code></td><td>Default Spinner style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_spinnerStyle org.nativescript.playvue:spinnerStyle}</code></td><td>Default Spinner style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_switchStyle org.nativescript.playvue:switchStyle}</code></td><td>Default style for the Switch widget.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceLargePopupMenu org.nativescript.playvue:textAppearanceLargePopupMenu}</code></td><td>Text color, typeface, size, and style for the text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItem org.nativescript.playvue:textAppearanceListItem}</code></td><td>The preferred TextAppearance for the primary text of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItemSecondary org.nativescript.playvue:textAppearanceListItemSecondary}</code></td><td>The preferred TextAppearance for the secondary text of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItemSmall org.nativescript.playvue:textAppearanceListItemSmall}</code></td><td>The preferred TextAppearance for the primary text of small list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearancePopupMenuHeader org.nativescript.playvue:textAppearancePopupMenuHeader}</code></td><td>Text color, typeface, size, and style for header text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSearchResultSubtitle org.nativescript.playvue:textAppearanceSearchResultSubtitle}</code></td><td>Text color, typeface, size, and style for system search result subtitle.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSearchResultTitle org.nativescript.playvue:textAppearanceSearchResultTitle}</code></td><td>Text color, typeface, size, and style for system search result title.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSmallPopupMenu org.nativescript.playvue:textAppearanceSmallPopupMenu}</code></td><td>Text color, typeface, size, and style for small text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textColorAlertDialogListItem org.nativescript.playvue:textColorAlertDialogListItem}</code></td><td>Color of list item text in alert dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textColorSearchUrl org.nativescript.playvue:textColorSearchUrl}</code></td><td>Text color for urls in search suggestions, used by things like global search</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_toolbarNavigationButtonStyle org.nativescript.playvue:toolbarNavigationButtonStyle}</code></td><td>Default Toolar NavigationButtonStyle</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_toolbarStyle org.nativescript.playvue:toolbarStyle}</code></td><td>Default Toolbar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_tooltipForegroundColor org.nativescript.playvue:tooltipForegroundColor}</code></td><td>Foreground color to use for tooltips</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_tooltipFrameBackground org.nativescript.playvue:tooltipFrameBackground}</code></td><td>Background to use for tooltips</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_viewInflaterClass org.nativescript.playvue:viewInflaterClass}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionBar org.nativescript.playvue:windowActionBar}</code></td><td>Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionBarOverlay org.nativescript.playvue:windowActionBarOverlay}</code></td><td>Flag indicating whether this window's Action Bar should overlay
     * application content.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionModeOverlay org.nativescript.playvue:windowActionModeOverlay}</code></td><td>Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedHeightMajor org.nativescript.playvue:windowFixedHeightMajor}</code></td><td>A fixed height for the window along the major axis of the screen,
     * that is, when in portrait.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedHeightMinor org.nativescript.playvue:windowFixedHeightMinor}</code></td><td>A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedWidthMajor org.nativescript.playvue:windowFixedWidthMajor}</code></td><td>A fixed width for the window along the major axis of the screen,
     * that is, when in landscape.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedWidthMinor org.nativescript.playvue:windowFixedWidthMinor}</code></td><td>A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowMinWidthMajor org.nativescript.playvue:windowMinWidthMajor}</code></td><td>The minimum width the window is allowed to be, along the major
     * axis of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowMinWidthMinor org.nativescript.playvue:windowMinWidthMinor}</code></td><td>The minimum width the window is allowed to be, along the minor
     * axis of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowNoTitle org.nativescript.playvue:windowNoTitle}</code></td><td>Flag indicating whether there should be no title on this window.</td></tr>
     * </table>
     * @see #AppCompatTheme_android_windowIsFloating
     * @see #AppCompatTheme_android_windowAnimationStyle
     * @see #AppCompatTheme_actionBarDivider
     * @see #AppCompatTheme_actionBarItemBackground
     * @see #AppCompatTheme_actionBarPopupTheme
     * @see #AppCompatTheme_actionBarSize
     * @see #AppCompatTheme_actionBarSplitStyle
     * @see #AppCompatTheme_actionBarStyle
     * @see #AppCompatTheme_actionBarTabBarStyle
     * @see #AppCompatTheme_actionBarTabStyle
     * @see #AppCompatTheme_actionBarTabTextStyle
     * @see #AppCompatTheme_actionBarTheme
     * @see #AppCompatTheme_actionBarWidgetTheme
     * @see #AppCompatTheme_actionButtonStyle
     * @see #AppCompatTheme_actionDropDownStyle
     * @see #AppCompatTheme_actionMenuTextAppearance
     * @see #AppCompatTheme_actionMenuTextColor
     * @see #AppCompatTheme_actionModeBackground
     * @see #AppCompatTheme_actionModeCloseButtonStyle
     * @see #AppCompatTheme_actionModeCloseDrawable
     * @see #AppCompatTheme_actionModeCopyDrawable
     * @see #AppCompatTheme_actionModeCutDrawable
     * @see #AppCompatTheme_actionModeFindDrawable
     * @see #AppCompatTheme_actionModePasteDrawable
     * @see #AppCompatTheme_actionModePopupWindowStyle
     * @see #AppCompatTheme_actionModeSelectAllDrawable
     * @see #AppCompatTheme_actionModeShareDrawable
     * @see #AppCompatTheme_actionModeSplitBackground
     * @see #AppCompatTheme_actionModeStyle
     * @see #AppCompatTheme_actionModeWebSearchDrawable
     * @see #AppCompatTheme_actionOverflowButtonStyle
     * @see #AppCompatTheme_actionOverflowMenuStyle
     * @see #AppCompatTheme_activityChooserViewStyle
     * @see #AppCompatTheme_alertDialogButtonGroupStyle
     * @see #AppCompatTheme_alertDialogCenterButtons
     * @see #AppCompatTheme_alertDialogStyle
     * @see #AppCompatTheme_alertDialogTheme
     * @see #AppCompatTheme_autoCompleteTextViewStyle
     * @see #AppCompatTheme_borderlessButtonStyle
     * @see #AppCompatTheme_buttonBarButtonStyle
     * @see #AppCompatTheme_buttonBarNegativeButtonStyle
     * @see #AppCompatTheme_buttonBarNeutralButtonStyle
     * @see #AppCompatTheme_buttonBarPositiveButtonStyle
     * @see #AppCompatTheme_buttonBarStyle
     * @see #AppCompatTheme_buttonStyle
     * @see #AppCompatTheme_buttonStyleSmall
     * @see #AppCompatTheme_checkboxStyle
     * @see #AppCompatTheme_checkedTextViewStyle
     * @see #AppCompatTheme_colorAccent
     * @see #AppCompatTheme_colorBackgroundFloating
     * @see #AppCompatTheme_colorButtonNormal
     * @see #AppCompatTheme_colorControlActivated
     * @see #AppCompatTheme_colorControlHighlight
     * @see #AppCompatTheme_colorControlNormal
     * @see #AppCompatTheme_colorError
     * @see #AppCompatTheme_colorPrimary
     * @see #AppCompatTheme_colorPrimaryDark
     * @see #AppCompatTheme_colorSwitchThumbNormal
     * @see #AppCompatTheme_controlBackground
     * @see #AppCompatTheme_dialogCornerRadius
     * @see #AppCompatTheme_dialogPreferredPadding
     * @see #AppCompatTheme_dialogTheme
     * @see #AppCompatTheme_dividerHorizontal
     * @see #AppCompatTheme_dividerVertical
     * @see #AppCompatTheme_dropDownListViewStyle
     * @see #AppCompatTheme_dropdownListPreferredItemHeight
     * @see #AppCompatTheme_editTextBackground
     * @see #AppCompatTheme_editTextColor
     * @see #AppCompatTheme_editTextStyle
     * @see #AppCompatTheme_homeAsUpIndicator
     * @see #AppCompatTheme_imageButtonStyle
     * @see #AppCompatTheme_listChoiceBackgroundIndicator
     * @see #AppCompatTheme_listDividerAlertDialog
     * @see #AppCompatTheme_listMenuViewStyle
     * @see #AppCompatTheme_listPopupWindowStyle
     * @see #AppCompatTheme_listPreferredItemHeight
     * @see #AppCompatTheme_listPreferredItemHeightLarge
     * @see #AppCompatTheme_listPreferredItemHeightSmall
     * @see #AppCompatTheme_listPreferredItemPaddingLeft
     * @see #AppCompatTheme_listPreferredItemPaddingRight
     * @see #AppCompatTheme_panelBackground
     * @see #AppCompatTheme_panelMenuListTheme
     * @see #AppCompatTheme_panelMenuListWidth
     * @see #AppCompatTheme_popupMenuStyle
     * @see #AppCompatTheme_popupWindowStyle
     * @see #AppCompatTheme_radioButtonStyle
     * @see #AppCompatTheme_ratingBarStyle
     * @see #AppCompatTheme_ratingBarStyleIndicator
     * @see #AppCompatTheme_ratingBarStyleSmall
     * @see #AppCompatTheme_searchViewStyle
     * @see #AppCompatTheme_seekBarStyle
     * @see #AppCompatTheme_selectableItemBackground
     * @see #AppCompatTheme_selectableItemBackgroundBorderless
     * @see #AppCompatTheme_spinnerDropDownItemStyle
     * @see #AppCompatTheme_spinnerStyle
     * @see #AppCompatTheme_switchStyle
     * @see #AppCompatTheme_textAppearanceLargePopupMenu
     * @see #AppCompatTheme_textAppearanceListItem
     * @see #AppCompatTheme_textAppearanceListItemSecondary
     * @see #AppCompatTheme_textAppearanceListItemSmall
     * @see #AppCompatTheme_textAppearancePopupMenuHeader
     * @see #AppCompatTheme_textAppearanceSearchResultSubtitle
     * @see #AppCompatTheme_textAppearanceSearchResultTitle
     * @see #AppCompatTheme_textAppearanceSmallPopupMenu
     * @see #AppCompatTheme_textColorAlertDialogListItem
     * @see #AppCompatTheme_textColorSearchUrl
     * @see #AppCompatTheme_toolbarNavigationButtonStyle
     * @see #AppCompatTheme_toolbarStyle
     * @see #AppCompatTheme_tooltipForegroundColor
     * @see #AppCompatTheme_tooltipFrameBackground
     * @see #AppCompatTheme_viewInflaterClass
     * @see #AppCompatTheme_windowActionBar
     * @see #AppCompatTheme_windowActionBarOverlay
     * @see #AppCompatTheme_windowActionModeOverlay
     * @see #AppCompatTheme_windowFixedHeightMajor
     * @see #AppCompatTheme_windowFixedHeightMinor
     * @see #AppCompatTheme_windowFixedWidthMajor
     * @see #AppCompatTheme_windowFixedWidthMinor
     * @see #AppCompatTheme_windowMinWidthMajor
     * @see #AppCompatTheme_windowMinWidthMinor
     * @see #AppCompatTheme_windowNoTitle
     */
    public static final int[] AppCompatTheme={
      0x01010057, 0x010100ae, 0x7f030012, 0x7f030013, 
      0x7f030014, 0x7f030015, 0x7f030016, 0x7f030017, 
      0x7f030018, 0x7f030019, 0x7f03001a, 0x7f03001b, 
      0x7f03001c, 0x7f03001d, 0x7f03001e, 0x7f030020, 
      0x7f030021, 0x7f030022, 0x7f030023, 0x7f030024, 
      0x7f030025, 0x7f030026, 0x7f030027, 0x7f030028, 
      0x7f030029, 0x7f03002a, 0x7f03002b, 0x7f03002c, 
      0x7f03002d, 0x7f03002e, 0x7f03002f, 0x7f030030, 
      0x7f030033, 0x7f030037, 0x7f030038, 0x7f030039, 
      0x7f03003a, 0x7f030045, 0x7f03005c, 0x7f03006b, 
      0x7f03006c, 0x7f03006d, 0x7f03006e, 0x7f03006f, 
      0x7f030074, 0x7f030075, 0x7f030083, 0x7f030088, 
      0x7f0300af, 0x7f0300b0, 0x7f0300b1, 0x7f0300b2, 
      0x7f0300b3, 0x7f0300b4, 0x7f0300b5, 0x7f0300b6, 
      0x7f0300b7, 0x7f0300ba, 0x7f0300cb, 0x7f0300d6, 
      0x7f0300d7, 0x7f0300d8, 0x7f0300dc, 0x7f0300de, 
      0x7f0300e1, 0x7f0300e2, 0x7f0300e3, 0x7f0300e4, 
      0x7f0300e5, 0x7f030121, 0x7f030132, 0x7f030169, 
      0x7f03016a, 0x7f03016d, 0x7f03016e, 0x7f03016f, 
      0x7f030170, 0x7f030171, 0x7f030172, 0x7f030173, 
      0x7f03019f, 0x7f0301a0, 0x7f0301a1, 0x7f0301ad, 
      0x7f0301af, 0x7f0301bb, 0x7f0301bd, 0x7f0301be, 
      0x7f0301bf, 0x7f0301da, 0x7f0301db, 0x7f0301dc, 
      0x7f0301dd, 0x7f0301ef, 0x7f0301f0, 0x7f03020c, 
      0x7f030233, 0x7f030234, 0x7f030235, 0x7f030236, 
      0x7f030238, 0x7f030239, 0x7f03023a, 0x7f03023b, 
      0x7f03023e, 0x7f03023f, 0x7f030260, 0x7f030261, 
      0x7f030262, 0x7f030263, 0x7f030270, 0x7f030273, 
      0x7f030274, 0x7f030275, 0x7f030276, 0x7f030277, 
      0x7f030278, 0x7f030279, 0x7f03027a, 0x7f03027b, 
      0x7f03027c
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#windowIsFloating}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:windowIsFloating
     */
    public static final int AppCompatTheme_android_windowIsFloating=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#windowAnimationStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:windowAnimationStyle
     */
    public static final int AppCompatTheme_android_windowAnimationStyle=1;
    /**
     * <p>
     * @attr description
     * Custom divider drawable to use for elements in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actionBarDivider
     */
    public static final int AppCompatTheme_actionBarDivider=2;
    /**
     * <p>
     * @attr description
     * Custom item state list drawable background for action bar items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actionBarItemBackground
     */
    public static final int AppCompatTheme_actionBarItemBackground=3;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actionBarPopupTheme
     */
    public static final int AppCompatTheme_actionBarPopupTheme=4;
    /**
     * <p>
     * @attr description
     * Size of the Action Bar, including the contextual
     * bar used to present Action Modes.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap_content</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:actionBarSize
     */
    public static final int AppCompatTheme_actionBarSize=5;
    /**
     * <p>
     * @attr description
     * Reference to a style for the split Action Bar. This style
     * controls the split component that holds the menu/action
     * buttons. actionBarStyle is still used for the primary
     * bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actionBarSplitStyle
     */
    public static final int AppCompatTheme_actionBarSplitStyle=6;
    /**
     * <p>
     * @attr description
     * Reference to a style for the Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actionBarStyle
     */
    public static final int AppCompatTheme_actionBarStyle=7;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#actionBarTabBarStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actionBarTabBarStyle
     */
    public static final int AppCompatTheme_actionBarTabBarStyle=8;
    /**
     * <p>
     * @attr description
     * Default style for tabs within an action bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actionBarTabStyle
     */
    public static final int AppCompatTheme_actionBarTabStyle=9;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#actionBarTabTextStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actionBarTabTextStyle
     */
    public static final int AppCompatTheme_actionBarTabTextStyle=10;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate the
     * action bar. This will be inherited by any widget inflated
     * into the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actionBarTheme
     */
    public static final int AppCompatTheme_actionBarTheme=11;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar. Most of the time
     * this will be a reference to the current theme, but when
     * the action bar has a significantly different contrast
     * profile than the rest of the activity the difference
     * can become important. If this is set to @null the current
     * theme will be used.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actionBarWidgetTheme
     */
    public static final int AppCompatTheme_actionBarWidgetTheme=12;
    /**
     * <p>
     * @attr description
     * Default action button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actionButtonStyle
     */
    public static final int AppCompatTheme_actionButtonStyle=13;
    /**
     * <p>
     * @attr description
     * Default ActionBar dropdown style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actionDropDownStyle
     */
    public static final int AppCompatTheme_actionDropDownStyle=14;
    /**
     * <p>
     * @attr description
     * TextAppearance style that will be applied to text that
     * appears within action menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actionMenuTextAppearance
     */
    public static final int AppCompatTheme_actionMenuTextAppearance=15;
    /**
     * <p>
     * @attr description
     * Color for text that appears within action menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:actionMenuTextColor
     */
    public static final int AppCompatTheme_actionMenuTextColor=16;
    /**
     * <p>
     * @attr description
     * Background drawable to use for action mode UI
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actionModeBackground
     */
    public static final int AppCompatTheme_actionModeBackground=17;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#actionModeCloseButtonStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actionModeCloseButtonStyle
     */
    public static final int AppCompatTheme_actionModeCloseButtonStyle=18;
    /**
     * <p>
     * @attr description
     * Drawable to use for the close action mode button
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actionModeCloseDrawable
     */
    public static final int AppCompatTheme_actionModeCloseDrawable=19;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Copy action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actionModeCopyDrawable
     */
    public static final int AppCompatTheme_actionModeCopyDrawable=20;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Cut action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actionModeCutDrawable
     */
    public static final int AppCompatTheme_actionModeCutDrawable=21;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Find action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actionModeFindDrawable
     */
    public static final int AppCompatTheme_actionModeFindDrawable=22;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Paste action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actionModePasteDrawable
     */
    public static final int AppCompatTheme_actionModePasteDrawable=23;
    /**
     * <p>
     * @attr description
     * PopupWindow style to use for action modes when showing as a window overlay.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actionModePopupWindowStyle
     */
    public static final int AppCompatTheme_actionModePopupWindowStyle=24;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Select all action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actionModeSelectAllDrawable
     */
    public static final int AppCompatTheme_actionModeSelectAllDrawable=25;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Share action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actionModeShareDrawable
     */
    public static final int AppCompatTheme_actionModeShareDrawable=26;
    /**
     * <p>
     * @attr description
     * Background drawable to use for action mode UI in the lower split bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actionModeSplitBackground
     */
    public static final int AppCompatTheme_actionModeSplitBackground=27;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#actionModeStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actionModeStyle
     */
    public static final int AppCompatTheme_actionModeStyle=28;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Web Search action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actionModeWebSearchDrawable
     */
    public static final int AppCompatTheme_actionModeWebSearchDrawable=29;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#actionOverflowButtonStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actionOverflowButtonStyle
     */
    public static final int AppCompatTheme_actionOverflowButtonStyle=30;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#actionOverflowMenuStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actionOverflowMenuStyle
     */
    public static final int AppCompatTheme_actionOverflowMenuStyle=31;
    /**
     * <p>
     * @attr description
     * Default ActivityChooserView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:activityChooserViewStyle
     */
    public static final int AppCompatTheme_activityChooserViewStyle=32;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#alertDialogButtonGroupStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:alertDialogButtonGroupStyle
     */
    public static final int AppCompatTheme_alertDialogButtonGroupStyle=33;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#alertDialogCenterButtons}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:alertDialogCenterButtons
     */
    public static final int AppCompatTheme_alertDialogCenterButtons=34;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#alertDialogStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:alertDialogStyle
     */
    public static final int AppCompatTheme_alertDialogStyle=35;
    /**
     * <p>
     * @attr description
     * Theme to use for alert dialogs spawned from this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:alertDialogTheme
     */
    public static final int AppCompatTheme_alertDialogTheme=36;
    /**
     * <p>
     * @attr description
     * Default AutoCompleteTextView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:autoCompleteTextViewStyle
     */
    public static final int AppCompatTheme_autoCompleteTextViewStyle=37;
    /**
     * <p>
     * @attr description
     * Style for buttons without an explicit border, often used in groups.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:borderlessButtonStyle
     */
    public static final int AppCompatTheme_borderlessButtonStyle=38;
    /**
     * <p>
     * @attr description
     * Style for buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:buttonBarButtonStyle
     */
    public static final int AppCompatTheme_buttonBarButtonStyle=39;
    /**
     * <p>
     * @attr description
     * Style for the "negative" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:buttonBarNegativeButtonStyle
     */
    public static final int AppCompatTheme_buttonBarNegativeButtonStyle=40;
    /**
     * <p>
     * @attr description
     * Style for the "neutral" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:buttonBarNeutralButtonStyle
     */
    public static final int AppCompatTheme_buttonBarNeutralButtonStyle=41;
    /**
     * <p>
     * @attr description
     * Style for the "positive" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:buttonBarPositiveButtonStyle
     */
    public static final int AppCompatTheme_buttonBarPositiveButtonStyle=42;
    /**
     * <p>
     * @attr description
     * Style for button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:buttonBarStyle
     */
    public static final int AppCompatTheme_buttonBarStyle=43;
    /**
     * <p>
     * @attr description
     * Normal Button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:buttonStyle
     */
    public static final int AppCompatTheme_buttonStyle=44;
    /**
     * <p>
     * @attr description
     * Small Button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:buttonStyleSmall
     */
    public static final int AppCompatTheme_buttonStyleSmall=45;
    /**
     * <p>
     * @attr description
     * Default Checkbox style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:checkboxStyle
     */
    public static final int AppCompatTheme_checkboxStyle=46;
    /**
     * <p>
     * @attr description
     * Default CheckedTextView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:checkedTextViewStyle
     */
    public static final int AppCompatTheme_checkedTextViewStyle=47;
    /**
     * <p>
     * @attr description
     * Bright complement to the primary branding color. By default, this is the color applied
     * to framework controls (via colorControlActivated).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:colorAccent
     */
    public static final int AppCompatTheme_colorAccent=48;
    /**
     * <p>
     * @attr description
     * Default color of background imagery for floating components, ex. dialogs, popups, and cards.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:colorBackgroundFloating
     */
    public static final int AppCompatTheme_colorBackgroundFloating=49;
    /**
     * <p>
     * @attr description
     * The color applied to framework buttons in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:colorButtonNormal
     */
    public static final int AppCompatTheme_colorButtonNormal=50;
    /**
     * <p>
     * @attr description
     * The color applied to framework controls in their activated (ex. checked) state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:colorControlActivated
     */
    public static final int AppCompatTheme_colorControlActivated=51;
    /**
     * <p>
     * @attr description
     * The color applied to framework control highlights (ex. ripples, list selectors).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:colorControlHighlight
     */
    public static final int AppCompatTheme_colorControlHighlight=52;
    /**
     * <p>
     * @attr description
     * The color applied to framework controls in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:colorControlNormal
     */
    public static final int AppCompatTheme_colorControlNormal=53;
    /**
     * <p>
     * @attr description
     * Color used for error states and things that need to be drawn to
     * the user's attention.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:colorError
     */
    public static final int AppCompatTheme_colorError=54;
    /**
     * <p>
     * @attr description
     * The primary branding color for the app. By default, this is the color applied to the
     * action bar background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:colorPrimary
     */
    public static final int AppCompatTheme_colorPrimary=55;
    /**
     * <p>
     * @attr description
     * Dark variant of the primary branding color. By default, this is the color applied to
     * the status bar (via statusBarColor) and navigation bar (via navigationBarColor).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:colorPrimaryDark
     */
    public static final int AppCompatTheme_colorPrimaryDark=56;
    /**
     * <p>
     * @attr description
     * The color applied to framework switch thumbs in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:colorSwitchThumbNormal
     */
    public static final int AppCompatTheme_colorSwitchThumbNormal=57;
    /**
     * <p>
     * @attr description
     * The background used by framework controls.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:controlBackground
     */
    public static final int AppCompatTheme_controlBackground=58;
    /**
     * <p>
     * @attr description
     * Preferred corner radius of dialogs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:dialogCornerRadius
     */
    public static final int AppCompatTheme_dialogCornerRadius=59;
    /**
     * <p>
     * @attr description
     * Preferred padding for dialog content.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:dialogPreferredPadding
     */
    public static final int AppCompatTheme_dialogPreferredPadding=60;
    /**
     * <p>
     * @attr description
     * Theme to use for dialogs spawned from this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:dialogTheme
     */
    public static final int AppCompatTheme_dialogTheme=61;
    /**
     * <p>
     * @attr description
     * A drawable that may be used as a horizontal divider between visual elements.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:dividerHorizontal
     */
    public static final int AppCompatTheme_dividerHorizontal=62;
    /**
     * <p>
     * @attr description
     * A drawable that may be used as a vertical divider between visual elements.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:dividerVertical
     */
    public static final int AppCompatTheme_dividerVertical=63;
    /**
     * <p>
     * @attr description
     * ListPopupWindow compatibility
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:dropDownListViewStyle
     */
    public static final int AppCompatTheme_dropDownListViewStyle=64;
    /**
     * <p>
     * @attr description
     * The preferred item height for dropdown lists.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:dropdownListPreferredItemHeight
     */
    public static final int AppCompatTheme_dropdownListPreferredItemHeight=65;
    /**
     * <p>
     * @attr description
     * EditText background drawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:editTextBackground
     */
    public static final int AppCompatTheme_editTextBackground=66;
    /**
     * <p>
     * @attr description
     * EditText text foreground color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:editTextColor
     */
    public static final int AppCompatTheme_editTextColor=67;
    /**
     * <p>
     * @attr description
     * Default EditText style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:editTextStyle
     */
    public static final int AppCompatTheme_editTextStyle=68;
    /**
     * <p>
     * @attr description
     * Specifies a drawable to use for the 'home as up' indicator.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:homeAsUpIndicator
     */
    public static final int AppCompatTheme_homeAsUpIndicator=69;
    /**
     * <p>
     * @attr description
     * ImageButton background drawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:imageButtonStyle
     */
    public static final int AppCompatTheme_imageButtonStyle=70;
    /**
     * <p>
     * @attr description
     * Drawable used as a background for selected list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:listChoiceBackgroundIndicator
     */
    public static final int AppCompatTheme_listChoiceBackgroundIndicator=71;
    /**
     * <p>
     * @attr description
     * The list divider used in alert dialogs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:listDividerAlertDialog
     */
    public static final int AppCompatTheme_listDividerAlertDialog=72;
    /**
     * <p>
     * @attr description
     * Default menu-style ListView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:listMenuViewStyle
     */
    public static final int AppCompatTheme_listMenuViewStyle=73;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#listPopupWindowStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:listPopupWindowStyle
     */
    public static final int AppCompatTheme_listPopupWindowStyle=74;
    /**
     * <p>
     * @attr description
     * The preferred list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:listPreferredItemHeight
     */
    public static final int AppCompatTheme_listPreferredItemHeight=75;
    /**
     * <p>
     * @attr description
     * A larger, more robust list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:listPreferredItemHeightLarge
     */
    public static final int AppCompatTheme_listPreferredItemHeightLarge=76;
    /**
     * <p>
     * @attr description
     * A smaller, sleeker list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:listPreferredItemHeightSmall
     */
    public static final int AppCompatTheme_listPreferredItemHeightSmall=77;
    /**
     * <p>
     * @attr description
     * The preferred padding along the left edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:listPreferredItemPaddingLeft
     */
    public static final int AppCompatTheme_listPreferredItemPaddingLeft=78;
    /**
     * <p>
     * @attr description
     * The preferred padding along the right edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:listPreferredItemPaddingRight
     */
    public static final int AppCompatTheme_listPreferredItemPaddingRight=79;
    /**
     * <p>
     * @attr description
     * The background of a panel when it is inset from the left and right edges of the screen.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:panelBackground
     */
    public static final int AppCompatTheme_panelBackground=80;
    /**
     * <p>
     * @attr description
     * Default Panel Menu style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:panelMenuListTheme
     */
    public static final int AppCompatTheme_panelMenuListTheme=81;
    /**
     * <p>
     * @attr description
     * Default Panel Menu width.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:panelMenuListWidth
     */
    public static final int AppCompatTheme_panelMenuListWidth=82;
    /**
     * <p>
     * @attr description
     * Default PopupMenu style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:popupMenuStyle
     */
    public static final int AppCompatTheme_popupMenuStyle=83;
    /**
     * <p>
     * @attr description
     * Default PopupWindow style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:popupWindowStyle
     */
    public static final int AppCompatTheme_popupWindowStyle=84;
    /**
     * <p>
     * @attr description
     * Default RadioButton style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:radioButtonStyle
     */
    public static final int AppCompatTheme_radioButtonStyle=85;
    /**
     * <p>
     * @attr description
     * Default RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:ratingBarStyle
     */
    public static final int AppCompatTheme_ratingBarStyle=86;
    /**
     * <p>
     * @attr description
     * Indicator RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:ratingBarStyleIndicator
     */
    public static final int AppCompatTheme_ratingBarStyleIndicator=87;
    /**
     * <p>
     * @attr description
     * Small indicator RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:ratingBarStyleSmall
     */
    public static final int AppCompatTheme_ratingBarStyleSmall=88;
    /**
     * <p>
     * @attr description
     * Style for the search query widget.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:searchViewStyle
     */
    public static final int AppCompatTheme_searchViewStyle=89;
    /**
     * <p>
     * @attr description
     * Default SeekBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:seekBarStyle
     */
    public static final int AppCompatTheme_seekBarStyle=90;
    /**
     * <p>
     * @attr description
     * A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:selectableItemBackground
     */
    public static final int AppCompatTheme_selectableItemBackground=91;
    /**
     * <p>
     * @attr description
     * Background drawable for borderless standalone items that need focus/pressed states.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:selectableItemBackgroundBorderless
     */
    public static final int AppCompatTheme_selectableItemBackgroundBorderless=92;
    /**
     * <p>
     * @attr description
     * Default Spinner style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:spinnerDropDownItemStyle
     */
    public static final int AppCompatTheme_spinnerDropDownItemStyle=93;
    /**
     * <p>
     * @attr description
     * Default Spinner style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:spinnerStyle
     */
    public static final int AppCompatTheme_spinnerStyle=94;
    /**
     * <p>
     * @attr description
     * Default style for the Switch widget.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:switchStyle
     */
    public static final int AppCompatTheme_switchStyle=95;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for the text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:textAppearanceLargePopupMenu
     */
    public static final int AppCompatTheme_textAppearanceLargePopupMenu=96;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the primary text of list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:textAppearanceListItem
     */
    public static final int AppCompatTheme_textAppearanceListItem=97;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the secondary text of list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:textAppearanceListItemSecondary
     */
    public static final int AppCompatTheme_textAppearanceListItemSecondary=98;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the primary text of small list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:textAppearanceListItemSmall
     */
    public static final int AppCompatTheme_textAppearanceListItemSmall=99;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for header text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:textAppearancePopupMenuHeader
     */
    public static final int AppCompatTheme_textAppearancePopupMenuHeader=100;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:textAppearanceSearchResultSubtitle
     */
    public static final int AppCompatTheme_textAppearanceSearchResultSubtitle=101;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:textAppearanceSearchResultTitle
     */
    public static final int AppCompatTheme_textAppearanceSearchResultTitle=102;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for small text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:textAppearanceSmallPopupMenu
     */
    public static final int AppCompatTheme_textAppearanceSmallPopupMenu=103;
    /**
     * <p>
     * @attr description
     * Color of list item text in alert dialogs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:textColorAlertDialogListItem
     */
    public static final int AppCompatTheme_textColorAlertDialogListItem=104;
    /**
     * <p>
     * @attr description
     * Text color for urls in search suggestions, used by things like global search
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:textColorSearchUrl
     */
    public static final int AppCompatTheme_textColorSearchUrl=105;
    /**
     * <p>
     * @attr description
     * Default Toolar NavigationButtonStyle
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:toolbarNavigationButtonStyle
     */
    public static final int AppCompatTheme_toolbarNavigationButtonStyle=106;
    /**
     * <p>
     * @attr description
     * Default Toolbar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:toolbarStyle
     */
    public static final int AppCompatTheme_toolbarStyle=107;
    /**
     * <p>
     * @attr description
     * Foreground color to use for tooltips
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:tooltipForegroundColor
     */
    public static final int AppCompatTheme_tooltipForegroundColor=108;
    /**
     * <p>
     * @attr description
     * Background to use for tooltips
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:tooltipFrameBackground
     */
    public static final int AppCompatTheme_tooltipFrameBackground=109;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#viewInflaterClass}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:viewInflaterClass
     */
    public static final int AppCompatTheme_viewInflaterClass=110;
    /**
     * <p>
     * @attr description
     * Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:windowActionBar
     */
    public static final int AppCompatTheme_windowActionBar=111;
    /**
     * <p>
     * @attr description
     * Flag indicating whether this window's Action Bar should overlay
     * application content. Does nothing if the window would not
     * have an Action Bar.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:windowActionBarOverlay
     */
    public static final int AppCompatTheme_windowActionBarOverlay=112;
    /**
     * <p>
     * @attr description
     * Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:windowActionModeOverlay
     */
    public static final int AppCompatTheme_windowActionModeOverlay=113;
    /**
     * <p>
     * @attr description
     * A fixed height for the window along the major axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name org.nativescript.playvue:windowFixedHeightMajor
     */
    public static final int AppCompatTheme_windowFixedHeightMajor=114;
    /**
     * <p>
     * @attr description
     * A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name org.nativescript.playvue:windowFixedHeightMinor
     */
    public static final int AppCompatTheme_windowFixedHeightMinor=115;
    /**
     * <p>
     * @attr description
     * A fixed width for the window along the major axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name org.nativescript.playvue:windowFixedWidthMajor
     */
    public static final int AppCompatTheme_windowFixedWidthMajor=116;
    /**
     * <p>
     * @attr description
     * A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name org.nativescript.playvue:windowFixedWidthMinor
     */
    public static final int AppCompatTheme_windowFixedWidthMinor=117;
    /**
     * <p>
     * @attr description
     * The minimum width the window is allowed to be, along the major
     * axis of the screen.  That is, when in landscape.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name org.nativescript.playvue:windowMinWidthMajor
     */
    public static final int AppCompatTheme_windowMinWidthMajor=118;
    /**
     * <p>
     * @attr description
     * The minimum width the window is allowed to be, along the minor
     * axis of the screen.  That is, when in portrait.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name org.nativescript.playvue:windowMinWidthMinor
     */
    public static final int AppCompatTheme_windowMinWidthMinor=119;
    /**
     * <p>
     * @attr description
     * Flag indicating whether there should be no title on this window.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:windowNoTitle
     */
    public static final int AppCompatTheme_windowNoTitle=120;
    /**
     * Attributes that can be used with a AreaSeries.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AreaSeries_fillColor org.nativescript.playvue:fillColor}</code></td><td></td></tr>
     * </table>
     * @see #AreaSeries_fillColor
     */
    public static final int[] AreaSeries={
      0x7f030103
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#fillColor}
     * attribute's value can be found in the {@link #AreaSeries} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:fillColor
     */
    public static final int AreaSeries_fillColor=0;
    /**
     * Attributes that can be used with a Axis.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Axis_axisLabelFitMode org.nativescript.playvue:axisLabelFitMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #Axis_axisLastLabelVisibility org.nativescript.playvue:axisLastLabelVisibility}</code></td><td></td></tr>
     * <tr><td><code>{@link #Axis_axisTitle org.nativescript.playvue:axisTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Axis_labelColor org.nativescript.playvue:labelColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Axis_labelFont org.nativescript.playvue:labelFont}</code></td><td></td></tr>
     * <tr><td><code>{@link #Axis_labelFontStyle org.nativescript.playvue:labelFontStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Axis_labelFormat org.nativescript.playvue:labelFormat}</code></td><td></td></tr>
     * <tr><td><code>{@link #Axis_labelInterval org.nativescript.playvue:labelInterval}</code></td><td></td></tr>
     * <tr><td><code>{@link #Axis_labelMargin org.nativescript.playvue:labelMargin}</code></td><td></td></tr>
     * <tr><td><code>{@link #Axis_labelOffset org.nativescript.playvue:labelOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #Axis_labelRotationAngle org.nativescript.playvue:labelRotationAngle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Axis_labelSize org.nativescript.playvue:labelSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #Axis_lineThickness org.nativescript.playvue:lineThickness}</code></td><td></td></tr>
     * <tr><td><code>{@link #Axis_majorTickOffset org.nativescript.playvue:majorTickOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #Axis_showLabels org.nativescript.playvue:showLabels}</code></td><td></td></tr>
     * <tr><td><code>{@link #Axis_tickThickness org.nativescript.playvue:tickThickness}</code></td><td></td></tr>
     * </table>
     * @see #Axis_axisLabelFitMode
     * @see #Axis_axisLastLabelVisibility
     * @see #Axis_axisTitle
     * @see #Axis_labelColor
     * @see #Axis_labelFont
     * @see #Axis_labelFontStyle
     * @see #Axis_labelFormat
     * @see #Axis_labelInterval
     * @see #Axis_labelMargin
     * @see #Axis_labelOffset
     * @see #Axis_labelRotationAngle
     * @see #Axis_labelSize
     * @see #Axis_lineThickness
     * @see #Axis_majorTickOffset
     * @see #Axis_showLabels
     * @see #Axis_tickThickness
     */
    public static final int[] Axis={
      0x7f03004b, 0x7f03004c, 0x7f03004d, 0x7f030146, 
      0x7f030147, 0x7f030148, 0x7f030149, 0x7f03014a, 
      0x7f03014b, 0x7f03014c, 0x7f03014d, 0x7f03014e, 
      0x7f030167, 0x7f03017a, 0x7f0301e4, 0x7f03024b
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#axisLabelFitMode}
     * attribute's value can be found in the {@link #Axis} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Multiline</td><td>1</td><td></td></tr>
     * <tr><td>None</td><td>0</td><td></td></tr>
     * <tr><td>Rotate</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:axisLabelFitMode
     */
    public static final int Axis_axisLabelFitMode=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#axisLastLabelVisibility}
     * attribute's value can be found in the {@link #Axis} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Clip</td><td>2</td><td></td></tr>
     * <tr><td>Hidden</td><td>1</td><td></td></tr>
     * <tr><td>Visible</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:axisLastLabelVisibility
     */
    public static final int Axis_axisLastLabelVisibility=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#axisTitle}
     * attribute's value can be found in the {@link #Axis} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:axisTitle
     */
    public static final int Axis_axisTitle=2;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#labelColor}
     * attribute's value can be found in the {@link #Axis} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:labelColor
     */
    public static final int Axis_labelColor=3;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#labelFont}
     * attribute's value can be found in the {@link #Axis} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:labelFont
     */
    public static final int Axis_labelFont=4;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#labelFontStyle}
     * attribute's value can be found in the {@link #Axis} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name org.nativescript.playvue:labelFontStyle
     */
    public static final int Axis_labelFontStyle=5;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#labelFormat}
     * attribute's value can be found in the {@link #Axis} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:labelFormat
     */
    public static final int Axis_labelFormat=6;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#labelInterval}
     * attribute's value can be found in the {@link #Axis} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name org.nativescript.playvue:labelInterval
     */
    public static final int Axis_labelInterval=7;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#labelMargin}
     * attribute's value can be found in the {@link #Axis} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:labelMargin
     */
    public static final int Axis_labelMargin=8;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#labelOffset}
     * attribute's value can be found in the {@link #Axis} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name org.nativescript.playvue:labelOffset
     */
    public static final int Axis_labelOffset=9;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#labelRotationAngle}
     * attribute's value can be found in the {@link #Axis} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:labelRotationAngle
     */
    public static final int Axis_labelRotationAngle=10;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#labelSize}
     * attribute's value can be found in the {@link #Axis} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:labelSize
     */
    public static final int Axis_labelSize=11;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#lineThickness}
     * attribute's value can be found in the {@link #Axis} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:lineThickness
     */
    public static final int Axis_lineThickness=12;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#majorTickOffset}
     * attribute's value can be found in the {@link #Axis} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name org.nativescript.playvue:majorTickOffset
     */
    public static final int Axis_majorTickOffset=13;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#showLabels}
     * attribute's value can be found in the {@link #Axis} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:showLabels
     */
    public static final int Axis_showLabels=14;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#tickThickness}
     * attribute's value can be found in the {@link #Axis} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:tickThickness
     */
    public static final int Axis_tickThickness=15;
    /**
     * Attributes that can be used with a BarSeries.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BarSeries_areBarsRounded org.nativescript.playvue:areBarsRounded}</code></td><td></td></tr>
     * <tr><td><code>{@link #BarSeries_fillColor org.nativescript.playvue:fillColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #BarSeries_roundBarsRadius org.nativescript.playvue:roundBarsRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #BarSeries_strokeColor org.nativescript.playvue:strokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #BarSeries_strokeWidth org.nativescript.playvue:strokeWidth}</code></td><td></td></tr>
     * </table>
     * @see #BarSeries_areBarsRounded
     * @see #BarSeries_fillColor
     * @see #BarSeries_roundBarsRadius
     * @see #BarSeries_strokeColor
     * @see #BarSeries_strokeWidth
     */
    public static final int[] BarSeries={
      0x7f030042, 0x7f030103, 0x7f0301c5, 0x7f0301fd, 
      0x7f0301fe
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#areBarsRounded}
     * attribute's value can be found in the {@link #BarSeries} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:areBarsRounded
     */
    public static final int BarSeries_areBarsRounded=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#fillColor}
     * attribute's value can be found in the {@link #BarSeries} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:fillColor
     */
    public static final int BarSeries_fillColor=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#roundBarsRadius}
     * attribute's value can be found in the {@link #BarSeries} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:roundBarsRadius
     */
    public static final int BarSeries_roundBarsRadius=2;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#strokeColor}
     * attribute's value can be found in the {@link #BarSeries} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:strokeColor
     */
    public static final int BarSeries_strokeColor=3;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#strokeWidth}
     * attribute's value can be found in the {@link #BarSeries} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:strokeWidth
     */
    public static final int BarSeries_strokeWidth=4;
    /**
     * Attributes that can be used with a BottomAppBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BottomAppBar_backgroundTint org.nativescript.playvue:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_fabAlignmentMode org.nativescript.playvue:fabAlignmentMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomAppBar_fabCradleMargin org.nativescript.playvue:fabCradleMargin}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomAppBar_fabCradleRoundedCornerRadius org.nativescript.playvue:fabCradleRoundedCornerRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomAppBar_fabCradleVerticalOffset org.nativescript.playvue:fabCradleVerticalOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomAppBar_hideOnScroll org.nativescript.playvue:hideOnScroll}</code></td><td></td></tr>
     * </table>
     * @see #BottomAppBar_backgroundTint
     * @see #BottomAppBar_fabAlignmentMode
     * @see #BottomAppBar_fabCradleMargin
     * @see #BottomAppBar_fabCradleRoundedCornerRadius
     * @see #BottomAppBar_fabCradleVerticalOffset
     * @see #BottomAppBar_hideOnScroll
     */
    public static final int[] BottomAppBar={
      0x7f030052, 0x7f0300f5, 0x7f0300f6, 0x7f0300f7, 
      0x7f0300f8, 0x7f03011d
    };
    /**
     * <p>
     * @attr description
     * Tint to apply to the background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:backgroundTint
     */
    public static final int BottomAppBar_backgroundTint=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#fabAlignmentMode}
     * attribute's value can be found in the {@link #BottomAppBar} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>0</td><td></td></tr>
     * <tr><td>end</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:fabAlignmentMode
     */
    public static final int BottomAppBar_fabAlignmentMode=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#fabCradleMargin}
     * attribute's value can be found in the {@link #BottomAppBar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:fabCradleMargin
     */
    public static final int BottomAppBar_fabCradleMargin=2;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#fabCradleRoundedCornerRadius}
     * attribute's value can be found in the {@link #BottomAppBar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:fabCradleRoundedCornerRadius
     */
    public static final int BottomAppBar_fabCradleRoundedCornerRadius=3;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#fabCradleVerticalOffset}
     * attribute's value can be found in the {@link #BottomAppBar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:fabCradleVerticalOffset
     */
    public static final int BottomAppBar_fabCradleVerticalOffset=4;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#hideOnScroll}
     * attribute's value can be found in the {@link #BottomAppBar} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:hideOnScroll
     */
    public static final int BottomAppBar_hideOnScroll=5;
    /**
     * Attributes that can be used with a BottomNavigationView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BottomNavigationView_elevation org.nativescript.playvue:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemBackground org.nativescript.playvue:itemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemHorizontalTranslationEnabled org.nativescript.playvue:itemHorizontalTranslationEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemIconSize org.nativescript.playvue:itemIconSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemIconTint org.nativescript.playvue:itemIconTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemTextAppearanceActive org.nativescript.playvue:itemTextAppearanceActive}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemTextAppearanceInactive org.nativescript.playvue:itemTextAppearanceInactive}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemTextColor org.nativescript.playvue:itemTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomNavigationView_labelVisibilityMode org.nativescript.playvue:labelVisibilityMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomNavigationView_menu org.nativescript.playvue:menu}</code></td><td></td></tr>
     * </table>
     * @see #BottomNavigationView_elevation
     * @see #BottomNavigationView_itemBackground
     * @see #BottomNavigationView_itemHorizontalTranslationEnabled
     * @see #BottomNavigationView_itemIconSize
     * @see #BottomNavigationView_itemIconTint
     * @see #BottomNavigationView_itemTextAppearanceActive
     * @see #BottomNavigationView_itemTextAppearanceInactive
     * @see #BottomNavigationView_itemTextColor
     * @see #BottomNavigationView_labelVisibilityMode
     * @see #BottomNavigationView_menu
     */
    public static final int[] BottomNavigationView={
      0x7f0300e6, 0x7f030138, 0x7f03013a, 0x7f03013c, 
      0x7f03013d, 0x7f030141, 0x7f030142, 0x7f030143, 
      0x7f03014f, 0x7f030189
    };
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:elevation
     */
    public static final int BottomNavigationView_elevation=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#itemBackground}
     * attribute's value can be found in the {@link #BottomNavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:itemBackground
     */
    public static final int BottomNavigationView_itemBackground=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#itemHorizontalTranslationEnabled}
     * attribute's value can be found in the {@link #BottomNavigationView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:itemHorizontalTranslationEnabled
     */
    public static final int BottomNavigationView_itemHorizontalTranslationEnabled=2;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#itemIconSize}
     * attribute's value can be found in the {@link #BottomNavigationView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:itemIconSize
     */
    public static final int BottomNavigationView_itemIconSize=3;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#itemIconTint}
     * attribute's value can be found in the {@link #BottomNavigationView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:itemIconTint
     */
    public static final int BottomNavigationView_itemIconTint=4;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#itemTextAppearanceActive}
     * attribute's value can be found in the {@link #BottomNavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:itemTextAppearanceActive
     */
    public static final int BottomNavigationView_itemTextAppearanceActive=5;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#itemTextAppearanceInactive}
     * attribute's value can be found in the {@link #BottomNavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:itemTextAppearanceInactive
     */
    public static final int BottomNavigationView_itemTextAppearanceInactive=6;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#itemTextColor}
     * attribute's value can be found in the {@link #BottomNavigationView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:itemTextColor
     */
    public static final int BottomNavigationView_itemTextColor=7;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#labelVisibilityMode}
     * attribute's value can be found in the {@link #BottomNavigationView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td></td></tr>
     * <tr><td>labeled</td><td>1</td><td></td></tr>
     * <tr><td>selected</td><td>0</td><td></td></tr>
     * <tr><td>unlabeled</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:labelVisibilityMode
     */
    public static final int BottomNavigationView_labelVisibilityMode=8;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#menu}
     * attribute's value can be found in the {@link #BottomNavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:menu
     */
    public static final int BottomNavigationView_menu=9;
    /**
     * Attributes that can be used with a BottomSheetBehavior_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_fitToContents org.nativescript.playvue:behavior_fitToContents}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_hideable org.nativescript.playvue:behavior_hideable}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_peekHeight org.nativescript.playvue:behavior_peekHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_skipCollapsed org.nativescript.playvue:behavior_skipCollapsed}</code></td><td></td></tr>
     * </table>
     * @see #BottomSheetBehavior_Layout_behavior_fitToContents
     * @see #BottomSheetBehavior_Layout_behavior_hideable
     * @see #BottomSheetBehavior_Layout_behavior_peekHeight
     * @see #BottomSheetBehavior_Layout_behavior_skipCollapsed
     */
    public static final int[] BottomSheetBehavior_Layout={
      0x7f030056, 0x7f030057, 0x7f030059, 0x7f03005a
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#behavior_fitToContents}
     * attribute's value can be found in the {@link #BottomSheetBehavior_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:behavior_fitToContents
     */
    public static final int BottomSheetBehavior_Layout_behavior_fitToContents=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#behavior_hideable}
     * attribute's value can be found in the {@link #BottomSheetBehavior_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:behavior_hideable
     */
    public static final int BottomSheetBehavior_Layout_behavior_hideable=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#behavior_peekHeight}
     * attribute's value can be found in the {@link #BottomSheetBehavior_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:behavior_peekHeight
     */
    public static final int BottomSheetBehavior_Layout_behavior_peekHeight=2;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#behavior_skipCollapsed}
     * attribute's value can be found in the {@link #BottomSheetBehavior_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:behavior_skipCollapsed
     */
    public static final int BottomSheetBehavior_Layout_behavior_skipCollapsed=3;
    /**
     * Attributes that can be used with a ButtonBarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ButtonBarLayout_allowStacking org.nativescript.playvue:allowStacking}</code></td><td>Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.</td></tr>
     * </table>
     * @see #ButtonBarLayout_allowStacking
     */
    public static final int[] ButtonBarLayout={
      0x7f03003b
    };
    /**
     * <p>
     * @attr description
     * Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:allowStacking
     */
    public static final int ButtonBarLayout_allowStacking=0;
    /**
     * Attributes that can be used with a CalendarCellState.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CalendarCellState_state_calendar_cell_today org.nativescript.playvue:state_calendar_cell_today}</code></td><td></td></tr>
     * </table>
     * @see #CalendarCellState_state_calendar_cell_today
     */
    public static final int[] CalendarCellState={
      0x7f0301f6
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#state_calendar_cell_today}
     * attribute's value can be found in the {@link #CalendarCellState} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:state_calendar_cell_today
     */
    public static final int CalendarCellState_state_calendar_cell_today=0;
    /**
     * Attributes that can be used with a CalendarTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CalendarTheme_calendarStyle org.nativescript.playvue:calendarStyle}</code></td><td></td></tr>
     * </table>
     * @see #CalendarTheme_calendarStyle
     */
    public static final int[] CalendarTheme={
      0x7f030079
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#calendarStyle}
     * attribute's value can be found in the {@link #CalendarTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:calendarStyle
     */
    public static final int CalendarTheme_calendarStyle=0;
    /**
     * Attributes that can be used with a CardView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CardView_android_minWidth android:minWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #CardView_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #CardView_cardBackgroundColor org.nativescript.playvue:cardBackgroundColor}</code></td><td>Background color for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardCornerRadius org.nativescript.playvue:cardCornerRadius}</code></td><td>Corner radius for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardElevation org.nativescript.playvue:cardElevation}</code></td><td>Elevation for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardMaxElevation org.nativescript.playvue:cardMaxElevation}</code></td><td>Maximum Elevation for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardPreventCornerOverlap org.nativescript.playvue:cardPreventCornerOverlap}</code></td><td>Add padding to CardView on v20 and before to prevent intersections between the Card content and rounded corners.</td></tr>
     * <tr><td><code>{@link #CardView_cardUseCompatPadding org.nativescript.playvue:cardUseCompatPadding}</code></td><td>Add padding in API v21+ as well to have the same measurements with previous versions.</td></tr>
     * <tr><td><code>{@link #CardView_contentPadding org.nativescript.playvue:contentPadding}</code></td><td>Inner padding between the edges of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingBottom org.nativescript.playvue:contentPaddingBottom}</code></td><td>Inner padding between the bottom edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingLeft org.nativescript.playvue:contentPaddingLeft}</code></td><td>Inner padding between the left edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingRight org.nativescript.playvue:contentPaddingRight}</code></td><td>Inner padding between the right edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingTop org.nativescript.playvue:contentPaddingTop}</code></td><td>Inner padding between the top edge of the Card and children of the CardView.</td></tr>
     * </table>
     * @see #CardView_android_minWidth
     * @see #CardView_android_minHeight
     * @see #CardView_cardBackgroundColor
     * @see #CardView_cardCornerRadius
     * @see #CardView_cardElevation
     * @see #CardView_cardMaxElevation
     * @see #CardView_cardPreventCornerOverlap
     * @see #CardView_cardUseCompatPadding
     * @see #CardView_contentPadding
     * @see #CardView_contentPaddingBottom
     * @see #CardView_contentPaddingLeft
     * @see #CardView_contentPaddingRight
     * @see #CardView_contentPaddingTop
     */
    public static final int[] CardView={
      0x0101013f, 0x01010140, 0x7f03007b, 0x7f03007c, 
      0x7f03007d, 0x7f03007e, 0x7f03007f, 0x7f030080, 
      0x7f0300c5, 0x7f0300c6, 0x7f0300c7, 0x7f0300c8, 
      0x7f0300c9
    };
    /**
     * <p>
     * @attr description
     * Workaround to read user defined minimum width
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int CardView_android_minWidth=0;
    /**
     * <p>
     * @attr description
     * Workaround to read user defined minimum height
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int CardView_android_minHeight=1;
    /**
     * <p>
     * @attr description
     * Background color for CardView.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:cardBackgroundColor
     */
    public static final int CardView_cardBackgroundColor=2;
    /**
     * <p>
     * @attr description
     * Corner radius for CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:cardCornerRadius
     */
    public static final int CardView_cardCornerRadius=3;
    /**
     * <p>
     * @attr description
     * Elevation for CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:cardElevation
     */
    public static final int CardView_cardElevation=4;
    /**
     * <p>
     * @attr description
     * Maximum Elevation for CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:cardMaxElevation
     */
    public static final int CardView_cardMaxElevation=5;
    /**
     * <p>
     * @attr description
     * Add padding to CardView on v20 and before to prevent intersections between the Card content and rounded corners.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:cardPreventCornerOverlap
     */
    public static final int CardView_cardPreventCornerOverlap=6;
    /**
     * <p>
     * @attr description
     * Add padding in API v21+ as well to have the same measurements with previous versions.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:cardUseCompatPadding
     */
    public static final int CardView_cardUseCompatPadding=7;
    /**
     * <p>
     * @attr description
     * Inner padding between the edges of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:contentPadding
     */
    public static final int CardView_contentPadding=8;
    /**
     * <p>
     * @attr description
     * Inner padding between the bottom edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:contentPaddingBottom
     */
    public static final int CardView_contentPaddingBottom=9;
    /**
     * <p>
     * @attr description
     * Inner padding between the left edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:contentPaddingLeft
     */
    public static final int CardView_contentPaddingLeft=10;
    /**
     * <p>
     * @attr description
     * Inner padding between the right edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:contentPaddingRight
     */
    public static final int CardView_contentPaddingRight=11;
    /**
     * <p>
     * @attr description
     * Inner padding between the top edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:contentPaddingTop
     */
    public static final int CardView_contentPaddingTop=12;
    /**
     * Attributes that can be used with a CartesianAxis.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CartesianAxis_horizontalLocation org.nativescript.playvue:horizontalLocation}</code></td><td></td></tr>
     * <tr><td><code>{@link #CartesianAxis_verticalLocation org.nativescript.playvue:verticalLocation}</code></td><td></td></tr>
     * </table>
     * @see #CartesianAxis_horizontalLocation
     * @see #CartesianAxis_verticalLocation
     */
    public static final int[] CartesianAxis={
      0x7f030124, 0x7f03026d
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#horizontalLocation}
     * attribute's value can be found in the {@link #CartesianAxis} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Left</td><td>0</td><td></td></tr>
     * <tr><td>Right</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:horizontalLocation
     */
    public static final int CartesianAxis_horizontalLocation=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#verticalLocation}
     * attribute's value can be found in the {@link #CartesianAxis} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Bottom</td><td>0</td><td></td></tr>
     * <tr><td>Top</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:verticalLocation
     */
    public static final int CartesianAxis_verticalLocation=1;
    /**
     * Attributes that can be used with a CartesianCustomAnnotation.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CartesianCustomAnnotation_content org.nativescript.playvue:content}</code></td><td></td></tr>
     * <tr><td><code>{@link #CartesianCustomAnnotation_horizontalAlignment org.nativescript.playvue:horizontalAlignment}</code></td><td></td></tr>
     * <tr><td><code>{@link #CartesianCustomAnnotation_horizontalOffset org.nativescript.playvue:horizontalOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #CartesianCustomAnnotation_verticalAlignment org.nativescript.playvue:verticalAlignment}</code></td><td></td></tr>
     * <tr><td><code>{@link #CartesianCustomAnnotation_verticalOffset org.nativescript.playvue:verticalOffset}</code></td><td></td></tr>
     * </table>
     * @see #CartesianCustomAnnotation_content
     * @see #CartesianCustomAnnotation_horizontalAlignment
     * @see #CartesianCustomAnnotation_horizontalOffset
     * @see #CartesianCustomAnnotation_verticalAlignment
     * @see #CartesianCustomAnnotation_verticalOffset
     */
    public static final int[] CartesianCustomAnnotation={
      0x7f0300bd, 0x7f030123, 0x7f030125, 0x7f03026c, 
      0x7f03026e
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#content}
     * attribute's value can be found in the {@link #CartesianCustomAnnotation} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:content
     */
    public static final int CartesianCustomAnnotation_content=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#horizontalAlignment}
     * attribute's value can be found in the {@link #CartesianCustomAnnotation} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>1</td><td></td></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:horizontalAlignment
     */
    public static final int CartesianCustomAnnotation_horizontalAlignment=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#horizontalOffset}
     * attribute's value can be found in the {@link #CartesianCustomAnnotation} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:horizontalOffset
     */
    public static final int CartesianCustomAnnotation_horizontalOffset=2;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#verticalAlignment}
     * attribute's value can be found in the {@link #CartesianCustomAnnotation} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>1</td><td></td></tr>
     * <tr><td>center</td><td>2</td><td></td></tr>
     * <tr><td>top</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:verticalAlignment
     */
    public static final int CartesianCustomAnnotation_verticalAlignment=3;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#verticalOffset}
     * attribute's value can be found in the {@link #CartesianCustomAnnotation} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:verticalOffset
     */
    public static final int CartesianCustomAnnotation_verticalOffset=4;
    /**
     * Attributes that can be used with a CartesianPlotBandAnnotation.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CartesianPlotBandAnnotation_fillColor org.nativescript.playvue:fillColor}</code></td><td></td></tr>
     * </table>
     * @see #CartesianPlotBandAnnotation_fillColor
     */
    public static final int[] CartesianPlotBandAnnotation={
      0x7f030103
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#fillColor}
     * attribute's value can be found in the {@link #CartesianPlotBandAnnotation} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:fillColor
     */
    public static final int CartesianPlotBandAnnotation_fillColor=0;
    /**
     * Attributes that can be used with a CartesianStrokedAnnotation.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CartesianStrokedAnnotation_label org.nativescript.playvue:label}</code></td><td></td></tr>
     * <tr><td><code>{@link #CartesianStrokedAnnotation_strokeColor org.nativescript.playvue:strokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #CartesianStrokedAnnotation_strokeWidth org.nativescript.playvue:strokeWidth}</code></td><td></td></tr>
     * </table>
     * @see #CartesianStrokedAnnotation_label
     * @see #CartesianStrokedAnnotation_strokeColor
     * @see #CartesianStrokedAnnotation_strokeWidth
     */
    public static final int[] CartesianStrokedAnnotation={
      0x7f030145, 0x7f0301fd, 0x7f0301fe
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#label}
     * attribute's value can be found in the {@link #CartesianStrokedAnnotation} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:label
     */
    public static final int CartesianStrokedAnnotation_label=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#strokeColor}
     * attribute's value can be found in the {@link #CartesianStrokedAnnotation} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:strokeColor
     */
    public static final int CartesianStrokedAnnotation_strokeColor=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#strokeWidth}
     * attribute's value can be found in the {@link #CartesianStrokedAnnotation} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:strokeWidth
     */
    public static final int CartesianStrokedAnnotation_strokeWidth=2;
    /**
     * Attributes that can be used with a CategoricalAxis.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CategoricalAxis_gapLength org.nativescript.playvue:gapLength}</code></td><td></td></tr>
     * <tr><td><code>{@link #CategoricalAxis_majorTickInterval org.nativescript.playvue:majorTickInterval}</code></td><td></td></tr>
     * <tr><td><code>{@link #CategoricalAxis_plotMode org.nativescript.playvue:plotMode}</code></td><td></td></tr>
     * </table>
     * @see #CategoricalAxis_gapLength
     * @see #CategoricalAxis_majorTickInterval
     * @see #CategoricalAxis_plotMode
     */
    public static final int[] CategoricalAxis={
      0x7f030114, 0x7f030179, 0x7f0301a9
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#gapLength}
     * attribute's value can be found in the {@link #CategoricalAxis} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:gapLength
     */
    public static final int CategoricalAxis_gapLength=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#majorTickInterval}
     * attribute's value can be found in the {@link #CategoricalAxis} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name org.nativescript.playvue:majorTickInterval
     */
    public static final int CategoricalAxis_majorTickInterval=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#plotMode}
     * attribute's value can be found in the {@link #CategoricalAxis} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>BetweenTicks</td><td>0</td><td></td></tr>
     * <tr><td>OnTicks</td><td>1</td><td></td></tr>
     * <tr><td>OnTicksPadded</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:plotMode
     */
    public static final int CategoricalAxis_plotMode=2;
    /**
     * Attributes that can be used with a CategoricalSeries.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CategoricalSeries_combineMode org.nativescript.playvue:combineMode}</code></td><td></td></tr>
     * </table>
     * @see #CategoricalSeries_combineMode
     */
    public static final int[] CategoricalSeries={
      0x7f0300bb
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#combineMode}
     * attribute's value can be found in the {@link #CategoricalSeries} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Cluster</td><td>1</td><td></td></tr>
     * <tr><td>None</td><td>0</td><td></td></tr>
     * <tr><td>Stack</td><td>2</td><td></td></tr>
     * <tr><td>Stack100</td><td>3</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:combineMode
     */
    public static final int CategoricalSeries_combineMode=0;
    /**
     * Attributes that can be used with a CategoricalStrokedSeries.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CategoricalStrokedSeries_strokeColor org.nativescript.playvue:strokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #CategoricalStrokedSeries_strokeWidth org.nativescript.playvue:strokeWidth}</code></td><td></td></tr>
     * </table>
     * @see #CategoricalStrokedSeries_strokeColor
     * @see #CategoricalStrokedSeries_strokeWidth
     */
    public static final int[] CategoricalStrokedSeries={
      0x7f0301fd, 0x7f0301fe
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#strokeColor}
     * attribute's value can be found in the {@link #CategoricalStrokedSeries} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:strokeColor
     */
    public static final int CategoricalStrokedSeries_strokeColor=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#strokeWidth}
     * attribute's value can be found in the {@link #CategoricalStrokedSeries} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:strokeWidth
     */
    public static final int CategoricalStrokedSeries_strokeWidth=1;
    /**
     * Attributes that can be used with a ChartAnnotation.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ChartAnnotation_clipToPlotArea org.nativescript.playvue:clipToPlotArea}</code></td><td></td></tr>
     * </table>
     * @see #ChartAnnotation_clipToPlotArea
     */
    public static final int[] ChartAnnotation={
      0x7f0300a1
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#clipToPlotArea}
     * attribute's value can be found in the {@link #ChartAnnotation} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:clipToPlotArea
     */
    public static final int ChartAnnotation_clipToPlotArea=0;
    /**
     * Attributes that can be used with a ChartSeries.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ChartSeries_clipToPlotArea org.nativescript.playvue:clipToPlotArea}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartSeries_labelColor org.nativescript.playvue:labelColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartSeries_labelFont org.nativescript.playvue:labelFont}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartSeries_labelFontStyle org.nativescript.playvue:labelFontStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartSeries_labelFormat org.nativescript.playvue:labelFormat}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartSeries_labelSize org.nativescript.playvue:labelSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartSeries_showLabels org.nativescript.playvue:showLabels}</code></td><td></td></tr>
     * </table>
     * @see #ChartSeries_clipToPlotArea
     * @see #ChartSeries_labelColor
     * @see #ChartSeries_labelFont
     * @see #ChartSeries_labelFontStyle
     * @see #ChartSeries_labelFormat
     * @see #ChartSeries_labelSize
     * @see #ChartSeries_showLabels
     */
    public static final int[] ChartSeries={
      0x7f0300a1, 0x7f030146, 0x7f030147, 0x7f030148, 
      0x7f030149, 0x7f03014e, 0x7f0301e4
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#clipToPlotArea}
     * attribute's value can be found in the {@link #ChartSeries} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:clipToPlotArea
     */
    public static final int ChartSeries_clipToPlotArea=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#labelColor}
     * attribute's value can be found in the {@link #ChartSeries} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:labelColor
     */
    public static final int ChartSeries_labelColor=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#labelFont}
     * attribute's value can be found in the {@link #ChartSeries} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:labelFont
     */
    public static final int ChartSeries_labelFont=2;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#labelFontStyle}
     * attribute's value can be found in the {@link #ChartSeries} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name org.nativescript.playvue:labelFontStyle
     */
    public static final int ChartSeries_labelFontStyle=3;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#labelFormat}
     * attribute's value can be found in the {@link #ChartSeries} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:labelFormat
     */
    public static final int ChartSeries_labelFormat=4;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#labelSize}
     * attribute's value can be found in the {@link #ChartSeries} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:labelSize
     */
    public static final int ChartSeries_labelSize=5;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#showLabels}
     * attribute's value can be found in the {@link #ChartSeries} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:showLabels
     */
    public static final int ChartSeries_showLabels=6;
    /**
     * Attributes that can be used with a ChartTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ChartTheme_AreaSeriesStyle org.nativescript.playvue:AreaSeriesStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartTheme_AxisStyle org.nativescript.playvue:AxisStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartTheme_BarSeriesStyle org.nativescript.playvue:BarSeriesStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartTheme_CartesianAxisStyle org.nativescript.playvue:CartesianAxisStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartTheme_CartesianCustomAnnotationStyle org.nativescript.playvue:CartesianCustomAnnotationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartTheme_CartesianPlotBandAnnotationStyle org.nativescript.playvue:CartesianPlotBandAnnotationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartTheme_CartesianStrokedAnnotationStyle org.nativescript.playvue:CartesianStrokedAnnotationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartTheme_CategoricalAxisStyle org.nativescript.playvue:CategoricalAxisStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartTheme_CategoricalSeriesStyle org.nativescript.playvue:CategoricalSeriesStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartTheme_CategoricalStrokedSeriesStyle org.nativescript.playvue:CategoricalStrokedSeriesStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartTheme_ChartAnnotationStyle org.nativescript.playvue:ChartAnnotationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartTheme_ChartSeriesStyle org.nativescript.playvue:ChartSeriesStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartTheme_DateTimeCategoricalAxisStyle org.nativescript.playvue:DateTimeCategoricalAxisStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartTheme_DateTimeContinuousAxisStyle org.nativescript.playvue:DateTimeContinuousAxisStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartTheme_LineAxisStyle org.nativescript.playvue:LineAxisStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartTheme_RadChartBaseStyle org.nativescript.playvue:RadChartBaseStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartTheme_RangeBarSeriesStyle org.nativescript.playvue:RangeBarSeriesStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartTheme_TestBarSeriesStyle org.nativescript.playvue:TestBarSeriesStyle}</code></td><td></td></tr>
     * </table>
     * @see #ChartTheme_AreaSeriesStyle
     * @see #ChartTheme_AxisStyle
     * @see #ChartTheme_BarSeriesStyle
     * @see #ChartTheme_CartesianAxisStyle
     * @see #ChartTheme_CartesianCustomAnnotationStyle
     * @see #ChartTheme_CartesianPlotBandAnnotationStyle
     * @see #ChartTheme_CartesianStrokedAnnotationStyle
     * @see #ChartTheme_CategoricalAxisStyle
     * @see #ChartTheme_CategoricalSeriesStyle
     * @see #ChartTheme_CategoricalStrokedSeriesStyle
     * @see #ChartTheme_ChartAnnotationStyle
     * @see #ChartTheme_ChartSeriesStyle
     * @see #ChartTheme_DateTimeCategoricalAxisStyle
     * @see #ChartTheme_DateTimeContinuousAxisStyle
     * @see #ChartTheme_LineAxisStyle
     * @see #ChartTheme_RadChartBaseStyle
     * @see #ChartTheme_RangeBarSeriesStyle
     * @see #ChartTheme_TestBarSeriesStyle
     */
    public static final int[] ChartTheme={
      0x7f030000, 0x7f030001, 0x7f030002, 0x7f030003, 
      0x7f030004, 0x7f030005, 0x7f030006, 0x7f030007, 
      0x7f030008, 0x7f030009, 0x7f03000a, 0x7f03000b, 
      0x7f03000c, 0x7f03000d, 0x7f03000e, 0x7f03000f, 
      0x7f030010, 0x7f030011
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#AreaSeriesStyle}
     * attribute's value can be found in the {@link #ChartTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:AreaSeriesStyle
     */
    public static final int ChartTheme_AreaSeriesStyle=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#AxisStyle}
     * attribute's value can be found in the {@link #ChartTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:AxisStyle
     */
    public static final int ChartTheme_AxisStyle=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#BarSeriesStyle}
     * attribute's value can be found in the {@link #ChartTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:BarSeriesStyle
     */
    public static final int ChartTheme_BarSeriesStyle=2;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#CartesianAxisStyle}
     * attribute's value can be found in the {@link #ChartTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:CartesianAxisStyle
     */
    public static final int ChartTheme_CartesianAxisStyle=3;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#CartesianCustomAnnotationStyle}
     * attribute's value can be found in the {@link #ChartTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:CartesianCustomAnnotationStyle
     */
    public static final int ChartTheme_CartesianCustomAnnotationStyle=4;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#CartesianPlotBandAnnotationStyle}
     * attribute's value can be found in the {@link #ChartTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:CartesianPlotBandAnnotationStyle
     */
    public static final int ChartTheme_CartesianPlotBandAnnotationStyle=5;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#CartesianStrokedAnnotationStyle}
     * attribute's value can be found in the {@link #ChartTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:CartesianStrokedAnnotationStyle
     */
    public static final int ChartTheme_CartesianStrokedAnnotationStyle=6;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#CategoricalAxisStyle}
     * attribute's value can be found in the {@link #ChartTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:CategoricalAxisStyle
     */
    public static final int ChartTheme_CategoricalAxisStyle=7;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#CategoricalSeriesStyle}
     * attribute's value can be found in the {@link #ChartTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:CategoricalSeriesStyle
     */
    public static final int ChartTheme_CategoricalSeriesStyle=8;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#CategoricalStrokedSeriesStyle}
     * attribute's value can be found in the {@link #ChartTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:CategoricalStrokedSeriesStyle
     */
    public static final int ChartTheme_CategoricalStrokedSeriesStyle=9;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#ChartAnnotationStyle}
     * attribute's value can be found in the {@link #ChartTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:ChartAnnotationStyle
     */
    public static final int ChartTheme_ChartAnnotationStyle=10;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#ChartSeriesStyle}
     * attribute's value can be found in the {@link #ChartTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:ChartSeriesStyle
     */
    public static final int ChartTheme_ChartSeriesStyle=11;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#DateTimeCategoricalAxisStyle}
     * attribute's value can be found in the {@link #ChartTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:DateTimeCategoricalAxisStyle
     */
    public static final int ChartTheme_DateTimeCategoricalAxisStyle=12;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#DateTimeContinuousAxisStyle}
     * attribute's value can be found in the {@link #ChartTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:DateTimeContinuousAxisStyle
     */
    public static final int ChartTheme_DateTimeContinuousAxisStyle=13;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#LineAxisStyle}
     * attribute's value can be found in the {@link #ChartTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:LineAxisStyle
     */
    public static final int ChartTheme_LineAxisStyle=14;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#RadChartBaseStyle}
     * attribute's value can be found in the {@link #ChartTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:RadChartBaseStyle
     */
    public static final int ChartTheme_RadChartBaseStyle=15;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#RangeBarSeriesStyle}
     * attribute's value can be found in the {@link #ChartTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:RangeBarSeriesStyle
     */
    public static final int ChartTheme_RangeBarSeriesStyle=16;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#TestBarSeriesStyle}
     * attribute's value can be found in the {@link #ChartTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:TestBarSeriesStyle
     */
    public static final int ChartTheme_TestBarSeriesStyle=17;
    /**
     * Attributes that can be used with a Chip.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Chip_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_ellipsize android:ellipsize}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_text android:text}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_checkable android:checkable}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_checkedIcon org.nativescript.playvue:checkedIcon}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_checkedIconEnabled org.nativescript.playvue:checkedIconEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_checkedIconVisible org.nativescript.playvue:checkedIconVisible}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_chipBackgroundColor org.nativescript.playvue:chipBackgroundColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_chipCornerRadius org.nativescript.playvue:chipCornerRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_chipEndPadding org.nativescript.playvue:chipEndPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_chipIcon org.nativescript.playvue:chipIcon}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_chipIconEnabled org.nativescript.playvue:chipIconEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_chipIconSize org.nativescript.playvue:chipIconSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_chipIconTint org.nativescript.playvue:chipIconTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_chipIconVisible org.nativescript.playvue:chipIconVisible}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_chipMinHeight org.nativescript.playvue:chipMinHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_chipStartPadding org.nativescript.playvue:chipStartPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_chipStrokeColor org.nativescript.playvue:chipStrokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_chipStrokeWidth org.nativescript.playvue:chipStrokeWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_closeIcon org.nativescript.playvue:closeIcon}</code></td><td>Close button icon</td></tr>
     * <tr><td><code>{@link #Chip_closeIconEnabled org.nativescript.playvue:closeIconEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_closeIconEndPadding org.nativescript.playvue:closeIconEndPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_closeIconSize org.nativescript.playvue:closeIconSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_closeIconStartPadding org.nativescript.playvue:closeIconStartPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_closeIconTint org.nativescript.playvue:closeIconTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_closeIconVisible org.nativescript.playvue:closeIconVisible}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_hideMotionSpec org.nativescript.playvue:hideMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_iconEndPadding org.nativescript.playvue:iconEndPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_iconStartPadding org.nativescript.playvue:iconStartPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_rippleColor org.nativescript.playvue:rippleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_showMotionSpec org.nativescript.playvue:showMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_textEndPadding org.nativescript.playvue:textEndPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_textStartPadding org.nativescript.playvue:textStartPadding}</code></td><td></td></tr>
     * </table>
     * @see #Chip_android_textAppearance
     * @see #Chip_android_ellipsize
     * @see #Chip_android_maxWidth
     * @see #Chip_android_text
     * @see #Chip_android_checkable
     * @see #Chip_checkedIcon
     * @see #Chip_checkedIconEnabled
     * @see #Chip_checkedIconVisible
     * @see #Chip_chipBackgroundColor
     * @see #Chip_chipCornerRadius
     * @see #Chip_chipEndPadding
     * @see #Chip_chipIcon
     * @see #Chip_chipIconEnabled
     * @see #Chip_chipIconSize
     * @see #Chip_chipIconTint
     * @see #Chip_chipIconVisible
     * @see #Chip_chipMinHeight
     * @see #Chip_chipStartPadding
     * @see #Chip_chipStrokeColor
     * @see #Chip_chipStrokeWidth
     * @see #Chip_closeIcon
     * @see #Chip_closeIconEnabled
     * @see #Chip_closeIconEndPadding
     * @see #Chip_closeIconSize
     * @see #Chip_closeIconStartPadding
     * @see #Chip_closeIconTint
     * @see #Chip_closeIconVisible
     * @see #Chip_hideMotionSpec
     * @see #Chip_iconEndPadding
     * @see #Chip_iconStartPadding
     * @see #Chip_rippleColor
     * @see #Chip_showMotionSpec
     * @see #Chip_textEndPadding
     * @see #Chip_textStartPadding
     */
    public static final int[] Chip={
      0x01010034, 0x010100ab, 0x0101011f, 0x0101014f, 
      0x010101e5, 0x7f030085, 0x7f030086, 0x7f030087, 
      0x7f030089, 0x7f03008a, 0x7f03008b, 0x7f03008d, 
      0x7f03008e, 0x7f03008f, 0x7f030090, 0x7f030091, 
      0x7f030092, 0x7f030097, 0x7f030098, 0x7f030099, 
      0x7f0300a2, 0x7f0300a3, 0x7f0300a4, 0x7f0300a5, 
      0x7f0300a6, 0x7f0300a7, 0x7f0300a8, 0x7f03011b, 
      0x7f030128, 0x7f03012c, 0x7f0301c3, 0x7f0301e5, 
      0x7f030240, 0x7f030242
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int Chip_android_textAppearance=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#ellipsize}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>end</td><td>3</td><td></td></tr>
     * <tr><td>marquee</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>start</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:ellipsize
     */
    public static final int Chip_android_ellipsize=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int Chip_android_maxWidth=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#text}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:text
     */
    public static final int Chip_android_text=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#checkable}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checkable
     */
    public static final int Chip_android_checkable=4;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#checkedIcon}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:checkedIcon
     */
    public static final int Chip_checkedIcon=5;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#checkedIconEnabled}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:checkedIconEnabled
     */
    public static final int Chip_checkedIconEnabled=6;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#checkedIconVisible}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:checkedIconVisible
     */
    public static final int Chip_checkedIconVisible=7;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#chipBackgroundColor}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:chipBackgroundColor
     */
    public static final int Chip_chipBackgroundColor=8;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#chipCornerRadius}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:chipCornerRadius
     */
    public static final int Chip_chipCornerRadius=9;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#chipEndPadding}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:chipEndPadding
     */
    public static final int Chip_chipEndPadding=10;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#chipIcon}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:chipIcon
     */
    public static final int Chip_chipIcon=11;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#chipIconEnabled}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:chipIconEnabled
     */
    public static final int Chip_chipIconEnabled=12;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#chipIconSize}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:chipIconSize
     */
    public static final int Chip_chipIconSize=13;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#chipIconTint}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:chipIconTint
     */
    public static final int Chip_chipIconTint=14;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#chipIconVisible}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:chipIconVisible
     */
    public static final int Chip_chipIconVisible=15;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#chipMinHeight}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:chipMinHeight
     */
    public static final int Chip_chipMinHeight=16;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#chipStartPadding}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:chipStartPadding
     */
    public static final int Chip_chipStartPadding=17;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#chipStrokeColor}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:chipStrokeColor
     */
    public static final int Chip_chipStrokeColor=18;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#chipStrokeWidth}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:chipStrokeWidth
     */
    public static final int Chip_chipStrokeWidth=19;
    /**
     * <p>
     * @attr description
     * Close button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:closeIcon
     */
    public static final int Chip_closeIcon=20;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#closeIconEnabled}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:closeIconEnabled
     */
    public static final int Chip_closeIconEnabled=21;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#closeIconEndPadding}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:closeIconEndPadding
     */
    public static final int Chip_closeIconEndPadding=22;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#closeIconSize}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:closeIconSize
     */
    public static final int Chip_closeIconSize=23;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#closeIconStartPadding}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:closeIconStartPadding
     */
    public static final int Chip_closeIconStartPadding=24;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#closeIconTint}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:closeIconTint
     */
    public static final int Chip_closeIconTint=25;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#closeIconVisible}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:closeIconVisible
     */
    public static final int Chip_closeIconVisible=26;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#hideMotionSpec}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:hideMotionSpec
     */
    public static final int Chip_hideMotionSpec=27;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#iconEndPadding}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:iconEndPadding
     */
    public static final int Chip_iconEndPadding=28;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#iconStartPadding}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:iconStartPadding
     */
    public static final int Chip_iconStartPadding=29;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#rippleColor}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:rippleColor
     */
    public static final int Chip_rippleColor=30;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#showMotionSpec}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:showMotionSpec
     */
    public static final int Chip_showMotionSpec=31;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#textEndPadding}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:textEndPadding
     */
    public static final int Chip_textEndPadding=32;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#textStartPadding}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:textStartPadding
     */
    public static final int Chip_textStartPadding=33;
    /**
     * Attributes that can be used with a ChipGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ChipGroup_checkedChip org.nativescript.playvue:checkedChip}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChipGroup_chipSpacing org.nativescript.playvue:chipSpacing}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChipGroup_chipSpacingHorizontal org.nativescript.playvue:chipSpacingHorizontal}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChipGroup_chipSpacingVertical org.nativescript.playvue:chipSpacingVertical}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChipGroup_singleLine org.nativescript.playvue:singleLine}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChipGroup_singleSelection org.nativescript.playvue:singleSelection}</code></td><td></td></tr>
     * </table>
     * @see #ChipGroup_checkedChip
     * @see #ChipGroup_chipSpacing
     * @see #ChipGroup_chipSpacingHorizontal
     * @see #ChipGroup_chipSpacingVertical
     * @see #ChipGroup_singleLine
     * @see #ChipGroup_singleSelection
     */
    public static final int[] ChipGroup={
      0x7f030084, 0x7f030093, 0x7f030094, 0x7f030095, 
      0x7f0301e9, 0x7f0301ea
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#checkedChip}
     * attribute's value can be found in the {@link #ChipGroup} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:checkedChip
     */
    public static final int ChipGroup_checkedChip=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#chipSpacing}
     * attribute's value can be found in the {@link #ChipGroup} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:chipSpacing
     */
    public static final int ChipGroup_chipSpacing=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#chipSpacingHorizontal}
     * attribute's value can be found in the {@link #ChipGroup} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:chipSpacingHorizontal
     */
    public static final int ChipGroup_chipSpacingHorizontal=2;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#chipSpacingVertical}
     * attribute's value can be found in the {@link #ChipGroup} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:chipSpacingVertical
     */
    public static final int ChipGroup_chipSpacingVertical=3;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#singleLine}
     * attribute's value can be found in the {@link #ChipGroup} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:singleLine
     */
    public static final int ChipGroup_singleLine=4;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#singleSelection}
     * attribute's value can be found in the {@link #ChipGroup} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:singleSelection
     */
    public static final int ChipGroup_singleSelection=5;
    /**
     * Attributes that can be used with a CollapsingToolbarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_collapsedTitleGravity org.nativescript.playvue:collapsedTitleGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_collapsedTitleTextAppearance org.nativescript.playvue:collapsedTitleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_contentScrim org.nativescript.playvue:contentScrim}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleGravity org.nativescript.playvue:expandedTitleGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMargin org.nativescript.playvue:expandedTitleMargin}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMarginBottom org.nativescript.playvue:expandedTitleMarginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMarginEnd org.nativescript.playvue:expandedTitleMarginEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMarginStart org.nativescript.playvue:expandedTitleMarginStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMarginTop org.nativescript.playvue:expandedTitleMarginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleTextAppearance org.nativescript.playvue:expandedTitleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_scrimAnimationDuration org.nativescript.playvue:scrimAnimationDuration}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_scrimVisibleHeightTrigger org.nativescript.playvue:scrimVisibleHeightTrigger}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_statusBarScrim org.nativescript.playvue:statusBarScrim}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_title org.nativescript.playvue:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_titleEnabled org.nativescript.playvue:titleEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_toolbarId org.nativescript.playvue:toolbarId}</code></td><td></td></tr>
     * </table>
     * @see #CollapsingToolbarLayout_collapsedTitleGravity
     * @see #CollapsingToolbarLayout_collapsedTitleTextAppearance
     * @see #CollapsingToolbarLayout_contentScrim
     * @see #CollapsingToolbarLayout_expandedTitleGravity
     * @see #CollapsingToolbarLayout_expandedTitleMargin
     * @see #CollapsingToolbarLayout_expandedTitleMarginBottom
     * @see #CollapsingToolbarLayout_expandedTitleMarginEnd
     * @see #CollapsingToolbarLayout_expandedTitleMarginStart
     * @see #CollapsingToolbarLayout_expandedTitleMarginTop
     * @see #CollapsingToolbarLayout_expandedTitleTextAppearance
     * @see #CollapsingToolbarLayout_scrimAnimationDuration
     * @see #CollapsingToolbarLayout_scrimVisibleHeightTrigger
     * @see #CollapsingToolbarLayout_statusBarScrim
     * @see #CollapsingToolbarLayout_title
     * @see #CollapsingToolbarLayout_titleEnabled
     * @see #CollapsingToolbarLayout_toolbarId
     */
    public static final int[] CollapsingToolbarLayout={
      0x7f0300ac, 0x7f0300ad, 0x7f0300ca, 0x7f0300ee, 
      0x7f0300ef, 0x7f0300f0, 0x7f0300f1, 0x7f0300f2, 
      0x7f0300f3, 0x7f0300f4, 0x7f0301d4, 0x7f0301d6, 
      0x7f0301fc, 0x7f030251, 0x7f030252, 0x7f03025f
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#collapsedTitleGravity}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:collapsedTitleGravity
     */
    public static final int CollapsingToolbarLayout_collapsedTitleGravity=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#collapsedTitleTextAppearance}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:collapsedTitleTextAppearance
     */
    public static final int CollapsingToolbarLayout_collapsedTitleTextAppearance=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#contentScrim}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:contentScrim
     */
    public static final int CollapsingToolbarLayout_contentScrim=2;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#expandedTitleGravity}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:expandedTitleGravity
     */
    public static final int CollapsingToolbarLayout_expandedTitleGravity=3;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#expandedTitleMargin}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:expandedTitleMargin
     */
    public static final int CollapsingToolbarLayout_expandedTitleMargin=4;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#expandedTitleMarginBottom}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:expandedTitleMarginBottom
     */
    public static final int CollapsingToolbarLayout_expandedTitleMarginBottom=5;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#expandedTitleMarginEnd}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:expandedTitleMarginEnd
     */
    public static final int CollapsingToolbarLayout_expandedTitleMarginEnd=6;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#expandedTitleMarginStart}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:expandedTitleMarginStart
     */
    public static final int CollapsingToolbarLayout_expandedTitleMarginStart=7;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#expandedTitleMarginTop}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:expandedTitleMarginTop
     */
    public static final int CollapsingToolbarLayout_expandedTitleMarginTop=8;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#expandedTitleTextAppearance}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:expandedTitleTextAppearance
     */
    public static final int CollapsingToolbarLayout_expandedTitleTextAppearance=9;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#scrimAnimationDuration}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name org.nativescript.playvue:scrimAnimationDuration
     */
    public static final int CollapsingToolbarLayout_scrimAnimationDuration=10;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#scrimVisibleHeightTrigger}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:scrimVisibleHeightTrigger
     */
    public static final int CollapsingToolbarLayout_scrimVisibleHeightTrigger=11;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#statusBarScrim}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:statusBarScrim
     */
    public static final int CollapsingToolbarLayout_statusBarScrim=12;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#title}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:title
     */
    public static final int CollapsingToolbarLayout_title=13;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#titleEnabled}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:titleEnabled
     */
    public static final int CollapsingToolbarLayout_titleEnabled=14;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#toolbarId}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:toolbarId
     */
    public static final int CollapsingToolbarLayout_toolbarId=15;
    /**
     * Attributes that can be used with a CollapsingToolbarLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_Layout_layout_collapseMode org.nativescript.playvue:layout_collapseMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_Layout_layout_collapseParallaxMultiplier org.nativescript.playvue:layout_collapseParallaxMultiplier}</code></td><td></td></tr>
     * </table>
     * @see #CollapsingToolbarLayout_Layout_layout_collapseMode
     * @see #CollapsingToolbarLayout_Layout_layout_collapseParallaxMultiplier
     */
    public static final int[] CollapsingToolbarLayout_Layout={
      0x7f03015b, 0x7f03015c
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#layout_collapseMode}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>parallax</td><td>2</td><td></td></tr>
     * <tr><td>pin</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:layout_collapseMode
     */
    public static final int CollapsingToolbarLayout_Layout_layout_collapseMode=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#layout_collapseParallaxMultiplier}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:layout_collapseParallaxMultiplier
     */
    public static final int CollapsingToolbarLayout_Layout_layout_collapseParallaxMultiplier=1;
    /**
     * Attributes that can be used with a ColorStateListItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_alpha org.nativescript.playvue:alpha}</code></td><td>Alpha multiplier applied to the base color.</td></tr>
     * </table>
     * @see #ColorStateListItem_android_color
     * @see #ColorStateListItem_android_alpha
     * @see #ColorStateListItem_alpha
     */
    public static final int[] ColorStateListItem={
      0x010101a5, 0x0101031f, 0x7f03003c
    };
    /**
     * <p>
     * @attr description
     * Base color for this state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static final int ColorStateListItem_android_color=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #ColorStateListItem} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static final int ColorStateListItem_android_alpha=1;
    /**
     * <p>
     * @attr description
     * Alpha multiplier applied to the base color.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:alpha
     */
    public static final int ColorStateListItem_alpha=2;
    /**
     * Attributes that can be used with a CompoundButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CompoundButton_android_button android:button}</code></td><td></td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonTint org.nativescript.playvue:buttonTint}</code></td><td>Tint to apply to the button drawable.</td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonTintMode org.nativescript.playvue:buttonTintMode}</code></td><td>Blending mode used to apply the button tint.</td></tr>
     * </table>
     * @see #CompoundButton_android_button
     * @see #CompoundButton_buttonTint
     * @see #CompoundButton_buttonTintMode
     */
    public static final int[] CompoundButton={
      0x01010107, 0x7f030076, 0x7f030077
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#button}
     * attribute's value can be found in the {@link #CompoundButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:button
     */
    public static final int CompoundButton_android_button=0;
    /**
     * <p>
     * @attr description
     * Tint to apply to the button drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:buttonTint
     */
    public static final int CompoundButton_buttonTint=1;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the button tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:buttonTintMode
     */
    public static final int CompoundButton_buttonTintMode=2;
    /**
     * Attributes that can be used with a CoordinatorLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_keylines org.nativescript.playvue:keylines}</code></td><td>A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_statusBarBackground org.nativescript.playvue:statusBarBackground}</code></td><td>Drawable to display behind the status bar when the view is set to draw behind it.</td></tr>
     * </table>
     * @see #CoordinatorLayout_keylines
     * @see #CoordinatorLayout_statusBarBackground
     */
    public static final int[] CoordinatorLayout={
      0x7f030144, 0x7f0301fb
    };
    /**
     * <p>
     * @attr description
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:keylines
     */
    public static final int CoordinatorLayout_keylines=0;
    /**
     * <p>
     * @attr description
     * Drawable to display behind the status bar when the view is set to draw behind it.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:statusBarBackground
     */
    public static final int CoordinatorLayout_statusBarBackground=1;
    /**
     * Attributes that can be used with a CoordinatorLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchor org.nativescript.playvue:layout_anchor}</code></td><td>The id of an anchor view that this view should position relative to.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchorGravity org.nativescript.playvue:layout_anchorGravity}</code></td><td>Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_behavior org.nativescript.playvue:layout_behavior}</code></td><td>The class name of a Behavior class defining special runtime behavior
     * for this child view.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_dodgeInsetEdges org.nativescript.playvue:layout_dodgeInsetEdges}</code></td><td>Specifies how this view dodges the inset edges of the CoordinatorLayout.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_insetEdge org.nativescript.playvue:layout_insetEdge}</code></td><td>Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_keyline org.nativescript.playvue:layout_keyline}</code></td><td>The index of a keyline this view should position relative to.</td></tr>
     * </table>
     * @see #CoordinatorLayout_Layout_android_layout_gravity
     * @see #CoordinatorLayout_Layout_layout_anchor
     * @see #CoordinatorLayout_Layout_layout_anchorGravity
     * @see #CoordinatorLayout_Layout_layout_behavior
     * @see #CoordinatorLayout_Layout_layout_dodgeInsetEdges
     * @see #CoordinatorLayout_Layout_layout_insetEdge
     * @see #CoordinatorLayout_Layout_layout_keyline
     */
    public static final int[] CoordinatorLayout_Layout={
      0x010100b3, 0x7f030158, 0x7f030159, 0x7f03015a, 
      0x7f03015d, 0x7f03015e, 0x7f03015f
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #CoordinatorLayout_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int CoordinatorLayout_Layout_android_layout_gravity=0;
    /**
     * <p>
     * @attr description
     * The id of an anchor view that this view should position relative to.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:layout_anchor
     */
    public static final int CoordinatorLayout_Layout_layout_anchor=1;
    /**
     * <p>
     * @attr description
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:layout_anchorGravity
     */
    public static final int CoordinatorLayout_Layout_layout_anchorGravity=2;
    /**
     * <p>
     * @attr description
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:layout_behavior
     */
    public static final int CoordinatorLayout_Layout_layout_behavior=3;
    /**
     * <p>
     * @attr description
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>5</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:layout_dodgeInsetEdges
     */
    public static final int CoordinatorLayout_Layout_layout_dodgeInsetEdges=4;
    /**
     * <p>
     * @attr description
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>5</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:layout_insetEdge
     */
    public static final int CoordinatorLayout_Layout_layout_insetEdge=5;
    /**
     * <p>
     * @attr description
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name org.nativescript.playvue:layout_keyline
     */
    public static final int CoordinatorLayout_Layout_layout_keyline=6;
    /**
     * Attributes that can be used with a DateTimeCategoricalAxis.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DateTimeCategoricalAxis_dateFormat org.nativescript.playvue:dateFormat}</code></td><td></td></tr>
     * <tr><td><code>{@link #DateTimeCategoricalAxis_dateTimeComponent org.nativescript.playvue:dateTimeComponent}</code></td><td></td></tr>
     * </table>
     * @see #DateTimeCategoricalAxis_dateFormat
     * @see #DateTimeCategoricalAxis_dateTimeComponent
     */
    public static final int[] DateTimeCategoricalAxis={
      0x7f0300d3, 0x7f0300d4
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#dateFormat}
     * attribute's value can be found in the {@link #DateTimeCategoricalAxis} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:dateFormat
     */
    public static final int DateTimeCategoricalAxis_dateFormat=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#dateTimeComponent}
     * attribute's value can be found in the {@link #DateTimeCategoricalAxis} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Date</td><td>8</td><td></td></tr>
     * <tr><td>Day</td><td>a</td><td></td></tr>
     * <tr><td>DayOfWeek</td><td>b</td><td></td></tr>
     * <tr><td>DayOfYear</td><td>c</td><td></td></tr>
     * <tr><td>Hour</td><td>4</td><td></td></tr>
     * <tr><td>Millisecond</td><td>7</td><td></td></tr>
     * <tr><td>Minute</td><td>5</td><td></td></tr>
     * <tr><td>Month</td><td>2</td><td></td></tr>
     * <tr><td>Quarter</td><td>1</td><td></td></tr>
     * <tr><td>Second</td><td>6</td><td></td></tr>
     * <tr><td>TimeOfDay</td><td>9</td><td></td></tr>
     * <tr><td>Week</td><td>3</td><td></td></tr>
     * <tr><td>Year</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:dateTimeComponent
     */
    public static final int DateTimeCategoricalAxis_dateTimeComponent=1;
    /**
     * Attributes that can be used with a DateTimeContinuousAxis.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DateTimeContinuousAxis_gapLength org.nativescript.playvue:gapLength}</code></td><td></td></tr>
     * <tr><td><code>{@link #DateTimeContinuousAxis_majorStep org.nativescript.playvue:majorStep}</code></td><td></td></tr>
     * <tr><td><code>{@link #DateTimeContinuousAxis_majorStepUnit org.nativescript.playvue:majorStepUnit}</code></td><td></td></tr>
     * <tr><td><code>{@link #DateTimeContinuousAxis_maximumTicks org.nativescript.playvue:maximumTicks}</code></td><td></td></tr>
     * <tr><td><code>{@link #DateTimeContinuousAxis_plotMode org.nativescript.playvue:plotMode}</code></td><td></td></tr>
     * </table>
     * @see #DateTimeContinuousAxis_gapLength
     * @see #DateTimeContinuousAxis_majorStep
     * @see #DateTimeContinuousAxis_majorStepUnit
     * @see #DateTimeContinuousAxis_maximumTicks
     * @see #DateTimeContinuousAxis_plotMode
     */
    public static final int[] DateTimeContinuousAxis={
      0x7f030114, 0x7f030177, 0x7f030178, 0x7f030187, 
      0x7f0301a9
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#gapLength}
     * attribute's value can be found in the {@link #DateTimeContinuousAxis} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:gapLength
     */
    public static final int DateTimeContinuousAxis_gapLength=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#majorStep}
     * attribute's value can be found in the {@link #DateTimeContinuousAxis} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:majorStep
     */
    public static final int DateTimeContinuousAxis_majorStep=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#majorStepUnit}
     * attribute's value can be found in the {@link #DateTimeContinuousAxis} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Day</td><td>4</td><td></td></tr>
     * <tr><td>Hour</td><td>5</td><td></td></tr>
     * <tr><td>Millisecond</td><td>8</td><td></td></tr>
     * <tr><td>Minute</td><td>6</td><td></td></tr>
     * <tr><td>Month</td><td>2</td><td></td></tr>
     * <tr><td>Quarter</td><td>1</td><td></td></tr>
     * <tr><td>Second</td><td>7</td><td></td></tr>
     * <tr><td>Week</td><td>3</td><td></td></tr>
     * <tr><td>Year</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:majorStepUnit
     */
    public static final int DateTimeContinuousAxis_majorStepUnit=2;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#maximumTicks}
     * attribute's value can be found in the {@link #DateTimeContinuousAxis} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name org.nativescript.playvue:maximumTicks
     */
    public static final int DateTimeContinuousAxis_maximumTicks=3;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#plotMode}
     * attribute's value can be found in the {@link #DateTimeContinuousAxis} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>BetweenTicks</td><td>0</td><td></td></tr>
     * <tr><td>OnTicks</td><td>1</td><td></td></tr>
     * <tr><td>OnTicksPadded</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:plotMode
     */
    public static final int DateTimeContinuousAxis_plotMode=4;
    /**
     * Attributes that can be used with a DesignTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DesignTheme_bottomSheetDialogTheme org.nativescript.playvue:bottomSheetDialogTheme}</code></td><td></td></tr>
     * <tr><td><code>{@link #DesignTheme_bottomSheetStyle org.nativescript.playvue:bottomSheetStyle}</code></td><td></td></tr>
     * </table>
     * @see #DesignTheme_bottomSheetDialogTheme
     * @see #DesignTheme_bottomSheetStyle
     */
    public static final int[] DesignTheme={
      0x7f03005f, 0x7f030060
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#bottomSheetDialogTheme}
     * attribute's value can be found in the {@link #DesignTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:bottomSheetDialogTheme
     */
    public static final int DesignTheme_bottomSheetDialogTheme=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#bottomSheetStyle}
     * attribute's value can be found in the {@link #DesignTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:bottomSheetStyle
     */
    public static final int DesignTheme_bottomSheetStyle=1;
    /**
     * Attributes that can be used with a DrawerArrowToggle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_arrowHeadLength org.nativescript.playvue:arrowHeadLength}</code></td><td>The length of the arrow head when formed to make an arrow</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_arrowShaftLength org.nativescript.playvue:arrowShaftLength}</code></td><td>The length of the shaft when formed to make an arrow</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_barLength org.nativescript.playvue:barLength}</code></td><td>The length of the bars when they are parallel to each other</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_color org.nativescript.playvue:color}</code></td><td>The drawing color for the bars</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_drawableSize org.nativescript.playvue:drawableSize}</code></td><td>The total size of the drawable</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_gapBetweenBars org.nativescript.playvue:gapBetweenBars}</code></td><td>The max gap between the bars when they are parallel to each other</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_spinBars org.nativescript.playvue:spinBars}</code></td><td>Whether bars should rotate or not during transition</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_thickness org.nativescript.playvue:thickness}</code></td><td>The thickness (stroke size) for the bar paint</td></tr>
     * </table>
     * @see #DrawerArrowToggle_arrowHeadLength
     * @see #DrawerArrowToggle_arrowShaftLength
     * @see #DrawerArrowToggle_barLength
     * @see #DrawerArrowToggle_color
     * @see #DrawerArrowToggle_drawableSize
     * @see #DrawerArrowToggle_gapBetweenBars
     * @see #DrawerArrowToggle_spinBars
     * @see #DrawerArrowToggle_thickness
     */
    public static final int[] DrawerArrowToggle={
      0x7f030043, 0x7f030044, 0x7f030054, 0x7f0300ae, 
      0x7f0300df, 0x7f030113, 0x7f0301ee, 0x7f030244
    };
    /**
     * <p>
     * @attr description
     * The length of the arrow head when formed to make an arrow
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:arrowHeadLength
     */
    public static final int DrawerArrowToggle_arrowHeadLength=0;
    /**
     * <p>
     * @attr description
     * The length of the shaft when formed to make an arrow
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:arrowShaftLength
     */
    public static final int DrawerArrowToggle_arrowShaftLength=1;
    /**
     * <p>
     * @attr description
     * The length of the bars when they are parallel to each other
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:barLength
     */
    public static final int DrawerArrowToggle_barLength=2;
    /**
     * <p>
     * @attr description
     * The drawing color for the bars
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:color
     */
    public static final int DrawerArrowToggle_color=3;
    /**
     * <p>
     * @attr description
     * The total size of the drawable
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:drawableSize
     */
    public static final int DrawerArrowToggle_drawableSize=4;
    /**
     * <p>
     * @attr description
     * The max gap between the bars when they are parallel to each other
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:gapBetweenBars
     */
    public static final int DrawerArrowToggle_gapBetweenBars=5;
    /**
     * <p>
     * @attr description
     * Whether bars should rotate or not during transition
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:spinBars
     */
    public static final int DrawerArrowToggle_spinBars=6;
    /**
     * <p>
     * @attr description
     * The thickness (stroke size) for the bar paint
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:thickness
     */
    public static final int DrawerArrowToggle_thickness=7;
    /**
     * Attributes that can be used with a FloatingActionButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FloatingActionButton_backgroundTint org.nativescript.playvue:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_backgroundTintMode org.nativescript.playvue:backgroundTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_borderWidth org.nativescript.playvue:borderWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_elevation org.nativescript.playvue:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_fabCustomSize org.nativescript.playvue:fabCustomSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_fabSize org.nativescript.playvue:fabSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_hideMotionSpec org.nativescript.playvue:hideMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_hoveredFocusedTranslationZ org.nativescript.playvue:hoveredFocusedTranslationZ}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_maxImageSize org.nativescript.playvue:maxImageSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_pressedTranslationZ org.nativescript.playvue:pressedTranslationZ}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_rippleColor org.nativescript.playvue:rippleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_showMotionSpec org.nativescript.playvue:showMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_useCompatPadding org.nativescript.playvue:useCompatPadding}</code></td><td></td></tr>
     * </table>
     * @see #FloatingActionButton_backgroundTint
     * @see #FloatingActionButton_backgroundTintMode
     * @see #FloatingActionButton_borderWidth
     * @see #FloatingActionButton_elevation
     * @see #FloatingActionButton_fabCustomSize
     * @see #FloatingActionButton_fabSize
     * @see #FloatingActionButton_hideMotionSpec
     * @see #FloatingActionButton_hoveredFocusedTranslationZ
     * @see #FloatingActionButton_maxImageSize
     * @see #FloatingActionButton_pressedTranslationZ
     * @see #FloatingActionButton_rippleColor
     * @see #FloatingActionButton_showMotionSpec
     * @see #FloatingActionButton_useCompatPadding
     */
    public static final int[] FloatingActionButton={
      0x7f030052, 0x7f030053, 0x7f03005b, 0x7f0300e6, 
      0x7f0300f9, 0x7f0300fa, 0x7f03011b, 0x7f030126, 
      0x7f030184, 0x7f0301b2, 0x7f0301c3, 0x7f0301e5, 
      0x7f03026a
    };
    /**
     * <p>
     * @attr description
     * Tint to apply to the background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:backgroundTint
     */
    public static final int FloatingActionButton_backgroundTint=0;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:backgroundTintMode
     */
    public static final int FloatingActionButton_backgroundTintMode=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#borderWidth}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:borderWidth
     */
    public static final int FloatingActionButton_borderWidth=2;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:elevation
     */
    public static final int FloatingActionButton_elevation=3;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#fabCustomSize}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:fabCustomSize
     */
    public static final int FloatingActionButton_fabCustomSize=4;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#fabSize}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td></td></tr>
     * <tr><td>mini</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:fabSize
     */
    public static final int FloatingActionButton_fabSize=5;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#hideMotionSpec}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:hideMotionSpec
     */
    public static final int FloatingActionButton_hideMotionSpec=6;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#hoveredFocusedTranslationZ}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:hoveredFocusedTranslationZ
     */
    public static final int FloatingActionButton_hoveredFocusedTranslationZ=7;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#maxImageSize}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:maxImageSize
     */
    public static final int FloatingActionButton_maxImageSize=8;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#pressedTranslationZ}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:pressedTranslationZ
     */
    public static final int FloatingActionButton_pressedTranslationZ=9;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#rippleColor}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:rippleColor
     */
    public static final int FloatingActionButton_rippleColor=10;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#showMotionSpec}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:showMotionSpec
     */
    public static final int FloatingActionButton_showMotionSpec=11;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#useCompatPadding}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:useCompatPadding
     */
    public static final int FloatingActionButton_useCompatPadding=12;
    /**
     * Attributes that can be used with a FloatingActionButton_Behavior_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FloatingActionButton_Behavior_Layout_behavior_autoHide org.nativescript.playvue:behavior_autoHide}</code></td><td></td></tr>
     * </table>
     * @see #FloatingActionButton_Behavior_Layout_behavior_autoHide
     */
    public static final int[] FloatingActionButton_Behavior_Layout={
      0x7f030055
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#behavior_autoHide}
     * attribute's value can be found in the {@link #FloatingActionButton_Behavior_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:behavior_autoHide
     */
    public static final int FloatingActionButton_Behavior_Layout_behavior_autoHide=0;
    /**
     * Attributes that can be used with a FlowLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FlowLayout_itemSpacing org.nativescript.playvue:itemSpacing}</code></td><td></td></tr>
     * <tr><td><code>{@link #FlowLayout_lineSpacing org.nativescript.playvue:lineSpacing}</code></td><td></td></tr>
     * </table>
     * @see #FlowLayout_itemSpacing
     * @see #FlowLayout_lineSpacing
     */
    public static final int[] FlowLayout={
      0x7f03013f, 0x7f030166
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#itemSpacing}
     * attribute's value can be found in the {@link #FlowLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:itemSpacing
     */
    public static final int FlowLayout_itemSpacing=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#lineSpacing}
     * attribute's value can be found in the {@link #FlowLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:lineSpacing
     */
    public static final int FlowLayout_lineSpacing=1;
    /**
     * Attributes that can be used with a FontFamily.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderAuthority org.nativescript.playvue:fontProviderAuthority}</code></td><td>The authority of the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderCerts org.nativescript.playvue:fontProviderCerts}</code></td><td>The sets of hashes for the certificates the provider should be signed with.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchStrategy org.nativescript.playvue:fontProviderFetchStrategy}</code></td><td>The strategy to be used when fetching font data from a font provider in XML layouts.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchTimeout org.nativescript.playvue:fontProviderFetchTimeout}</code></td><td>The length of the timeout during fetching.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderPackage org.nativescript.playvue:fontProviderPackage}</code></td><td>The package for the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderQuery org.nativescript.playvue:fontProviderQuery}</code></td><td>The query to be sent over to the provider.</td></tr>
     * </table>
     * @see #FontFamily_fontProviderAuthority
     * @see #FontFamily_fontProviderCerts
     * @see #FontFamily_fontProviderFetchStrategy
     * @see #FontFamily_fontProviderFetchTimeout
     * @see #FontFamily_fontProviderPackage
     * @see #FontFamily_fontProviderQuery
     */
    public static final int[] FontFamily={
      0x7f030109, 0x7f03010a, 0x7f03010b, 0x7f03010c, 
      0x7f03010d, 0x7f03010e
    };
    /**
     * <p>
     * @attr description
     * The authority of the Font Provider to be used for the request.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:fontProviderAuthority
     */
    public static final int FontFamily_fontProviderAuthority=0;
    /**
     * <p>
     * @attr description
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:fontProviderCerts
     */
    public static final int FontFamily_fontProviderCerts=1;
    /**
     * <p>
     * @attr description
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:fontProviderFetchStrategy
     */
    public static final int FontFamily_fontProviderFetchStrategy=2;
    /**
     * <p>
     * @attr description
     * The length of the timeout during fetching.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:fontProviderFetchTimeout
     */
    public static final int FontFamily_fontProviderFetchTimeout=3;
    /**
     * <p>
     * @attr description
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:fontProviderPackage
     */
    public static final int FontFamily_fontProviderPackage=4;
    /**
     * <p>
     * @attr description
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:fontProviderQuery
     */
    public static final int FontFamily_fontProviderQuery=5;
    /**
     * Attributes that can be used with a FontFamilyFont.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_font android:font}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontWeight android:fontWeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontStyle android:fontStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_ttcIndex android:ttcIndex}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontVariationSettings android:fontVariationSettings}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_font org.nativescript.playvue:font}</code></td><td>The reference to the font file to be used.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontStyle org.nativescript.playvue:fontStyle}</code></td><td>The style of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontVariationSettings org.nativescript.playvue:fontVariationSettings}</code></td><td>The variation settings to be applied to the font.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontWeight org.nativescript.playvue:fontWeight}</code></td><td>The weight of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_ttcIndex org.nativescript.playvue:ttcIndex}</code></td><td>The index of the font in the tcc font file.</td></tr>
     * </table>
     * @see #FontFamilyFont_android_font
     * @see #FontFamilyFont_android_fontWeight
     * @see #FontFamilyFont_android_fontStyle
     * @see #FontFamilyFont_android_ttcIndex
     * @see #FontFamilyFont_android_fontVariationSettings
     * @see #FontFamilyFont_font
     * @see #FontFamilyFont_fontStyle
     * @see #FontFamilyFont_fontVariationSettings
     * @see #FontFamilyFont_fontWeight
     * @see #FontFamilyFont_ttcIndex
     */
    public static final int[] FontFamilyFont={
      0x01010532, 0x01010533, 0x0101053f, 0x0101056f, 
      0x01010570, 0x7f030107, 0x7f03010f, 0x7f030110, 
      0x7f030111, 0x7f030269
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#font}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:font
     */
    public static final int FontFamilyFont_android_font=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontWeight}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:fontWeight
     */
    public static final int FontFamilyFont_android_fontWeight=1;
    /**
     * <p>
     * @attr description
     * References to the framework attrs
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:fontStyle
     */
    public static final int FontFamilyFont_android_fontStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#ttcIndex}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:ttcIndex
     */
    public static final int FontFamilyFont_android_ttcIndex=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontVariationSettings}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fontVariationSettings
     */
    public static final int FontFamilyFont_android_fontVariationSettings=4;
    /**
     * <p>
     * @attr description
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:font
     */
    public static final int FontFamilyFont_font=5;
    /**
     * <p>
     * @attr description
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:fontStyle
     */
    public static final int FontFamilyFont_fontStyle=6;
    /**
     * <p>
     * @attr description
     * The variation settings to be applied to the font. The string should be in the following
     * format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
     * used, or the font used does not support variation settings, this attribute needs not be
     * specified.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:fontVariationSettings
     */
    public static final int FontFamilyFont_fontVariationSettings=7;
    /**
     * <p>
     * @attr description
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name org.nativescript.playvue:fontWeight
     */
    public static final int FontFamilyFont_fontWeight=8;
    /**
     * <p>
     * @attr description
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name org.nativescript.playvue:ttcIndex
     */
    public static final int FontFamilyFont_ttcIndex=9;
    /**
     * Attributes that can be used with a ForegroundLinearLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ForegroundLinearLayout_android_foreground android:foreground}</code></td><td></td></tr>
     * <tr><td><code>{@link #ForegroundLinearLayout_android_foregroundGravity android:foregroundGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #ForegroundLinearLayout_foregroundInsidePadding org.nativescript.playvue:foregroundInsidePadding}</code></td><td></td></tr>
     * </table>
     * @see #ForegroundLinearLayout_android_foreground
     * @see #ForegroundLinearLayout_android_foregroundGravity
     * @see #ForegroundLinearLayout_foregroundInsidePadding
     */
    public static final int[] ForegroundLinearLayout={
      0x01010109, 0x01010200, 0x7f030112
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#foreground}
     * attribute's value can be found in the {@link #ForegroundLinearLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:foreground
     */
    public static final int ForegroundLinearLayout_android_foreground=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#foregroundGravity}
     * attribute's value can be found in the {@link #ForegroundLinearLayout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:foregroundGravity
     */
    public static final int ForegroundLinearLayout_android_foregroundGravity=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#foregroundInsidePadding}
     * attribute's value can be found in the {@link #ForegroundLinearLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:foregroundInsidePadding
     */
    public static final int ForegroundLinearLayout_foregroundInsidePadding=2;
    /**
     * Attributes that can be used with a GaugeBarIndicator.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GaugeBarIndicator_animationStartValue org.nativescript.playvue:animationStartValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeBarIndicator_cap org.nativescript.playvue:cap}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeBarIndicator_location org.nativescript.playvue:location}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeBarIndicator_maximum org.nativescript.playvue:maximum}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeBarIndicator_minimum org.nativescript.playvue:minimum}</code></td><td></td></tr>
     * </table>
     * @see #GaugeBarIndicator_animationStartValue
     * @see #GaugeBarIndicator_cap
     * @see #GaugeBarIndicator_location
     * @see #GaugeBarIndicator_maximum
     * @see #GaugeBarIndicator_minimum
     */
    public static final int[] GaugeBarIndicator={
      0x7f030040, 0x7f03007a, 0x7f030174, 0x7f030186, 
      0x7f03018a
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#animationStartValue}
     * attribute's value can be found in the {@link #GaugeBarIndicator} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:animationStartValue
     */
    public static final int GaugeBarIndicator_animationStartValue=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#cap}
     * attribute's value can be found in the {@link #GaugeBarIndicator} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>edge</td><td>1</td><td></td></tr>
     * <tr><td>round</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:cap
     */
    public static final int GaugeBarIndicator_cap=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#location}
     * attribute's value can be found in the {@link #GaugeBarIndicator} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:location
     */
    public static final int GaugeBarIndicator_location=2;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#maximum}
     * attribute's value can be found in the {@link #GaugeBarIndicator} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:maximum
     */
    public static final int GaugeBarIndicator_maximum=3;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#minimum}
     * attribute's value can be found in the {@link #GaugeBarIndicator} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:minimum
     */
    public static final int GaugeBarIndicator_minimum=4;
    /**
     * Attributes that can be used with a GaugeIndicator.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GaugeIndicator_animated org.nativescript.playvue:animated}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeIndicator_animationDuration org.nativescript.playvue:animationDuration}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeIndicator_fillColor org.nativescript.playvue:fillColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeIndicator_strokeColor org.nativescript.playvue:strokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeIndicator_strokeWidthF org.nativescript.playvue:strokeWidthF}</code></td><td></td></tr>
     * </table>
     * @see #GaugeIndicator_animated
     * @see #GaugeIndicator_animationDuration
     * @see #GaugeIndicator_fillColor
     * @see #GaugeIndicator_strokeColor
     * @see #GaugeIndicator_strokeWidthF
     */
    public static final int[] GaugeIndicator={
      0x7f03003e, 0x7f03003f, 0x7f030103, 0x7f0301fd, 
      0x7f0301ff
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#animated}
     * attribute's value can be found in the {@link #GaugeIndicator} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:animated
     */
    public static final int GaugeIndicator_animated=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#animationDuration}
     * attribute's value can be found in the {@link #GaugeIndicator} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name org.nativescript.playvue:animationDuration
     */
    public static final int GaugeIndicator_animationDuration=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#fillColor}
     * attribute's value can be found in the {@link #GaugeIndicator} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:fillColor
     */
    public static final int GaugeIndicator_fillColor=2;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#strokeColor}
     * attribute's value can be found in the {@link #GaugeIndicator} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:strokeColor
     */
    public static final int GaugeIndicator_strokeColor=3;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#strokeWidthF}
     * attribute's value can be found in the {@link #GaugeIndicator} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:strokeWidthF
     */
    public static final int GaugeIndicator_strokeWidthF=4;
    public static final int[] GaugeRadialBarIndicator={
    };
    /**
     * Attributes that can be used with a GaugeRadialNeedle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GaugeRadialNeedle_animationStartValue org.nativescript.playvue:animationStartValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeRadialNeedle_bottomWidth org.nativescript.playvue:bottomWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeRadialNeedle_circleFillColor org.nativescript.playvue:circleFillColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeRadialNeedle_circleInnerRadius org.nativescript.playvue:circleInnerRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeRadialNeedle_circleRadius org.nativescript.playvue:circleRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeRadialNeedle_circleStrokeColor org.nativescript.playvue:circleStrokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeRadialNeedle_length org.nativescript.playvue:length}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeRadialNeedle_offset org.nativescript.playvue:offset}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeRadialNeedle_topWidth org.nativescript.playvue:topWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeRadialNeedle_value org.nativescript.playvue:value}</code></td><td></td></tr>
     * </table>
     * @see #GaugeRadialNeedle_animationStartValue
     * @see #GaugeRadialNeedle_bottomWidth
     * @see #GaugeRadialNeedle_circleFillColor
     * @see #GaugeRadialNeedle_circleInnerRadius
     * @see #GaugeRadialNeedle_circleRadius
     * @see #GaugeRadialNeedle_circleStrokeColor
     * @see #GaugeRadialNeedle_length
     * @see #GaugeRadialNeedle_offset
     * @see #GaugeRadialNeedle_topWidth
     * @see #GaugeRadialNeedle_value
     */
    public static final int[] GaugeRadialNeedle={
      0x7f030040, 0x7f030061, 0x7f03009c, 0x7f03009d, 
      0x7f03009e, 0x7f03009f, 0x7f030162, 0x7f030196, 
      0x7f030265, 0x7f03026b
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#animationStartValue}
     * attribute's value can be found in the {@link #GaugeRadialNeedle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:animationStartValue
     */
    public static final int GaugeRadialNeedle_animationStartValue=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#bottomWidth}
     * attribute's value can be found in the {@link #GaugeRadialNeedle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:bottomWidth
     */
    public static final int GaugeRadialNeedle_bottomWidth=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#circleFillColor}
     * attribute's value can be found in the {@link #GaugeRadialNeedle} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:circleFillColor
     */
    public static final int GaugeRadialNeedle_circleFillColor=2;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#circleInnerRadius}
     * attribute's value can be found in the {@link #GaugeRadialNeedle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:circleInnerRadius
     */
    public static final int GaugeRadialNeedle_circleInnerRadius=3;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#circleRadius}
     * attribute's value can be found in the {@link #GaugeRadialNeedle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:circleRadius
     */
    public static final int GaugeRadialNeedle_circleRadius=4;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#circleStrokeColor}
     * attribute's value can be found in the {@link #GaugeRadialNeedle} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:circleStrokeColor
     */
    public static final int GaugeRadialNeedle_circleStrokeColor=5;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#length}
     * attribute's value can be found in the {@link #GaugeRadialNeedle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:length
     */
    public static final int GaugeRadialNeedle_length=6;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#offset}
     * attribute's value can be found in the {@link #GaugeRadialNeedle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:offset
     */
    public static final int GaugeRadialNeedle_offset=7;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#topWidth}
     * attribute's value can be found in the {@link #GaugeRadialNeedle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:topWidth
     */
    public static final int GaugeRadialNeedle_topWidth=8;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#value}
     * attribute's value can be found in the {@link #GaugeRadialNeedle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:value
     */
    public static final int GaugeRadialNeedle_value=9;
    /**
     * Attributes that can be used with a GaugeRadialScale.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GaugeRadialScale_radius org.nativescript.playvue:radius}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeRadialScale_startAngle org.nativescript.playvue:startAngle}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeRadialScale_sweepAngle org.nativescript.playvue:sweepAngle}</code></td><td></td></tr>
     * </table>
     * @see #GaugeRadialScale_radius
     * @see #GaugeRadialScale_startAngle
     * @see #GaugeRadialScale_sweepAngle
     */
    public static final int[] GaugeRadialScale={
      0x7f0301bc, 0x7f0301f4, 0x7f030209
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#radius}
     * attribute's value can be found in the {@link #GaugeRadialScale} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:radius
     */
    public static final int GaugeRadialScale_radius=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#startAngle}
     * attribute's value can be found in the {@link #GaugeRadialScale} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:startAngle
     */
    public static final int GaugeRadialScale_startAngle=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#sweepAngle}
     * attribute's value can be found in the {@link #GaugeRadialScale} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:sweepAngle
     */
    public static final int GaugeRadialScale_sweepAngle=2;
    /**
     * Attributes that can be used with a GaugeScale.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GaugeScale_fillColor org.nativescript.playvue:fillColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeScale_labelsColor org.nativescript.playvue:labelsColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeScale_labelsCount org.nativescript.playvue:labelsCount}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeScale_labelsLayoutMode org.nativescript.playvue:labelsLayoutMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeScale_labelsOffset org.nativescript.playvue:labelsOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeScale_labelsVisible org.nativescript.playvue:labelsVisible}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeScale_lineVisible org.nativescript.playvue:lineVisible}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeScale_majorTicksCount org.nativescript.playvue:majorTicksCount}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeScale_majorTicksFillColor org.nativescript.playvue:majorTicksFillColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeScale_majorTicksLength org.nativescript.playvue:majorTicksLength}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeScale_majorTicksStrokeColor org.nativescript.playvue:majorTicksStrokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeScale_majorTicksWidth org.nativescript.playvue:majorTicksWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeScale_maximum org.nativescript.playvue:maximum}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeScale_minimum org.nativescript.playvue:minimum}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeScale_minorTicksCount org.nativescript.playvue:minorTicksCount}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeScale_minorTicksFillColor org.nativescript.playvue:minorTicksFillColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeScale_minorTicksLength org.nativescript.playvue:minorTicksLength}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeScale_minorTicksStrokeColor org.nativescript.playvue:minorTicksStrokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeScale_minorTicksWidth org.nativescript.playvue:minorTicksWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeScale_strokeColor org.nativescript.playvue:strokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeScale_strokeWidthF org.nativescript.playvue:strokeWidthF}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeScale_ticksLayoutMode org.nativescript.playvue:ticksLayoutMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeScale_ticksOffset org.nativescript.playvue:ticksOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #GaugeScale_ticksVisible org.nativescript.playvue:ticksVisible}</code></td><td></td></tr>
     * </table>
     * @see #GaugeScale_fillColor
     * @see #GaugeScale_labelsColor
     * @see #GaugeScale_labelsCount
     * @see #GaugeScale_labelsLayoutMode
     * @see #GaugeScale_labelsOffset
     * @see #GaugeScale_labelsVisible
     * @see #GaugeScale_lineVisible
     * @see #GaugeScale_majorTicksCount
     * @see #GaugeScale_majorTicksFillColor
     * @see #GaugeScale_majorTicksLength
     * @see #GaugeScale_majorTicksStrokeColor
     * @see #GaugeScale_majorTicksWidth
     * @see #GaugeScale_maximum
     * @see #GaugeScale_minimum
     * @see #GaugeScale_minorTicksCount
     * @see #GaugeScale_minorTicksFillColor
     * @see #GaugeScale_minorTicksLength
     * @see #GaugeScale_minorTicksStrokeColor
     * @see #GaugeScale_minorTicksWidth
     * @see #GaugeScale_strokeColor
     * @see #GaugeScale_strokeWidthF
     * @see #GaugeScale_ticksLayoutMode
     * @see #GaugeScale_ticksOffset
     * @see #GaugeScale_ticksVisible
     */
    public static final int[] GaugeScale={
      0x7f030103, 0x7f030150, 0x7f030151, 0x7f030152, 
      0x7f030153, 0x7f030154, 0x7f030168, 0x7f03017b, 
      0x7f03017c, 0x7f03017d, 0x7f03017e, 0x7f03017f, 
      0x7f030186, 0x7f03018a, 0x7f03018b, 0x7f03018c, 
      0x7f03018d, 0x7f03018e, 0x7f03018f, 0x7f0301fd, 
      0x7f0301ff, 0x7f03024c, 0x7f03024d, 0x7f03024e
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#fillColor}
     * attribute's value can be found in the {@link #GaugeScale} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:fillColor
     */
    public static final int GaugeScale_fillColor=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#labelsColor}
     * attribute's value can be found in the {@link #GaugeScale} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:labelsColor
     */
    public static final int GaugeScale_labelsColor=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#labelsCount}
     * attribute's value can be found in the {@link #GaugeScale} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name org.nativescript.playvue:labelsCount
     */
    public static final int GaugeScale_labelsCount=2;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#labelsLayoutMode}
     * attribute's value can be found in the {@link #GaugeScale} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>inner</td><td>1</td><td></td></tr>
     * <tr><td>outer</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:labelsLayoutMode
     */
    public static final int GaugeScale_labelsLayoutMode=3;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#labelsOffset}
     * attribute's value can be found in the {@link #GaugeScale} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:labelsOffset
     */
    public static final int GaugeScale_labelsOffset=4;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#labelsVisible}
     * attribute's value can be found in the {@link #GaugeScale} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:labelsVisible
     */
    public static final int GaugeScale_labelsVisible=5;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#lineVisible}
     * attribute's value can be found in the {@link #GaugeScale} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:lineVisible
     */
    public static final int GaugeScale_lineVisible=6;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#majorTicksCount}
     * attribute's value can be found in the {@link #GaugeScale} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name org.nativescript.playvue:majorTicksCount
     */
    public static final int GaugeScale_majorTicksCount=7;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#majorTicksFillColor}
     * attribute's value can be found in the {@link #GaugeScale} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:majorTicksFillColor
     */
    public static final int GaugeScale_majorTicksFillColor=8;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#majorTicksLength}
     * attribute's value can be found in the {@link #GaugeScale} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:majorTicksLength
     */
    public static final int GaugeScale_majorTicksLength=9;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#majorTicksStrokeColor}
     * attribute's value can be found in the {@link #GaugeScale} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:majorTicksStrokeColor
     */
    public static final int GaugeScale_majorTicksStrokeColor=10;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#majorTicksWidth}
     * attribute's value can be found in the {@link #GaugeScale} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:majorTicksWidth
     */
    public static final int GaugeScale_majorTicksWidth=11;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#maximum}
     * attribute's value can be found in the {@link #GaugeScale} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:maximum
     */
    public static final int GaugeScale_maximum=12;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#minimum}
     * attribute's value can be found in the {@link #GaugeScale} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:minimum
     */
    public static final int GaugeScale_minimum=13;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#minorTicksCount}
     * attribute's value can be found in the {@link #GaugeScale} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name org.nativescript.playvue:minorTicksCount
     */
    public static final int GaugeScale_minorTicksCount=14;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#minorTicksFillColor}
     * attribute's value can be found in the {@link #GaugeScale} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:minorTicksFillColor
     */
    public static final int GaugeScale_minorTicksFillColor=15;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#minorTicksLength}
     * attribute's value can be found in the {@link #GaugeScale} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:minorTicksLength
     */
    public static final int GaugeScale_minorTicksLength=16;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#minorTicksStrokeColor}
     * attribute's value can be found in the {@link #GaugeScale} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:minorTicksStrokeColor
     */
    public static final int GaugeScale_minorTicksStrokeColor=17;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#minorTicksWidth}
     * attribute's value can be found in the {@link #GaugeScale} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:minorTicksWidth
     */
    public static final int GaugeScale_minorTicksWidth=18;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#strokeColor}
     * attribute's value can be found in the {@link #GaugeScale} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:strokeColor
     */
    public static final int GaugeScale_strokeColor=19;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#strokeWidthF}
     * attribute's value can be found in the {@link #GaugeScale} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:strokeWidthF
     */
    public static final int GaugeScale_strokeWidthF=20;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#ticksLayoutMode}
     * attribute's value can be found in the {@link #GaugeScale} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>inner</td><td>1</td><td></td></tr>
     * <tr><td>outer</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:ticksLayoutMode
     */
    public static final int GaugeScale_ticksLayoutMode=21;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#ticksOffset}
     * attribute's value can be found in the {@link #GaugeScale} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:ticksOffset
     */
    public static final int GaugeScale_ticksOffset=22;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#ticksVisible}
     * attribute's value can be found in the {@link #GaugeScale} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:ticksVisible
     */
    public static final int GaugeScale_ticksVisible=23;
    /**
     * Attributes that can be used with a GenericDraweeHierarchy.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_actualImageScaleType org.nativescript.playvue:actualImageScaleType}</code></td><td>Scale type of the actual image.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_backgroundImage org.nativescript.playvue:backgroundImage}</code></td><td>A drawable or color to be used as a background.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_fadeDuration org.nativescript.playvue:fadeDuration}</code></td><td>Fade duration in milliseconds.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_failureImage org.nativescript.playvue:failureImage}</code></td><td>A drawable to be be used as a failure image.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_failureImageScaleType org.nativescript.playvue:failureImageScaleType}</code></td><td>Scale type of the failure image.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_overlayImage org.nativescript.playvue:overlayImage}</code></td><td>A drawable or color to be used as an overlay.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_placeholderImage org.nativescript.playvue:placeholderImage}</code></td><td>A drawable or color to be be used as a placeholder.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_placeholderImageScaleType org.nativescript.playvue:placeholderImageScaleType}</code></td><td>Scale type of the placeholder image.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_pressedStateOverlayImage org.nativescript.playvue:pressedStateOverlayImage}</code></td><td>A drawable or color to be used as a pressed-state-overlay</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_progressBarAutoRotateInterval org.nativescript.playvue:progressBarAutoRotateInterval}</code></td><td>Progress bar Auto Rotate interval in milliseconds</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_progressBarImage org.nativescript.playvue:progressBarImage}</code></td><td>A drawable to be be used as a progress bar.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_progressBarImageScaleType org.nativescript.playvue:progressBarImageScaleType}</code></td><td>Scale type of the progress bar.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_retryImage org.nativescript.playvue:retryImage}</code></td><td>A drawable to be be used as a retry image.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_retryImageScaleType org.nativescript.playvue:retryImageScaleType}</code></td><td>Scale type of the retry image.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_roundAsCircle org.nativescript.playvue:roundAsCircle}</code></td><td>Round as circle.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_roundBottomEnd org.nativescript.playvue:roundBottomEnd}</code></td><td>Round the bottom-end edge.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_roundBottomLeft org.nativescript.playvue:roundBottomLeft}</code></td><td>Round the bottom-left corner.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_roundBottomRight org.nativescript.playvue:roundBottomRight}</code></td><td>Round the bottom-right corner.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_roundBottomStart org.nativescript.playvue:roundBottomStart}</code></td><td>Round the bottom-start edge.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_roundTopEnd org.nativescript.playvue:roundTopEnd}</code></td><td>Round the top-end edge.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_roundTopLeft org.nativescript.playvue:roundTopLeft}</code></td><td>Round the top-left corner.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_roundTopRight org.nativescript.playvue:roundTopRight}</code></td><td>Round the top-right corner.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_roundTopStart org.nativescript.playvue:roundTopStart}</code></td><td>Round the top-start edge.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_roundWithOverlayColor org.nativescript.playvue:roundWithOverlayColor}</code></td><td>Round by overlying color.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_roundedCornerRadius org.nativescript.playvue:roundedCornerRadius}</code></td><td>Rounded corner radius.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_roundingBorderColor org.nativescript.playvue:roundingBorderColor}</code></td><td>Rounding border color</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_roundingBorderPadding org.nativescript.playvue:roundingBorderPadding}</code></td><td>Rounding border padding</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_roundingBorderWidth org.nativescript.playvue:roundingBorderWidth}</code></td><td>Rounding border width</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_viewAspectRatio org.nativescript.playvue:viewAspectRatio}</code></td><td>Aspect ratio (width / height) of the view, not necessarily of the images.</td></tr>
     * </table>
     * @see #GenericDraweeHierarchy_actualImageScaleType
     * @see #GenericDraweeHierarchy_backgroundImage
     * @see #GenericDraweeHierarchy_fadeDuration
     * @see #GenericDraweeHierarchy_failureImage
     * @see #GenericDraweeHierarchy_failureImageScaleType
     * @see #GenericDraweeHierarchy_overlayImage
     * @see #GenericDraweeHierarchy_placeholderImage
     * @see #GenericDraweeHierarchy_placeholderImageScaleType
     * @see #GenericDraweeHierarchy_pressedStateOverlayImage
     * @see #GenericDraweeHierarchy_progressBarAutoRotateInterval
     * @see #GenericDraweeHierarchy_progressBarImage
     * @see #GenericDraweeHierarchy_progressBarImageScaleType
     * @see #GenericDraweeHierarchy_retryImage
     * @see #GenericDraweeHierarchy_retryImageScaleType
     * @see #GenericDraweeHierarchy_roundAsCircle
     * @see #GenericDraweeHierarchy_roundBottomEnd
     * @see #GenericDraweeHierarchy_roundBottomLeft
     * @see #GenericDraweeHierarchy_roundBottomRight
     * @see #GenericDraweeHierarchy_roundBottomStart
     * @see #GenericDraweeHierarchy_roundTopEnd
     * @see #GenericDraweeHierarchy_roundTopLeft
     * @see #GenericDraweeHierarchy_roundTopRight
     * @see #GenericDraweeHierarchy_roundTopStart
     * @see #GenericDraweeHierarchy_roundWithOverlayColor
     * @see #GenericDraweeHierarchy_roundedCornerRadius
     * @see #GenericDraweeHierarchy_roundingBorderColor
     * @see #GenericDraweeHierarchy_roundingBorderPadding
     * @see #GenericDraweeHierarchy_roundingBorderWidth
     * @see #GenericDraweeHierarchy_viewAspectRatio
     */
    public static final int[] GenericDraweeHierarchy={
      0x7f030035, 0x7f03004f, 0x7f0300fb, 0x7f0300fc, 
      0x7f0300fd, 0x7f030198, 0x7f0301a7, 0x7f0301a8, 
      0x7f0301b1, 0x7f0301b3, 0x7f0301b4, 0x7f0301b5, 
      0x7f0301c0, 0x7f0301c1, 0x7f0301c4, 0x7f0301c6, 
      0x7f0301c7, 0x7f0301c8, 0x7f0301c9, 0x7f0301ca, 
      0x7f0301cb, 0x7f0301cc, 0x7f0301cd, 0x7f0301ce, 
      0x7f0301cf, 0x7f0301d0, 0x7f0301d1, 0x7f0301d2, 
      0x7f03026f
    };
    /**
     * <p>
     * @attr description
     * Scale type of the actual image.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:actualImageScaleType
     */
    public static final int GenericDraweeHierarchy_actualImageScaleType=0;
    /**
     * <p>
     * @attr description
     * A drawable or color to be used as a background.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:backgroundImage
     */
    public static final int GenericDraweeHierarchy_backgroundImage=1;
    /**
     * <p>
     * @attr description
     * Fade duration in milliseconds.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name org.nativescript.playvue:fadeDuration
     */
    public static final int GenericDraweeHierarchy_fadeDuration=2;
    /**
     * <p>
     * @attr description
     * A drawable to be be used as a failure image.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:failureImage
     */
    public static final int GenericDraweeHierarchy_failureImage=3;
    /**
     * <p>
     * @attr description
     * Scale type of the failure image. Ignored if failureImage is not specified.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:failureImageScaleType
     */
    public static final int GenericDraweeHierarchy_failureImageScaleType=4;
    /**
     * <p>
     * @attr description
     * A drawable or color to be used as an overlay.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:overlayImage
     */
    public static final int GenericDraweeHierarchy_overlayImage=5;
    /**
     * <p>
     * @attr description
     * A drawable or color to be be used as a placeholder.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:placeholderImage
     */
    public static final int GenericDraweeHierarchy_placeholderImage=6;
    /**
     * <p>
     * @attr description
     * Scale type of the placeholder image. Ignored if placeholderImage is not specified.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:placeholderImageScaleType
     */
    public static final int GenericDraweeHierarchy_placeholderImageScaleType=7;
    /**
     * <p>
     * @attr description
     * A drawable or color to be used as a pressed-state-overlay
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:pressedStateOverlayImage
     */
    public static final int GenericDraweeHierarchy_pressedStateOverlayImage=8;
    /**
     * <p>
     * @attr description
     * Progress bar Auto Rotate interval in milliseconds
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name org.nativescript.playvue:progressBarAutoRotateInterval
     */
    public static final int GenericDraweeHierarchy_progressBarAutoRotateInterval=9;
    /**
     * <p>
     * @attr description
     * A drawable to be be used as a progress bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:progressBarImage
     */
    public static final int GenericDraweeHierarchy_progressBarImage=10;
    /**
     * <p>
     * @attr description
     * Scale type of the progress bar. Ignored if progressBarImage is not specified.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:progressBarImageScaleType
     */
    public static final int GenericDraweeHierarchy_progressBarImageScaleType=11;
    /**
     * <p>
     * @attr description
     * A drawable to be be used as a retry image.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:retryImage
     */
    public static final int GenericDraweeHierarchy_retryImage=12;
    /**
     * <p>
     * @attr description
     * Scale type of the retry image. Ignored if retryImage is not specified.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:retryImageScaleType
     */
    public static final int GenericDraweeHierarchy_retryImageScaleType=13;
    /**
     * <p>
     * @attr description
     * Round as circle.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:roundAsCircle
     */
    public static final int GenericDraweeHierarchy_roundAsCircle=14;
    /**
     * <p>
     * @attr description
     * Round the bottom-end edge. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:roundBottomEnd
     */
    public static final int GenericDraweeHierarchy_roundBottomEnd=15;
    /**
     * <p>
     * @attr description
     * Round the bottom-left corner. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:roundBottomLeft
     */
    public static final int GenericDraweeHierarchy_roundBottomLeft=16;
    /**
     * <p>
     * @attr description
     * Round the bottom-right corner. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:roundBottomRight
     */
    public static final int GenericDraweeHierarchy_roundBottomRight=17;
    /**
     * <p>
     * @attr description
     * Round the bottom-start edge. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:roundBottomStart
     */
    public static final int GenericDraweeHierarchy_roundBottomStart=18;
    /**
     * <p>
     * @attr description
     * Round the top-end edge. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:roundTopEnd
     */
    public static final int GenericDraweeHierarchy_roundTopEnd=19;
    /**
     * <p>
     * @attr description
     * Round the top-left corner. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:roundTopLeft
     */
    public static final int GenericDraweeHierarchy_roundTopLeft=20;
    /**
     * <p>
     * @attr description
     * Round the top-right corner. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:roundTopRight
     */
    public static final int GenericDraweeHierarchy_roundTopRight=21;
    /**
     * <p>
     * @attr description
     * Round the top-start edge. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:roundTopStart
     */
    public static final int GenericDraweeHierarchy_roundTopStart=22;
    /**
     * <p>
     * @attr description
     * Round by overlying color.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:roundWithOverlayColor
     */
    public static final int GenericDraweeHierarchy_roundWithOverlayColor=23;
    /**
     * <p>
     * @attr description
     * Rounded corner radius. Ignored if roundAsCircle is used.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:roundedCornerRadius
     */
    public static final int GenericDraweeHierarchy_roundedCornerRadius=24;
    /**
     * <p>
     * @attr description
     * Rounding border color
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:roundingBorderColor
     */
    public static final int GenericDraweeHierarchy_roundingBorderColor=25;
    /**
     * <p>
     * @attr description
     * Rounding border padding
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:roundingBorderPadding
     */
    public static final int GenericDraweeHierarchy_roundingBorderPadding=26;
    /**
     * <p>
     * @attr description
     * Rounding border width
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:roundingBorderWidth
     */
    public static final int GenericDraweeHierarchy_roundingBorderWidth=27;
    /**
     * <p>
     * @attr description
     * Aspect ratio (width / height) of the view, not necessarily of the images.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:viewAspectRatio
     */
    public static final int GenericDraweeHierarchy_viewAspectRatio=28;
    /**
     * Attributes that can be used with a GradientColor.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GradientColor_android_startColor android:startColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endColor android:endColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_type android:type}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerX android:centerX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerY android:centerY}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_gradientRadius android:gradientRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_tileMode android:tileMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerColor android:centerColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_startX android:startX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_startY android:startY}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endX android:endX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endY android:endY}</code></td><td></td></tr>
     * </table>
     * @see #GradientColor_android_startColor
     * @see #GradientColor_android_endColor
     * @see #GradientColor_android_type
     * @see #GradientColor_android_centerX
     * @see #GradientColor_android_centerY
     * @see #GradientColor_android_gradientRadius
     * @see #GradientColor_android_tileMode
     * @see #GradientColor_android_centerColor
     * @see #GradientColor_android_startX
     * @see #GradientColor_android_startY
     * @see #GradientColor_android_endX
     * @see #GradientColor_android_endY
     */
    public static final int[] GradientColor={
      0x0101019d, 0x0101019e, 0x010101a1, 0x010101a2, 
      0x010101a3, 0x010101a4, 0x01010201, 0x0101020b, 
      0x01010510, 0x01010511, 0x01010512, 0x01010513
    };
    /**
     * <p>
     * @attr description
     * Start color of the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:startColor
     */
    public static final int GradientColor_android_startColor=0;
    /**
     * <p>
     * @attr description
     * End color of the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:endColor
     */
    public static final int GradientColor_android_endColor=1;
    /**
     * <p>
     * @attr description
     * Type of gradient. The default type is linear.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>linear</td><td>0</td><td></td></tr>
     * <tr><td>radial</td><td>1</td><td></td></tr>
     * <tr><td>sweep</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:type
     */
    public static final int GradientColor_android_type=2;
    /**
     * <p>
     * @attr description
     * X coordinate of the center of the gradient within the path.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:centerX
     */
    public static final int GradientColor_android_centerX=3;
    /**
     * <p>
     * @attr description
     * Y coordinate of the center of the gradient within the path.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:centerY
     */
    public static final int GradientColor_android_centerY=4;
    /**
     * <p>
     * @attr description
     * Radius of the gradient, used only with radial gradient.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:gradientRadius
     */
    public static final int GradientColor_android_gradientRadius=5;
    /**
     * <p>
     * @attr description
     * Defines the tile mode of the gradient. SweepGradient doesn't support tiling.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>clamp</td><td>0</td><td></td></tr>
     * <tr><td>disabled</td><td>ffffffff</td><td></td></tr>
     * <tr><td>mirror</td><td>2</td><td></td></tr>
     * <tr><td>repeat</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:tileMode
     */
    public static final int GradientColor_android_tileMode=6;
    /**
     * <p>
     * @attr description
     * Optional center color.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:centerColor
     */
    public static final int GradientColor_android_centerColor=7;
    /**
     * <p>
     * @attr description
     * X coordinate of the start point origin of the gradient.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:startX
     */
    public static final int GradientColor_android_startX=8;
    /**
     * <p>
     * @attr description
     * Y coordinate of the start point of the gradient within the shape.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:startY
     */
    public static final int GradientColor_android_startY=9;
    /**
     * <p>
     * @attr description
     * X coordinate of the end point origin of the gradient.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:endX
     */
    public static final int GradientColor_android_endX=10;
    /**
     * <p>
     * @attr description
     * Y coordinate of the end point of the gradient within the shape.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:endY
     */
    public static final int GradientColor_android_endY=11;
    /**
     * Attributes that can be used with a GradientColorItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GradientColorItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColorItem_android_offset android:offset}</code></td><td></td></tr>
     * </table>
     * @see #GradientColorItem_android_color
     * @see #GradientColorItem_android_offset
     */
    public static final int[] GradientColorItem={
      0x010101a5, 0x01010514
    };
    /**
     * <p>
     * @attr description
     * The current color for the offset inside the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static final int GradientColorItem_android_color=0;
    /**
     * <p>
     * @attr description
     * The offset (or ratio) of this current color item inside the gradient.
     * The value is only meaningful when it is between 0 and 1.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:offset
     */
    public static final int GradientColorItem_android_offset=1;
    /**
     * Attributes that can be used with a LineAxis.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LineAxis_lineColor org.nativescript.playvue:lineColor}</code></td><td></td></tr>
     * </table>
     * @see #LineAxis_lineColor
     */
    public static final int[] LineAxis={
      0x7f030164
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#lineColor}
     * attribute's value can be found in the {@link #LineAxis} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:lineColor
     */
    public static final int LineAxis_lineColor=0;
    /**
     * Attributes that can be used with a LinearLayoutCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_baselineAligned android:baselineAligned}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_baselineAlignedChildIndex android:baselineAlignedChildIndex}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_weightSum android:weightSum}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_divider org.nativescript.playvue:divider}</code></td><td>Specifies the drawable used for item dividers.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_dividerPadding org.nativescript.playvue:dividerPadding}</code></td><td>Size of padding on either end of a divider.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_measureWithLargestChild org.nativescript.playvue:measureWithLargestChild}</code></td><td>When set to true, all children with a weight will be considered having
     * the minimum size of the largest child.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_showDividers org.nativescript.playvue:showDividers}</code></td><td>Setting for which dividers to show.</td></tr>
     * </table>
     * @see #LinearLayoutCompat_android_gravity
     * @see #LinearLayoutCompat_android_orientation
     * @see #LinearLayoutCompat_android_baselineAligned
     * @see #LinearLayoutCompat_android_baselineAlignedChildIndex
     * @see #LinearLayoutCompat_android_weightSum
     * @see #LinearLayoutCompat_divider
     * @see #LinearLayoutCompat_dividerPadding
     * @see #LinearLayoutCompat_measureWithLargestChild
     * @see #LinearLayoutCompat_showDividers
     */
    public static final int[] LinearLayoutCompat={
      0x010100af, 0x010100c4, 0x01010126, 0x01010127, 
      0x01010128, 0x7f0300db, 0x7f0300dd, 0x7f030188, 
      0x7f0301e2
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gravity}
     * attribute's value can be found in the {@link #LinearLayoutCompat} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static final int LinearLayoutCompat_android_gravity=0;
    /**
     * <p>
     * @attr description
     * Should the layout be a column or a row?  Use "horizontal"
     * for a row, "vertical" for a column.  The default is
     * horizontal.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int LinearLayoutCompat_android_orientation=1;
    /**
     * <p>
     * @attr description
     * When set to false, prevents the layout from aligning its children's
     * baselines. This attribute is particularly useful when the children
     * use different values for gravity. The default value is true.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:baselineAligned
     */
    public static final int LinearLayoutCompat_android_baselineAligned=2;
    /**
     * <p>
     * @attr description
     * When a linear layout is part of another layout that is baseline
     * aligned, it can specify which of its children to baseline align to
     * (that is, which child TextView).
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:baselineAlignedChildIndex
     */
    public static final int LinearLayoutCompat_android_baselineAlignedChildIndex=3;
    /**
     * <p>
     * @attr description
     * Defines the maximum weight sum. If unspecified, the sum is computed
     * by adding the layout_weight of all of the children. This can be
     * used for instance to give a single child 50% of the total available
     * space by giving it a layout_weight of 0.5 and setting the weightSum
     * to 1.0.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:weightSum
     */
    public static final int LinearLayoutCompat_android_weightSum=4;
    /**
     * <p>
     * @attr description
     * Drawable to use as a vertical divider between buttons.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:divider
     */
    public static final int LinearLayoutCompat_divider=5;
    /**
     * <p>
     * @attr description
     * Size of padding on either end of a divider.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:dividerPadding
     */
    public static final int LinearLayoutCompat_dividerPadding=6;
    /**
     * <p>
     * @attr description
     * When set to true, all children with a weight will be considered having
     * the minimum size of the largest child. If false, all children are
     * measured normally.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:measureWithLargestChild
     */
    public static final int LinearLayoutCompat_measureWithLargestChild=7;
    /**
     * <p>
     * @attr description
     * Setting for which dividers to show.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>beginning</td><td>1</td><td></td></tr>
     * <tr><td>end</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:showDividers
     */
    public static final int LinearLayoutCompat_showDividers=8;
    /**
     * Attributes that can be used with a LinearLayoutCompat_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_width android:layout_width}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_height android:layout_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_weight android:layout_weight}</code></td><td></td></tr>
     * </table>
     * @see #LinearLayoutCompat_Layout_android_layout_gravity
     * @see #LinearLayoutCompat_Layout_android_layout_width
     * @see #LinearLayoutCompat_Layout_android_layout_height
     * @see #LinearLayoutCompat_Layout_android_layout_weight
     */
    public static final int[] LinearLayoutCompat_Layout={
      0x010100b3, 0x010100f4, 0x010100f5, 0x01010181
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int LinearLayoutCompat_Layout_android_layout_gravity=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_width}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_width
     */
    public static final int LinearLayoutCompat_Layout_android_layout_width=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_height}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_height
     */
    public static final int LinearLayoutCompat_Layout_android_layout_height=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_weight}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:layout_weight
     */
    public static final int LinearLayoutCompat_Layout_android_layout_weight=3;
    /**
     * Attributes that can be used with a ListPopupWindow.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ListPopupWindow_android_dropDownHorizontalOffset android:dropDownHorizontalOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPopupWindow_android_dropDownVerticalOffset android:dropDownVerticalOffset}</code></td><td></td></tr>
     * </table>
     * @see #ListPopupWindow_android_dropDownHorizontalOffset
     * @see #ListPopupWindow_android_dropDownVerticalOffset
     */
    public static final int[] ListPopupWindow={
      0x010102ac, 0x010102ad
    };
    /**
     * <p>
     * @attr description
     * Amount of pixels by which the drop down should be offset horizontally.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dropDownHorizontalOffset
     */
    public static final int ListPopupWindow_android_dropDownHorizontalOffset=0;
    /**
     * <p>
     * @attr description
     * Amount of pixels by which the drop down should be offset vertically.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dropDownVerticalOffset
     */
    public static final int ListPopupWindow_android_dropDownVerticalOffset=1;
    /**
     * Attributes that can be used with a LoadingImageView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LoadingImageView_circleCrop org.nativescript.playvue:circleCrop}</code></td><td></td></tr>
     * <tr><td><code>{@link #LoadingImageView_imageAspectRatio org.nativescript.playvue:imageAspectRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #LoadingImageView_imageAspectRatioAdjust org.nativescript.playvue:imageAspectRatioAdjust}</code></td><td></td></tr>
     * </table>
     * @see #LoadingImageView_circleCrop
     * @see #LoadingImageView_imageAspectRatio
     * @see #LoadingImageView_imageAspectRatioAdjust
     */
    public static final int[] LoadingImageView={
      0x7f03009b, 0x7f030130, 0x7f030131
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#circleCrop}
     * attribute's value can be found in the {@link #LoadingImageView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:circleCrop
     */
    public static final int LoadingImageView_circleCrop=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#imageAspectRatio}
     * attribute's value can be found in the {@link #LoadingImageView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:imageAspectRatio
     */
    public static final int LoadingImageView_imageAspectRatio=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#imageAspectRatioAdjust}
     * attribute's value can be found in the {@link #LoadingImageView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>adjust_height</td><td>2</td><td></td></tr>
     * <tr><td>adjust_width</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:imageAspectRatioAdjust
     */
    public static final int LoadingImageView_imageAspectRatioAdjust=2;
    /**
     * Attributes that can be used with a MaterialButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialButton_android_insetLeft android:insetLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_android_insetRight android:insetRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_android_insetTop android:insetTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_android_insetBottom android:insetBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_backgroundTint org.nativescript.playvue:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #MaterialButton_backgroundTintMode org.nativescript.playvue:backgroundTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * <tr><td><code>{@link #MaterialButton_cornerRadius org.nativescript.playvue:cornerRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_icon org.nativescript.playvue:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_iconGravity org.nativescript.playvue:iconGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_iconPadding org.nativescript.playvue:iconPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_iconSize org.nativescript.playvue:iconSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_iconTint org.nativescript.playvue:iconTint}</code></td><td>Tint to apply to the icon.</td></tr>
     * <tr><td><code>{@link #MaterialButton_iconTintMode org.nativescript.playvue:iconTintMode}</code></td><td>Blending mode used to apply the icon tint.</td></tr>
     * <tr><td><code>{@link #MaterialButton_rippleColor org.nativescript.playvue:rippleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_strokeColor org.nativescript.playvue:strokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_strokeWidth org.nativescript.playvue:strokeWidth}</code></td><td></td></tr>
     * </table>
     * @see #MaterialButton_android_insetLeft
     * @see #MaterialButton_android_insetRight
     * @see #MaterialButton_android_insetTop
     * @see #MaterialButton_android_insetBottom
     * @see #MaterialButton_backgroundTint
     * @see #MaterialButton_backgroundTintMode
     * @see #MaterialButton_cornerRadius
     * @see #MaterialButton_icon
     * @see #MaterialButton_iconGravity
     * @see #MaterialButton_iconPadding
     * @see #MaterialButton_iconSize
     * @see #MaterialButton_iconTint
     * @see #MaterialButton_iconTintMode
     * @see #MaterialButton_rippleColor
     * @see #MaterialButton_strokeColor
     * @see #MaterialButton_strokeWidth
     */
    public static final int[] MaterialButton={
      0x010101b7, 0x010101b8, 0x010101b9, 0x010101ba, 
      0x7f030052, 0x7f030053, 0x7f0300cd, 0x7f030127, 
      0x7f030129, 0x7f03012a, 0x7f03012b, 0x7f03012d, 
      0x7f03012e, 0x7f0301c3, 0x7f0301fd, 0x7f0301fe
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetLeft}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetLeft
     */
    public static final int MaterialButton_android_insetLeft=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetRight}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetRight
     */
    public static final int MaterialButton_android_insetRight=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetTop}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetTop
     */
    public static final int MaterialButton_android_insetTop=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetBottom}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetBottom
     */
    public static final int MaterialButton_android_insetBottom=3;
    /**
     * <p>
     * @attr description
     * Tint to apply to the background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:backgroundTint
     */
    public static final int MaterialButton_backgroundTint=4;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:backgroundTintMode
     */
    public static final int MaterialButton_backgroundTintMode=5;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#cornerRadius}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:cornerRadius
     */
    public static final int MaterialButton_cornerRadius=6;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#icon}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:icon
     */
    public static final int MaterialButton_icon=7;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#iconGravity}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>start</td><td>1</td><td></td></tr>
     * <tr><td>textStart</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:iconGravity
     */
    public static final int MaterialButton_iconGravity=8;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#iconPadding}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:iconPadding
     */
    public static final int MaterialButton_iconPadding=9;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#iconSize}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:iconSize
     */
    public static final int MaterialButton_iconSize=10;
    /**
     * <p>
     * @attr description
     * Tint to apply to the icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:iconTint
     */
    public static final int MaterialButton_iconTint=11;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the icon tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:iconTintMode
     */
    public static final int MaterialButton_iconTintMode=12;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#rippleColor}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:rippleColor
     */
    public static final int MaterialButton_rippleColor=13;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#strokeColor}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:strokeColor
     */
    public static final int MaterialButton_strokeColor=14;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#strokeWidth}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:strokeWidth
     */
    public static final int MaterialButton_strokeWidth=15;
    /**
     * Attributes that can be used with a MaterialCardView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialCardView_strokeColor org.nativescript.playvue:strokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCardView_strokeWidth org.nativescript.playvue:strokeWidth}</code></td><td></td></tr>
     * </table>
     * @see #MaterialCardView_strokeColor
     * @see #MaterialCardView_strokeWidth
     */
    public static final int[] MaterialCardView={
      0x7f0301fd, 0x7f0301fe
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#strokeColor}
     * attribute's value can be found in the {@link #MaterialCardView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:strokeColor
     */
    public static final int MaterialCardView_strokeColor=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#strokeWidth}
     * attribute's value can be found in the {@link #MaterialCardView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:strokeWidth
     */
    public static final int MaterialCardView_strokeWidth=1;
    /**
     * Attributes that can be used with a MaterialComponentsTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_bottomSheetDialogTheme org.nativescript.playvue:bottomSheetDialogTheme}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_bottomSheetStyle org.nativescript.playvue:bottomSheetStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_chipGroupStyle org.nativescript.playvue:chipGroupStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_chipStandaloneStyle org.nativescript.playvue:chipStandaloneStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_chipStyle org.nativescript.playvue:chipStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_colorAccent org.nativescript.playvue:colorAccent}</code></td><td>Bright complement to the primary branding color.</td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_colorBackgroundFloating org.nativescript.playvue:colorBackgroundFloating}</code></td><td>Default color of background imagery for floating components, ex.</td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_colorPrimary org.nativescript.playvue:colorPrimary}</code></td><td>The primary branding color for the app.</td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_colorPrimaryDark org.nativescript.playvue:colorPrimaryDark}</code></td><td>Dark variant of the primary branding color.</td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_colorSecondary org.nativescript.playvue:colorSecondary}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_editTextStyle org.nativescript.playvue:editTextStyle}</code></td><td>Default EditText style.</td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_floatingActionButtonStyle org.nativescript.playvue:floatingActionButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_materialButtonStyle org.nativescript.playvue:materialButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_materialCardViewStyle org.nativescript.playvue:materialCardViewStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_navigationViewStyle org.nativescript.playvue:navigationViewStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_scrimBackground org.nativescript.playvue:scrimBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_snackbarButtonStyle org.nativescript.playvue:snackbarButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_tabStyle org.nativescript.playvue:tabStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_textAppearanceBody1 org.nativescript.playvue:textAppearanceBody1}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_textAppearanceBody2 org.nativescript.playvue:textAppearanceBody2}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_textAppearanceButton org.nativescript.playvue:textAppearanceButton}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_textAppearanceCaption org.nativescript.playvue:textAppearanceCaption}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_textAppearanceHeadline1 org.nativescript.playvue:textAppearanceHeadline1}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_textAppearanceHeadline2 org.nativescript.playvue:textAppearanceHeadline2}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_textAppearanceHeadline3 org.nativescript.playvue:textAppearanceHeadline3}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_textAppearanceHeadline4 org.nativescript.playvue:textAppearanceHeadline4}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_textAppearanceHeadline5 org.nativescript.playvue:textAppearanceHeadline5}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_textAppearanceHeadline6 org.nativescript.playvue:textAppearanceHeadline6}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_textAppearanceOverline org.nativescript.playvue:textAppearanceOverline}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_textAppearanceSubtitle1 org.nativescript.playvue:textAppearanceSubtitle1}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_textAppearanceSubtitle2 org.nativescript.playvue:textAppearanceSubtitle2}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_textInputStyle org.nativescript.playvue:textInputStyle}</code></td><td></td></tr>
     * </table>
     * @see #MaterialComponentsTheme_bottomSheetDialogTheme
     * @see #MaterialComponentsTheme_bottomSheetStyle
     * @see #MaterialComponentsTheme_chipGroupStyle
     * @see #MaterialComponentsTheme_chipStandaloneStyle
     * @see #MaterialComponentsTheme_chipStyle
     * @see #MaterialComponentsTheme_colorAccent
     * @see #MaterialComponentsTheme_colorBackgroundFloating
     * @see #MaterialComponentsTheme_colorPrimary
     * @see #MaterialComponentsTheme_colorPrimaryDark
     * @see #MaterialComponentsTheme_colorSecondary
     * @see #MaterialComponentsTheme_editTextStyle
     * @see #MaterialComponentsTheme_floatingActionButtonStyle
     * @see #MaterialComponentsTheme_materialButtonStyle
     * @see #MaterialComponentsTheme_materialCardViewStyle
     * @see #MaterialComponentsTheme_navigationViewStyle
     * @see #MaterialComponentsTheme_scrimBackground
     * @see #MaterialComponentsTheme_snackbarButtonStyle
     * @see #MaterialComponentsTheme_tabStyle
     * @see #MaterialComponentsTheme_textAppearanceBody1
     * @see #MaterialComponentsTheme_textAppearanceBody2
     * @see #MaterialComponentsTheme_textAppearanceButton
     * @see #MaterialComponentsTheme_textAppearanceCaption
     * @see #MaterialComponentsTheme_textAppearanceHeadline1
     * @see #MaterialComponentsTheme_textAppearanceHeadline2
     * @see #MaterialComponentsTheme_textAppearanceHeadline3
     * @see #MaterialComponentsTheme_textAppearanceHeadline4
     * @see #MaterialComponentsTheme_textAppearanceHeadline5
     * @see #MaterialComponentsTheme_textAppearanceHeadline6
     * @see #MaterialComponentsTheme_textAppearanceOverline
     * @see #MaterialComponentsTheme_textAppearanceSubtitle1
     * @see #MaterialComponentsTheme_textAppearanceSubtitle2
     * @see #MaterialComponentsTheme_textInputStyle
     */
    public static final int[] MaterialComponentsTheme={
      0x7f03005f, 0x7f030060, 0x7f03008c, 0x7f030096, 
      0x7f03009a, 0x7f0300af, 0x7f0300b0, 0x7f0300b6, 
      0x7f0300b7, 0x7f0300b9, 0x7f0300e5, 0x7f030106, 
      0x7f030180, 0x7f030181, 0x7f030194, 0x7f0301d5, 
      0x7f0301eb, 0x7f030224, 0x7f030229, 0x7f03022a, 
      0x7f03022b, 0x7f03022c, 0x7f03022d, 0x7f03022e, 
      0x7f03022f, 0x7f030230, 0x7f030231, 0x7f030232, 
      0x7f030237, 0x7f03023c, 0x7f03023d, 0x7f030241
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#bottomSheetDialogTheme}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:bottomSheetDialogTheme
     */
    public static final int MaterialComponentsTheme_bottomSheetDialogTheme=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#bottomSheetStyle}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:bottomSheetStyle
     */
    public static final int MaterialComponentsTheme_bottomSheetStyle=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#chipGroupStyle}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:chipGroupStyle
     */
    public static final int MaterialComponentsTheme_chipGroupStyle=2;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#chipStandaloneStyle}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:chipStandaloneStyle
     */
    public static final int MaterialComponentsTheme_chipStandaloneStyle=3;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#chipStyle}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:chipStyle
     */
    public static final int MaterialComponentsTheme_chipStyle=4;
    /**
     * <p>
     * @attr description
     * Bright complement to the primary branding color. By default, this is the color applied
     * to framework controls (via colorControlActivated).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:colorAccent
     */
    public static final int MaterialComponentsTheme_colorAccent=5;
    /**
     * <p>
     * @attr description
     * Default color of background imagery for floating components, ex. dialogs, popups, and cards.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:colorBackgroundFloating
     */
    public static final int MaterialComponentsTheme_colorBackgroundFloating=6;
    /**
     * <p>
     * @attr description
     * The primary branding color for the app. By default, this is the color applied to the
     * action bar background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:colorPrimary
     */
    public static final int MaterialComponentsTheme_colorPrimary=7;
    /**
     * <p>
     * @attr description
     * Dark variant of the primary branding color. By default, this is the color applied to
     * the status bar (via statusBarColor) and navigation bar (via navigationBarColor).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:colorPrimaryDark
     */
    public static final int MaterialComponentsTheme_colorPrimaryDark=8;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#colorSecondary}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:colorSecondary
     */
    public static final int MaterialComponentsTheme_colorSecondary=9;
    /**
     * <p>
     * @attr description
     * Default EditText style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:editTextStyle
     */
    public static final int MaterialComponentsTheme_editTextStyle=10;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#floatingActionButtonStyle}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name org.nativescript.playvue:floatingActionButtonStyle
     */
    public static final int MaterialComponentsTheme_floatingActionButtonStyle=11;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#materialButtonStyle}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:materialButtonStyle
     */
    public static final int MaterialComponentsTheme_materialButtonStyle=12;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#materialCardViewStyle}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:materialCardViewStyle
     */
    public static final int MaterialComponentsTheme_materialCardViewStyle=13;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#navigationViewStyle}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:navigationViewStyle
     */
    public static final int MaterialComponentsTheme_navigationViewStyle=14;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#scrimBackground}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:scrimBackground
     */
    public static final int MaterialComponentsTheme_scrimBackground=15;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#snackbarButtonStyle}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:snackbarButtonStyle
     */
    public static final int MaterialComponentsTheme_snackbarButtonStyle=16;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#tabStyle}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:tabStyle
     */
    public static final int MaterialComponentsTheme_tabStyle=17;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#textAppearanceBody1}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:textAppearanceBody1
     */
    public static final int MaterialComponentsTheme_textAppearanceBody1=18;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#textAppearanceBody2}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:textAppearanceBody2
     */
    public static final int MaterialComponentsTheme_textAppearanceBody2=19;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#textAppearanceButton}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:textAppearanceButton
     */
    public static final int MaterialComponentsTheme_textAppearanceButton=20;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#textAppearanceCaption}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:textAppearanceCaption
     */
    public static final int MaterialComponentsTheme_textAppearanceCaption=21;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#textAppearanceHeadline1}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:textAppearanceHeadline1
     */
    public static final int MaterialComponentsTheme_textAppearanceHeadline1=22;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#textAppearanceHeadline2}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:textAppearanceHeadline2
     */
    public static final int MaterialComponentsTheme_textAppearanceHeadline2=23;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#textAppearanceHeadline3}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:textAppearanceHeadline3
     */
    public static final int MaterialComponentsTheme_textAppearanceHeadline3=24;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#textAppearanceHeadline4}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:textAppearanceHeadline4
     */
    public static final int MaterialComponentsTheme_textAppearanceHeadline4=25;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#textAppearanceHeadline5}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:textAppearanceHeadline5
     */
    public static final int MaterialComponentsTheme_textAppearanceHeadline5=26;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#textAppearanceHeadline6}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:textAppearanceHeadline6
     */
    public static final int MaterialComponentsTheme_textAppearanceHeadline6=27;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#textAppearanceOverline}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:textAppearanceOverline
     */
    public static final int MaterialComponentsTheme_textAppearanceOverline=28;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#textAppearanceSubtitle1}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:textAppearanceSubtitle1
     */
    public static final int MaterialComponentsTheme_textAppearanceSubtitle1=29;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#textAppearanceSubtitle2}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:textAppearanceSubtitle2
     */
    public static final int MaterialComponentsTheme_textAppearanceSubtitle2=30;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#textInputStyle}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:textInputStyle
     */
    public static final int MaterialComponentsTheme_textInputStyle=31;
    /**
     * Attributes that can be used with a MenuGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuGroup_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_menuCategory android:menuCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_orderInCategory android:orderInCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_checkableBehavior android:checkableBehavior}</code></td><td></td></tr>
     * </table>
     * @see #MenuGroup_android_enabled
     * @see #MenuGroup_android_id
     * @see #MenuGroup_android_visible
     * @see #MenuGroup_android_menuCategory
     * @see #MenuGroup_android_orderInCategory
     * @see #MenuGroup_android_checkableBehavior
     */
    public static final int[] MenuGroup={
      0x0101000e, 0x010100d0, 0x01010194, 0x010101de, 
      0x010101df, 0x010101e0
    };
    /**
     * <p>
     * @attr description
     * Whether the items are enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int MenuGroup_android_enabled=0;
    /**
     * <p>
     * @attr description
     * The ID of the group.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int MenuGroup_android_id=1;
    /**
     * <p>
     * @attr description
     * Whether the items are shown/visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int MenuGroup_android_visible=2;
    /**
     * <p>
     * @attr description
     * The category applied to all items within this group.
     * (This will be or'ed with the orderInCategory attribute.)
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alternative</td><td>40000</td><td></td></tr>
     * <tr><td>container</td><td>10000</td><td></td></tr>
     * <tr><td>secondary</td><td>30000</td><td></td></tr>
     * <tr><td>system</td><td>20000</td><td></td></tr>
     * </table>
     *
     * @attr name android:menuCategory
     */
    public static final int MenuGroup_android_menuCategory=3;
    /**
     * <p>
     * @attr description
     * The order within the category applied to all items within this group.
     * (This will be or'ed with the category attribute.)
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:orderInCategory
     */
    public static final int MenuGroup_android_orderInCategory=4;
    /**
     * <p>
     * @attr description
     * Whether the items are capable of displaying a check mark.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>single</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:checkableBehavior
     */
    public static final int MenuGroup_android_checkableBehavior=5;
    /**
     * Attributes that can be used with a MenuItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuItem_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_checked android:checked}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_menuCategory android:menuCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_orderInCategory android:orderInCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_title android:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_titleCondensed android:titleCondensed}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_alphabeticShortcut android:alphabeticShortcut}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_numericShortcut android:numericShortcut}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_checkable android:checkable}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_onClick android:onClick}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_actionLayout org.nativescript.playvue:actionLayout}</code></td><td>An optional layout to be used as an action view.</td></tr>
     * <tr><td><code>{@link #MenuItem_actionProviderClass org.nativescript.playvue:actionProviderClass}</code></td><td>The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.</td></tr>
     * <tr><td><code>{@link #MenuItem_actionViewClass org.nativescript.playvue:actionViewClass}</code></td><td>The name of an optional View class to instantiate and use as an
     * action view.</td></tr>
     * <tr><td><code>{@link #MenuItem_alphabeticModifiers org.nativescript.playvue:alphabeticModifiers}</code></td><td>The alphabetic modifier key.</td></tr>
     * <tr><td><code>{@link #MenuItem_contentDescription org.nativescript.playvue:contentDescription}</code></td><td>The content description associated with the item.</td></tr>
     * <tr><td><code>{@link #MenuItem_iconTint org.nativescript.playvue:iconTint}</code></td><td>Tint to apply to the icon.</td></tr>
     * <tr><td><code>{@link #MenuItem_iconTintMode org.nativescript.playvue:iconTintMode}</code></td><td>Blending mode used to apply the icon tint.</td></tr>
     * <tr><td><code>{@link #MenuItem_numericModifiers org.nativescript.playvue:numericModifiers}</code></td><td>The numeric modifier key.</td></tr>
     * <tr><td><code>{@link #MenuItem_showAsAction org.nativescript.playvue:showAsAction}</code></td><td>How this item should display in the Action Bar, if present.</td></tr>
     * <tr><td><code>{@link #MenuItem_tooltipText org.nativescript.playvue:tooltipText}</code></td><td>The tooltip text associated with the item.</td></tr>
     * </table>
     * @see #MenuItem_android_icon
     * @see #MenuItem_android_enabled
     * @see #MenuItem_android_id
     * @see #MenuItem_android_checked
     * @see #MenuItem_android_visible
     * @see #MenuItem_android_menuCategory
     * @see #MenuItem_android_orderInCategory
     * @see #MenuItem_android_title
     * @see #MenuItem_android_titleCondensed
     * @see #MenuItem_android_alphabeticShortcut
     * @see #MenuItem_android_numericShortcut
     * @see #MenuItem_android_checkable
     * @see #MenuItem_android_onClick
     * @see #MenuItem_actionLayout
     * @see #MenuItem_actionProviderClass
     * @see #MenuItem_actionViewClass
     * @see #MenuItem_alphabeticModifiers
     * @see #MenuItem_contentDescription
     * @see #MenuItem_iconTint
     * @see #MenuItem_iconTintMode
     * @see #MenuItem_numericModifiers
     * @see #MenuItem_showAsAction
     * @see #MenuItem_tooltipText
     */
    public static final int[] MenuItem={
      0x01010002, 0x0101000e, 0x010100d0, 0x01010106, 
      0x01010194, 0x010101de, 0x010101df, 0x010101e1, 
      0x010101e2, 0x010101e3, 0x010101e4, 0x010101e5, 
      0x0101026f, 0x7f03001f, 0x7f030031, 0x7f030032, 
      0x7f03003d, 0x7f0300be, 0x7f03012d, 0x7f03012e, 
      0x7f030195, 0x7f0301df, 0x7f030264
    };
    /**
     * <p>
     * @attr description
     * The icon associated with this item.  This icon will not always be shown, so
     * the title should be sufficient in describing this item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int MenuItem_android_icon=0;
    /**
     * <p>
     * @attr description
     * Whether the item is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int MenuItem_android_enabled=1;
    /**
     * <p>
     * @attr description
     * The ID of the item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int MenuItem_android_id=2;
    /**
     * <p>
     * @attr description
     * Whether the item is checked.  Note that you must first have enabled checking with
     * the checkable attribute or else the check mark will not appear.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checked
     */
    public static final int MenuItem_android_checked=3;
    /**
     * <p>
     * @attr description
     * Whether the item is shown/visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int MenuItem_android_visible=4;
    /**
     * <p>
     * @attr description
     * The category applied to the item.
     * (This will be or'ed with the orderInCategory attribute.)
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alternative</td><td>40000</td><td></td></tr>
     * <tr><td>container</td><td>10000</td><td></td></tr>
     * <tr><td>secondary</td><td>30000</td><td></td></tr>
     * <tr><td>system</td><td>20000</td><td></td></tr>
     * </table>
     *
     * @attr name android:menuCategory
     */
    public static final int MenuItem_android_menuCategory=5;
    /**
     * <p>
     * @attr description
     * The order within the category applied to the item.
     * (This will be or'ed with the category attribute.)
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:orderInCategory
     */
    public static final int MenuItem_android_orderInCategory=6;
    /**
     * <p>
     * @attr description
     * The title associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:title
     */
    public static final int MenuItem_android_title=7;
    /**
     * <p>
     * @attr description
     * The condensed title associated with the item.  This is used in situations where the
     * normal title may be too long to be displayed.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:titleCondensed
     */
    public static final int MenuItem_android_titleCondensed=8;
    /**
     * <p>
     * @attr description
     * The alphabetic shortcut key.  This is the shortcut when using a keyboard
     * with alphabetic keys.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:alphabeticShortcut
     */
    public static final int MenuItem_android_alphabeticShortcut=9;
    /**
     * <p>
     * @attr description
     * The numeric shortcut key.  This is the shortcut when using a numeric (e.g., 12-key)
     * keyboard.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:numericShortcut
     */
    public static final int MenuItem_android_numericShortcut=10;
    /**
     * <p>
     * @attr description
     * Whether the item is capable of displaying a check mark.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checkable
     */
    public static final int MenuItem_android_checkable=11;
    /**
     * <p>
     * @attr description
     * Name of a method on the Context used to inflate the menu that will be
     * called when the item is clicked.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:onClick
     */
    public static final int MenuItem_android_onClick=12;
    /**
     * <p>
     * @attr description
     * An optional layout to be used as an action view.
     * See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actionLayout
     */
    public static final int MenuItem_actionLayout=13;
    /**
     * <p>
     * @attr description
     * The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.
     * See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
     * for more info.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:actionProviderClass
     */
    public static final int MenuItem_actionProviderClass=14;
    /**
     * <p>
     * @attr description
     * The name of an optional View class to instantiate and use as an
     * action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:actionViewClass
     */
    public static final int MenuItem_actionViewClass=15;
    /**
     * <p>
     * @attr description
     * The alphabetic modifier key. This is the modifier when using a keyboard
     * with alphabetic keys. The values should be kept in sync with KeyEvent
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:alphabeticModifiers
     */
    public static final int MenuItem_alphabeticModifiers=16;
    /**
     * <p>
     * @attr description
     * The content description associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:contentDescription
     */
    public static final int MenuItem_contentDescription=17;
    /**
     * <p>
     * @attr description
     * Tint to apply to the icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:iconTint
     */
    public static final int MenuItem_iconTint=18;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the icon tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:iconTintMode
     */
    public static final int MenuItem_iconTintMode=19;
    /**
     * <p>
     * @attr description
     * The numeric modifier key. This is the modifier when using a numeric (e.g., 12-key)
     * keyboard. The values should be kept in sync with KeyEvent
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:numericModifiers
     */
    public static final int MenuItem_numericModifiers=20;
    /**
     * <p>
     * @attr description
     * How this item should display in the Action Bar, if present.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>always</td><td>2</td><td>Always show this item in an actionbar, even if it would override
     * the system's limits of how much stuff to put there. This may make
     * your action bar look bad on some screens. In most cases you should
     * use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never".</td></tr>
     * <tr><td>collapseActionView</td><td>8</td><td>This item's action view collapses to a normal menu
     * item. When expanded, the action view takes over a
     * larger segment of its container.</td></tr>
     * <tr><td>ifRoom</td><td>1</td><td>Show this item in an action bar if there is room for it as determined
     * by the system. Favor this option over "always" where possible.
     * Mutually exclusive with "never" and "always".</td></tr>
     * <tr><td>never</td><td>0</td><td>Never show this item in an action bar, show it in the overflow menu instead.
     * Mutually exclusive with "ifRoom" and "always".</td></tr>
     * <tr><td>withText</td><td>4</td><td>When this item is shown as an action in the action bar, show a text
     * label with it even if it has an icon representation.</td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:showAsAction
     */
    public static final int MenuItem_showAsAction=21;
    /**
     * <p>
     * @attr description
     * The tooltip text associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:tooltipText
     */
    public static final int MenuItem_tooltipText=22;
    /**
     * Attributes that can be used with a MenuView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuView_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemTextAppearance android:itemTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_horizontalDivider android:horizontalDivider}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_verticalDivider android:verticalDivider}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_headerBackground android:headerBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemBackground android:itemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemIconDisabledAlpha android:itemIconDisabledAlpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_preserveIconSpacing org.nativescript.playvue:preserveIconSpacing}</code></td><td>Whether space should be reserved in layout when an icon is missing.</td></tr>
     * <tr><td><code>{@link #MenuView_subMenuArrow org.nativescript.playvue:subMenuArrow}</code></td><td>Drawable for the arrow icon indicating a particular item is a submenu.</td></tr>
     * </table>
     * @see #MenuView_android_windowAnimationStyle
     * @see #MenuView_android_itemTextAppearance
     * @see #MenuView_android_horizontalDivider
     * @see #MenuView_android_verticalDivider
     * @see #MenuView_android_headerBackground
     * @see #MenuView_android_itemBackground
     * @see #MenuView_android_itemIconDisabledAlpha
     * @see #MenuView_preserveIconSpacing
     * @see #MenuView_subMenuArrow
     */
    public static final int[] MenuView={
      0x010100ae, 0x0101012c, 0x0101012d, 0x0101012e, 
      0x0101012f, 0x01010130, 0x01010131, 0x7f0301b0, 
      0x7f030200
    };
    /**
     * <p>
     * @attr description
     * Default animations for the menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:windowAnimationStyle
     */
    public static final int MenuView_android_windowAnimationStyle=0;
    /**
     * <p>
     * @attr description
     * Default appearance of menu item text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:itemTextAppearance
     */
    public static final int MenuView_android_itemTextAppearance=1;
    /**
     * <p>
     * @attr description
     * Default horizontal divider between rows of menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:horizontalDivider
     */
    public static final int MenuView_android_horizontalDivider=2;
    /**
     * <p>
     * @attr description
     * Default vertical divider between menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:verticalDivider
     */
    public static final int MenuView_android_verticalDivider=3;
    /**
     * <p>
     * @attr description
     * Default background for the menu header.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:headerBackground
     */
    public static final int MenuView_android_headerBackground=4;
    /**
     * <p>
     * @attr description
     * Default background for each menu item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:itemBackground
     */
    public static final int MenuView_android_itemBackground=5;
    /**
     * <p>
     * @attr description
     * Default disabled icon alpha for each menu item that shows an icon.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:itemIconDisabledAlpha
     */
    public static final int MenuView_android_itemIconDisabledAlpha=6;
    /**
     * <p>
     * @attr description
     * Whether space should be reserved in layout when an icon is missing.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:preserveIconSpacing
     */
    public static final int MenuView_preserveIconSpacing=7;
    /**
     * <p>
     * @attr description
     * Drawable for the arrow icon indicating a particular item is a submenu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:subMenuArrow
     */
    public static final int MenuView_subMenuArrow=8;
    /**
     * Attributes that can be used with a NavigationView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #NavigationView_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_android_fitsSystemWindows android:fitsSystemWindows}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_elevation org.nativescript.playvue:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #NavigationView_headerLayout org.nativescript.playvue:headerLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemBackground org.nativescript.playvue:itemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemHorizontalPadding org.nativescript.playvue:itemHorizontalPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemIconPadding org.nativescript.playvue:itemIconPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemIconTint org.nativescript.playvue:itemIconTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemTextAppearance org.nativescript.playvue:itemTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemTextColor org.nativescript.playvue:itemTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_menu org.nativescript.playvue:menu}</code></td><td></td></tr>
     * </table>
     * @see #NavigationView_android_background
     * @see #NavigationView_android_fitsSystemWindows
     * @see #NavigationView_android_maxWidth
     * @see #NavigationView_elevation
     * @see #NavigationView_headerLayout
     * @see #NavigationView_itemBackground
     * @see #NavigationView_itemHorizontalPadding
     * @see #NavigationView_itemIconPadding
     * @see #NavigationView_itemIconTint
     * @see #NavigationView_itemTextAppearance
     * @see #NavigationView_itemTextColor
     * @see #NavigationView_menu
     */
    public static final int[] NavigationView={
      0x010100d4, 0x010100dd, 0x0101011f, 0x7f0300e6, 
      0x7f030116, 0x7f030138, 0x7f030139, 0x7f03013b, 
      0x7f03013d, 0x7f030140, 0x7f030143, 0x7f030189
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int NavigationView_android_background=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fitsSystemWindows}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:fitsSystemWindows
     */
    public static final int NavigationView_android_fitsSystemWindows=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int NavigationView_android_maxWidth=2;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:elevation
     */
    public static final int NavigationView_elevation=3;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#headerLayout}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:headerLayout
     */
    public static final int NavigationView_headerLayout=4;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#itemBackground}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:itemBackground
     */
    public static final int NavigationView_itemBackground=5;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#itemHorizontalPadding}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:itemHorizontalPadding
     */
    public static final int NavigationView_itemHorizontalPadding=6;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#itemIconPadding}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:itemIconPadding
     */
    public static final int NavigationView_itemIconPadding=7;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#itemIconTint}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:itemIconTint
     */
    public static final int NavigationView_itemIconTint=8;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#itemTextAppearance}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:itemTextAppearance
     */
    public static final int NavigationView_itemTextAppearance=9;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#itemTextColor}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:itemTextColor
     */
    public static final int NavigationView_itemTextColor=10;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#menu}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:menu
     */
    public static final int NavigationView_menu=11;
    /**
     * Attributes that can be used with a PointerLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PointerLayout_pointerFill org.nativescript.playvue:pointerFill}</code></td><td></td></tr>
     * <tr><td><code>{@link #PointerLayout_pointerMargin org.nativescript.playvue:pointerMargin}</code></td><td></td></tr>
     * <tr><td><code>{@link #PointerLayout_pointerSize org.nativescript.playvue:pointerSize}</code></td><td></td></tr>
     * </table>
     * @see #PointerLayout_pointerFill
     * @see #PointerLayout_pointerMargin
     * @see #PointerLayout_pointerSize
     */
    public static final int[] PointerLayout={
      0x7f0301aa, 0x7f0301ab, 0x7f0301ac
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#pointerFill}
     * attribute's value can be found in the {@link #PointerLayout} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:pointerFill
     */
    public static final int PointerLayout_pointerFill=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#pointerMargin}
     * attribute's value can be found in the {@link #PointerLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:pointerMargin
     */
    public static final int PointerLayout_pointerMargin=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#pointerSize}
     * attribute's value can be found in the {@link #PointerLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:pointerSize
     */
    public static final int PointerLayout_pointerSize=2;
    /**
     * Attributes that can be used with a PopupWindow.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PopupWindow_android_popupBackground android:popupBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #PopupWindow_android_popupAnimationStyle android:popupAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #PopupWindow_overlapAnchor org.nativescript.playvue:overlapAnchor}</code></td><td>Whether the popup window should overlap its anchor view.</td></tr>
     * </table>
     * @see #PopupWindow_android_popupBackground
     * @see #PopupWindow_android_popupAnimationStyle
     * @see #PopupWindow_overlapAnchor
     */
    public static final int[] PopupWindow={
      0x01010176, 0x010102c9, 0x7f030197
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#popupBackground}
     * attribute's value can be found in the {@link #PopupWindow} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:popupBackground
     */
    public static final int PopupWindow_android_popupBackground=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#popupAnimationStyle}
     * attribute's value can be found in the {@link #PopupWindow} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:popupAnimationStyle
     */
    public static final int PopupWindow_android_popupAnimationStyle=1;
    /**
     * <p>
     * @attr description
     * Whether the popup window should overlap its anchor view.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:overlapAnchor
     */
    public static final int PopupWindow_overlapAnchor=2;
    /**
     * Attributes that can be used with a PopupWindowBackgroundState.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PopupWindowBackgroundState_state_above_anchor org.nativescript.playvue:state_above_anchor}</code></td><td>State identifier indicating the popup will be above the anchor.</td></tr>
     * </table>
     * @see #PopupWindowBackgroundState_state_above_anchor
     */
    public static final int[] PopupWindowBackgroundState={
      0x7f0301f5
    };
    /**
     * <p>
     * @attr description
     * State identifier indicating the popup will be above the anchor.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:state_above_anchor
     */
    public static final int PopupWindowBackgroundState_state_above_anchor=0;
    /**
     * Attributes that can be used with a RadCalendarView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RadCalendarView_calendarBackground org.nativescript.playvue:calendarBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #RadCalendarView_displayMode org.nativescript.playvue:displayMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #RadCalendarView_isYearModeCompact org.nativescript.playvue:isYearModeCompact}</code></td><td></td></tr>
     * <tr><td><code>{@link #RadCalendarView_selectionMode org.nativescript.playvue:selectionMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #RadCalendarView_showCellDecorations org.nativescript.playvue:showCellDecorations}</code></td><td></td></tr>
     * <tr><td><code>{@link #RadCalendarView_showDayNames org.nativescript.playvue:showDayNames}</code></td><td></td></tr>
     * <tr><td><code>{@link #RadCalendarView_showGridLines org.nativescript.playvue:showGridLines}</code></td><td></td></tr>
     * <tr><td><code>{@link #RadCalendarView_tkShowTitle org.nativescript.playvue:tkShowTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #RadCalendarView_weekNumberDisplayMode org.nativescript.playvue:weekNumberDisplayMode}</code></td><td></td></tr>
     * </table>
     * @see #RadCalendarView_calendarBackground
     * @see #RadCalendarView_displayMode
     * @see #RadCalendarView_isYearModeCompact
     * @see #RadCalendarView_selectionMode
     * @see #RadCalendarView_showCellDecorations
     * @see #RadCalendarView_showDayNames
     * @see #RadCalendarView_showGridLines
     * @see #RadCalendarView_tkShowTitle
     * @see #RadCalendarView_weekNumberDisplayMode
     */
    public static final int[] RadCalendarView={
      0x7f030078, 0x7f0300d9, 0x7f030137, 0x7f0301de, 
      0x7f0301e0, 0x7f0301e1, 0x7f0301e3, 0x7f03025e, 
      0x7f030272
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#calendarBackground}
     * attribute's value can be found in the {@link #RadCalendarView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:calendarBackground
     */
    public static final int RadCalendarView_calendarBackground=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#displayMode}
     * attribute's value can be found in the {@link #RadCalendarView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Month</td><td>0</td><td></td></tr>
     * <tr><td>Week</td><td>2</td><td></td></tr>
     * <tr><td>Year</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:displayMode
     */
    public static final int RadCalendarView_displayMode=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#isYearModeCompact}
     * attribute's value can be found in the {@link #RadCalendarView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:isYearModeCompact
     */
    public static final int RadCalendarView_isYearModeCompact=2;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#selectionMode}
     * attribute's value can be found in the {@link #RadCalendarView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Multiple</td><td>2</td><td></td></tr>
     * <tr><td>Range</td><td>1</td><td></td></tr>
     * <tr><td>Single</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:selectionMode
     */
    public static final int RadCalendarView_selectionMode=3;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#showCellDecorations}
     * attribute's value can be found in the {@link #RadCalendarView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:showCellDecorations
     */
    public static final int RadCalendarView_showCellDecorations=4;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#showDayNames}
     * attribute's value can be found in the {@link #RadCalendarView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:showDayNames
     */
    public static final int RadCalendarView_showDayNames=5;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#showGridLines}
     * attribute's value can be found in the {@link #RadCalendarView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:showGridLines
     */
    public static final int RadCalendarView_showGridLines=6;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#tkShowTitle}
     * attribute's value can be found in the {@link #RadCalendarView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:tkShowTitle
     */
    public static final int RadCalendarView_tkShowTitle=7;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#weekNumberDisplayMode}
     * attribute's value can be found in the {@link #RadCalendarView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Block</td><td>2</td><td></td></tr>
     * <tr><td>Inline</td><td>1</td><td></td></tr>
     * <tr><td>None</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:weekNumberDisplayMode
     */
    public static final int RadCalendarView_weekNumberDisplayMode=8;
    /**
     * Attributes that can be used with a RadChartViewBase.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RadChartViewBase_chartZoom org.nativescript.playvue:chartZoom}</code></td><td></td></tr>
     * <tr><td><code>{@link #RadChartViewBase_clipToBounds org.nativescript.playvue:clipToBounds}</code></td><td></td></tr>
     * <tr><td><code>{@link #RadChartViewBase_emptyContent org.nativescript.playvue:emptyContent}</code></td><td></td></tr>
     * <tr><td><code>{@link #RadChartViewBase_maxZoom org.nativescript.playvue:maxZoom}</code></td><td></td></tr>
     * <tr><td><code>{@link #RadChartViewBase_palette org.nativescript.playvue:palette}</code></td><td></td></tr>
     * <tr><td><code>{@link #RadChartViewBase_pan org.nativescript.playvue:pan}</code></td><td></td></tr>
     * </table>
     * @see #RadChartViewBase_chartZoom
     * @see #RadChartViewBase_clipToBounds
     * @see #RadChartViewBase_emptyContent
     * @see #RadChartViewBase_maxZoom
     * @see #RadChartViewBase_palette
     * @see #RadChartViewBase_pan
     */
    public static final int[] RadChartViewBase={
      0x7f030082, 0x7f0300a0, 0x7f0300e7, 0x7f030185, 
      0x7f03019d, 0x7f03019e
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#chartZoom}
     * attribute's value can be found in the {@link #RadChartViewBase} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:chartZoom
     */
    public static final int RadChartViewBase_chartZoom=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#clipToBounds}
     * attribute's value can be found in the {@link #RadChartViewBase} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:clipToBounds
     */
    public static final int RadChartViewBase_clipToBounds=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#emptyContent}
     * attribute's value can be found in the {@link #RadChartViewBase} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:emptyContent
     */
    public static final int RadChartViewBase_emptyContent=2;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#maxZoom}
     * attribute's value can be found in the {@link #RadChartViewBase} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:maxZoom
     */
    public static final int RadChartViewBase_maxZoom=3;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#palette}
     * attribute's value can be found in the {@link #RadChartViewBase} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:palette
     */
    public static final int RadChartViewBase_palette=4;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#pan}
     * attribute's value can be found in the {@link #RadChartViewBase} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:pan
     */
    public static final int RadChartViewBase_pan=5;
    /**
     * Attributes that can be used with a RadGaugeView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RadGaugeView_fillColor org.nativescript.playvue:fillColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #RadGaugeView_subtitleHorizontalOffset org.nativescript.playvue:subtitleHorizontalOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #RadGaugeView_subtitleVerticalOffset org.nativescript.playvue:subtitleVerticalOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #RadGaugeView_titleHorizontalOffset org.nativescript.playvue:titleHorizontalOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #RadGaugeView_titleVerticalOffset org.nativescript.playvue:titleVerticalOffset}</code></td><td></td></tr>
     * </table>
     * @see #RadGaugeView_fillColor
     * @see #RadGaugeView_subtitleHorizontalOffset
     * @see #RadGaugeView_subtitleVerticalOffset
     * @see #RadGaugeView_titleHorizontalOffset
     * @see #RadGaugeView_titleVerticalOffset
     */
    public static final int[] RadGaugeView={
      0x7f030103, 0x7f030203, 0x7f030207, 0x7f030253, 
      0x7f03025d
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#fillColor}
     * attribute's value can be found in the {@link #RadGaugeView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:fillColor
     */
    public static final int RadGaugeView_fillColor=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#subtitleHorizontalOffset}
     * attribute's value can be found in the {@link #RadGaugeView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name org.nativescript.playvue:subtitleHorizontalOffset
     */
    public static final int RadGaugeView_subtitleHorizontalOffset=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#subtitleVerticalOffset}
     * attribute's value can be found in the {@link #RadGaugeView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name org.nativescript.playvue:subtitleVerticalOffset
     */
    public static final int RadGaugeView_subtitleVerticalOffset=2;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#titleHorizontalOffset}
     * attribute's value can be found in the {@link #RadGaugeView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name org.nativescript.playvue:titleHorizontalOffset
     */
    public static final int RadGaugeView_titleHorizontalOffset=3;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#titleVerticalOffset}
     * attribute's value can be found in the {@link #RadGaugeView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name org.nativescript.playvue:titleVerticalOffset
     */
    public static final int RadGaugeView_titleVerticalOffset=4;
    /**
     * Attributes that can be used with a RadScrollView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RadScrollView_fillViewport org.nativescript.playvue:fillViewport}</code></td><td></td></tr>
     * <tr><td><code>{@link #RadScrollView_scrollMode org.nativescript.playvue:scrollMode}</code></td><td></td></tr>
     * </table>
     * @see #RadScrollView_fillViewport
     * @see #RadScrollView_scrollMode
     */
    public static final int[] RadScrollView={
      0x7f030104, 0x7f0301d7
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#fillViewport}
     * attribute's value can be found in the {@link #RadScrollView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:fillViewport
     */
    public static final int RadScrollView_fillViewport=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#scrollMode}
     * attribute's value can be found in the {@link #RadScrollView} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>both</td><td>3</td><td></td></tr>
     * <tr><td>horizontal</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:scrollMode
     */
    public static final int RadScrollView_scrollMode=1;
    /**
     * Attributes that can be used with a RadScrollViewTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RadScrollViewTheme_radScrollViewStyle org.nativescript.playvue:radScrollViewStyle}</code></td><td></td></tr>
     * </table>
     * @see #RadScrollViewTheme_radScrollViewStyle
     */
    public static final int[] RadScrollViewTheme={
      0x7f0301ba
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#radScrollViewStyle}
     * attribute's value can be found in the {@link #RadScrollViewTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:radScrollViewStyle
     */
    public static final int RadScrollViewTheme_radScrollViewStyle=0;
    /**
     * Attributes that can be used with a RangeBarSeries.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RangeBarSeries_areBarsRounded org.nativescript.playvue:areBarsRounded}</code></td><td></td></tr>
     * <tr><td><code>{@link #RangeBarSeries_fillColor org.nativescript.playvue:fillColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #RangeBarSeries_roundBarsRadius org.nativescript.playvue:roundBarsRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #RangeBarSeries_strokeColor org.nativescript.playvue:strokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #RangeBarSeries_strokeWidth org.nativescript.playvue:strokeWidth}</code></td><td></td></tr>
     * </table>
     * @see #RangeBarSeries_areBarsRounded
     * @see #RangeBarSeries_fillColor
     * @see #RangeBarSeries_roundBarsRadius
     * @see #RangeBarSeries_strokeColor
     * @see #RangeBarSeries_strokeWidth
     */
    public static final int[] RangeBarSeries={
      0x7f030042, 0x7f030103, 0x7f0301c5, 0x7f0301fd, 
      0x7f0301fe
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#areBarsRounded}
     * attribute's value can be found in the {@link #RangeBarSeries} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:areBarsRounded
     */
    public static final int RangeBarSeries_areBarsRounded=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#fillColor}
     * attribute's value can be found in the {@link #RangeBarSeries} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:fillColor
     */
    public static final int RangeBarSeries_fillColor=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#roundBarsRadius}
     * attribute's value can be found in the {@link #RangeBarSeries} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:roundBarsRadius
     */
    public static final int RangeBarSeries_roundBarsRadius=2;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#strokeColor}
     * attribute's value can be found in the {@link #RangeBarSeries} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:strokeColor
     */
    public static final int RangeBarSeries_strokeColor=3;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#strokeWidth}
     * attribute's value can be found in the {@link #RangeBarSeries} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:strokeWidth
     */
    public static final int RangeBarSeries_strokeWidth=4;
    /**
     * Attributes that can be used with a RecycleListView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RecycleListView_paddingBottomNoButtons org.nativescript.playvue:paddingBottomNoButtons}</code></td><td>Bottom padding to use when no buttons are present.</td></tr>
     * <tr><td><code>{@link #RecycleListView_paddingTopNoTitle org.nativescript.playvue:paddingTopNoTitle}</code></td><td>Top padding to use when no title is present.</td></tr>
     * </table>
     * @see #RecycleListView_paddingBottomNoButtons
     * @see #RecycleListView_paddingTopNoTitle
     */
    public static final int[] RecycleListView={
      0x7f030199, 0x7f03019c
    };
    /**
     * <p>
     * @attr description
     * Bottom padding to use when no buttons are present.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:paddingBottomNoButtons
     */
    public static final int RecycleListView_paddingBottomNoButtons=0;
    /**
     * <p>
     * @attr description
     * Top padding to use when no title is present.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:paddingTopNoTitle
     */
    public static final int RecycleListView_paddingTopNoTitle=1;
    /**
     * Attributes that can be used with a RecyclerView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RecyclerView_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_android_descendantFocusability android:descendantFocusability}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollEnabled org.nativescript.playvue:fastScrollEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollHorizontalThumbDrawable org.nativescript.playvue:fastScrollHorizontalThumbDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollHorizontalTrackDrawable org.nativescript.playvue:fastScrollHorizontalTrackDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollVerticalThumbDrawable org.nativescript.playvue:fastScrollVerticalThumbDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollVerticalTrackDrawable org.nativescript.playvue:fastScrollVerticalTrackDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_layoutManager org.nativescript.playvue:layoutManager}</code></td><td>Class name of the Layout Manager to be used.</td></tr>
     * <tr><td><code>{@link #RecyclerView_reverseLayout org.nativescript.playvue:reverseLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_spanCount org.nativescript.playvue:spanCount}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_stackFromEnd org.nativescript.playvue:stackFromEnd}</code></td><td></td></tr>
     * </table>
     * @see #RecyclerView_android_orientation
     * @see #RecyclerView_android_descendantFocusability
     * @see #RecyclerView_fastScrollEnabled
     * @see #RecyclerView_fastScrollHorizontalThumbDrawable
     * @see #RecyclerView_fastScrollHorizontalTrackDrawable
     * @see #RecyclerView_fastScrollVerticalThumbDrawable
     * @see #RecyclerView_fastScrollVerticalTrackDrawable
     * @see #RecyclerView_layoutManager
     * @see #RecyclerView_reverseLayout
     * @see #RecyclerView_spanCount
     * @see #RecyclerView_stackFromEnd
     */
    public static final int[] RecyclerView={
      0x010100c4, 0x010100f1, 0x7f0300fe, 0x7f0300ff, 
      0x7f030100, 0x7f030101, 0x7f030102, 0x7f030157, 
      0x7f0301c2, 0x7f0301ed, 0x7f0301f3
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int RecyclerView_android_orientation=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#descendantFocusability}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>afterDescendants</td><td>1</td><td></td></tr>
     * <tr><td>beforeDescendants</td><td>0</td><td></td></tr>
     * <tr><td>blocksDescendants</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:descendantFocusability
     */
    public static final int RecyclerView_android_descendantFocusability=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#fastScrollEnabled}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:fastScrollEnabled
     */
    public static final int RecyclerView_fastScrollEnabled=2;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#fastScrollHorizontalThumbDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:fastScrollHorizontalThumbDrawable
     */
    public static final int RecyclerView_fastScrollHorizontalThumbDrawable=3;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#fastScrollHorizontalTrackDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:fastScrollHorizontalTrackDrawable
     */
    public static final int RecyclerView_fastScrollHorizontalTrackDrawable=4;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#fastScrollVerticalThumbDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:fastScrollVerticalThumbDrawable
     */
    public static final int RecyclerView_fastScrollVerticalThumbDrawable=5;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#fastScrollVerticalTrackDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:fastScrollVerticalTrackDrawable
     */
    public static final int RecyclerView_fastScrollVerticalTrackDrawable=6;
    /**
     * <p>
     * @attr description
     * Class name of the Layout Manager to be used.
     * <p/>
     * The class must extandroidx.recyclerview.widget.RecyclerViewView$LayoutManager
     * and have either a default constructor or constructor with the signature
     * (android.content.Context, android.util.AttributeSet, int, int).
     * <p/>
     * If the name starts with a '.', application package is prefixed.
     * Else, if the name contains a '.', the classname is assumed to be a full class name.
     * Else, the recycler view package naandroidx.appcompat.widgetdget) is prefixed.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:layoutManager
     */
    public static final int RecyclerView_layoutManager=7;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#reverseLayout}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:reverseLayout
     */
    public static final int RecyclerView_reverseLayout=8;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#spanCount}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name org.nativescript.playvue:spanCount
     */
    public static final int RecyclerView_spanCount=9;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#stackFromEnd}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:stackFromEnd
     */
    public static final int RecyclerView_stackFromEnd=10;
    /**
     * Attributes that can be used with a ScrimInsetsFrameLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ScrimInsetsFrameLayout_insetForeground org.nativescript.playvue:insetForeground}</code></td><td></td></tr>
     * </table>
     * @see #ScrimInsetsFrameLayout_insetForeground
     */
    public static final int[] ScrimInsetsFrameLayout={
      0x7f030135
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#insetForeground}
     * attribute's value can be found in the {@link #ScrimInsetsFrameLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:insetForeground
     */
    public static final int ScrimInsetsFrameLayout_insetForeground=0;
    /**
     * Attributes that can be used with a ScrollingViewBehavior_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ScrollingViewBehavior_Layout_behavior_overlapTop org.nativescript.playvue:behavior_overlapTop}</code></td><td></td></tr>
     * </table>
     * @see #ScrollingViewBehavior_Layout_behavior_overlapTop
     */
    public static final int[] ScrollingViewBehavior_Layout={
      0x7f030058
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#behavior_overlapTop}
     * attribute's value can be found in the {@link #ScrollingViewBehavior_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:behavior_overlapTop
     */
    public static final int ScrollingViewBehavior_Layout_behavior_overlapTop=0;
    /**
     * Attributes that can be used with a SearchView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SearchView_android_focusable android:focusable}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_inputType android:inputType}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_imeOptions android:imeOptions}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_closeIcon org.nativescript.playvue:closeIcon}</code></td><td>Close button icon</td></tr>
     * <tr><td><code>{@link #SearchView_commitIcon org.nativescript.playvue:commitIcon}</code></td><td>Commit icon shown in the query suggestion row</td></tr>
     * <tr><td><code>{@link #SearchView_defaultQueryHint org.nativescript.playvue:defaultQueryHint}</code></td><td>Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.</td></tr>
     * <tr><td><code>{@link #SearchView_goIcon org.nativescript.playvue:goIcon}</code></td><td>Go button icon</td></tr>
     * <tr><td><code>{@link #SearchView_iconifiedByDefault org.nativescript.playvue:iconifiedByDefault}</code></td><td>The default state of the SearchView.</td></tr>
     * <tr><td><code>{@link #SearchView_layout org.nativescript.playvue:layout}</code></td><td>The layout to use for the search view.</td></tr>
     * <tr><td><code>{@link #SearchView_queryBackground org.nativescript.playvue:queryBackground}</code></td><td>Background for the section containing the search query</td></tr>
     * <tr><td><code>{@link #SearchView_queryHint org.nativescript.playvue:queryHint}</code></td><td>An optional user-defined query hint string to be displayed in the empty query field.</td></tr>
     * <tr><td><code>{@link #SearchView_searchHintIcon org.nativescript.playvue:searchHintIcon}</code></td><td>Search icon displayed as a text field hint</td></tr>
     * <tr><td><code>{@link #SearchView_searchIcon org.nativescript.playvue:searchIcon}</code></td><td>Search icon</td></tr>
     * <tr><td><code>{@link #SearchView_submitBackground org.nativescript.playvue:submitBackground}</code></td><td>Background for the section containing the action (e.g.</td></tr>
     * <tr><td><code>{@link #SearchView_suggestionRowLayout org.nativescript.playvue:suggestionRowLayout}</code></td><td>Layout for query suggestion rows</td></tr>
     * <tr><td><code>{@link #SearchView_voiceIcon org.nativescript.playvue:voiceIcon}</code></td><td>Voice button icon</td></tr>
     * </table>
     * @see #SearchView_android_focusable
     * @see #SearchView_android_maxWidth
     * @see #SearchView_android_inputType
     * @see #SearchView_android_imeOptions
     * @see #SearchView_closeIcon
     * @see #SearchView_commitIcon
     * @see #SearchView_defaultQueryHint
     * @see #SearchView_goIcon
     * @see #SearchView_iconifiedByDefault
     * @see #SearchView_layout
     * @see #SearchView_queryBackground
     * @see #SearchView_queryHint
     * @see #SearchView_searchHintIcon
     * @see #SearchView_searchIcon
     * @see #SearchView_submitBackground
     * @see #SearchView_suggestionRowLayout
     * @see #SearchView_voiceIcon
     */
    public static final int[] SearchView={
      0x010100da, 0x0101011f, 0x01010220, 0x01010264, 
      0x7f0300a2, 0x7f0300bc, 0x7f0300d5, 0x7f030115, 
      0x7f03012f, 0x7f030156, 0x7f0301b8, 0x7f0301b9, 
      0x7f0301d8, 0x7f0301d9, 0x7f030201, 0x7f030208, 
      0x7f030271
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#focusable}
     * attribute's value can be found in the {@link #SearchView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>10</td><td></td></tr>
     * </table>
     *
     * @attr name android:focusable
     */
    public static final int SearchView_android_focusable=0;
    /**
     * <p>
     * @attr description
     * An optional maximum width of the SearchView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int SearchView_android_maxWidth=1;
    /**
     * <p>
     * @attr description
     * The input type to set on the query text field.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>date</td><td>14</td><td></td></tr>
     * <tr><td>datetime</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>number</td><td>2</td><td></td></tr>
     * <tr><td>numberDecimal</td><td>2002</td><td></td></tr>
     * <tr><td>numberPassword</td><td>12</td><td></td></tr>
     * <tr><td>numberSigned</td><td>1002</td><td></td></tr>
     * <tr><td>phone</td><td>3</td><td></td></tr>
     * <tr><td>text</td><td>1</td><td></td></tr>
     * <tr><td>textAutoComplete</td><td>10001</td><td></td></tr>
     * <tr><td>textAutoCorrect</td><td>8001</td><td></td></tr>
     * <tr><td>textCapCharacters</td><td>1001</td><td></td></tr>
     * <tr><td>textCapSentences</td><td>4001</td><td></td></tr>
     * <tr><td>textCapWords</td><td>2001</td><td></td></tr>
     * <tr><td>textEmailAddress</td><td>21</td><td></td></tr>
     * <tr><td>textEmailSubject</td><td>31</td><td></td></tr>
     * <tr><td>textFilter</td><td>b1</td><td></td></tr>
     * <tr><td>textImeMultiLine</td><td>40001</td><td></td></tr>
     * <tr><td>textLongMessage</td><td>51</td><td></td></tr>
     * <tr><td>textMultiLine</td><td>20001</td><td></td></tr>
     * <tr><td>textNoSuggestions</td><td>80001</td><td></td></tr>
     * <tr><td>textPassword</td><td>81</td><td></td></tr>
     * <tr><td>textPersonName</td><td>61</td><td></td></tr>
     * <tr><td>textPhonetic</td><td>c1</td><td></td></tr>
     * <tr><td>textPostalAddress</td><td>71</td><td></td></tr>
     * <tr><td>textShortMessage</td><td>41</td><td></td></tr>
     * <tr><td>textUri</td><td>11</td><td></td></tr>
     * <tr><td>textVisiblePassword</td><td>91</td><td></td></tr>
     * <tr><td>textWebEditText</td><td>a1</td><td></td></tr>
     * <tr><td>textWebEmailAddress</td><td>d1</td><td></td></tr>
     * <tr><td>textWebPassword</td><td>e1</td><td></td></tr>
     * <tr><td>time</td><td>24</td><td></td></tr>
     * </table>
     *
     * @attr name android:inputType
     */
    public static final int SearchView_android_inputType=2;
    /**
     * <p>
     * @attr description
     * The IME options to set on the query text field.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>actionDone</td><td>6</td><td></td></tr>
     * <tr><td>actionGo</td><td>2</td><td></td></tr>
     * <tr><td>actionNext</td><td>5</td><td></td></tr>
     * <tr><td>actionNone</td><td>1</td><td></td></tr>
     * <tr><td>actionPrevious</td><td>7</td><td></td></tr>
     * <tr><td>actionSearch</td><td>3</td><td></td></tr>
     * <tr><td>actionSend</td><td>4</td><td></td></tr>
     * <tr><td>actionUnspecified</td><td>0</td><td></td></tr>
     * <tr><td>flagForceAscii</td><td>80000000</td><td></td></tr>
     * <tr><td>flagNavigateNext</td><td>8000000</td><td></td></tr>
     * <tr><td>flagNavigatePrevious</td><td>4000000</td><td></td></tr>
     * <tr><td>flagNoAccessoryAction</td><td>20000000</td><td></td></tr>
     * <tr><td>flagNoEnterAction</td><td>40000000</td><td></td></tr>
     * <tr><td>flagNoExtractUi</td><td>10000000</td><td></td></tr>
     * <tr><td>flagNoFullscreen</td><td>2000000</td><td></td></tr>
     * <tr><td>flagNoPersonalizedLearning</td><td>1000000</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:imeOptions
     */
    public static final int SearchView_android_imeOptions=3;
    /**
     * <p>
     * @attr description
     * Close button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:closeIcon
     */
    public static final int SearchView_closeIcon=4;
    /**
     * <p>
     * @attr description
     * Commit icon shown in the query suggestion row
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:commitIcon
     */
    public static final int SearchView_commitIcon=5;
    /**
     * <p>
     * @attr description
     * Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:defaultQueryHint
     */
    public static final int SearchView_defaultQueryHint=6;
    /**
     * <p>
     * @attr description
     * Go button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:goIcon
     */
    public static final int SearchView_goIcon=7;
    /**
     * <p>
     * @attr description
     * The default state of the SearchView. If true, it will be iconified when not in
     * use and expanded when clicked.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:iconifiedByDefault
     */
    public static final int SearchView_iconifiedByDefault=8;
    /**
     * <p>
     * @attr description
     * The layout to use for the search view.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:layout
     */
    public static final int SearchView_layout=9;
    /**
     * <p>
     * @attr description
     * Background for the section containing the search query
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:queryBackground
     */
    public static final int SearchView_queryBackground=10;
    /**
     * <p>
     * @attr description
     * An optional user-defined query hint string to be displayed in the empty query field.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:queryHint
     */
    public static final int SearchView_queryHint=11;
    /**
     * <p>
     * @attr description
     * Search icon displayed as a text field hint
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:searchHintIcon
     */
    public static final int SearchView_searchHintIcon=12;
    /**
     * <p>
     * @attr description
     * Search icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:searchIcon
     */
    public static final int SearchView_searchIcon=13;
    /**
     * <p>
     * @attr description
     * Background for the section containing the action (e.g. voice search)
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:submitBackground
     */
    public static final int SearchView_submitBackground=14;
    /**
     * <p>
     * @attr description
     * Layout for query suggestion rows
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:suggestionRowLayout
     */
    public static final int SearchView_suggestionRowLayout=15;
    /**
     * <p>
     * @attr description
     * Voice button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:voiceIcon
     */
    public static final int SearchView_voiceIcon=16;
    /**
     * Attributes that can be used with a SignInButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SignInButton_buttonSize org.nativescript.playvue:buttonSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #SignInButton_colorScheme org.nativescript.playvue:colorScheme}</code></td><td></td></tr>
     * <tr><td><code>{@link #SignInButton_scopeUris org.nativescript.playvue:scopeUris}</code></td><td></td></tr>
     * </table>
     * @see #SignInButton_buttonSize
     * @see #SignInButton_colorScheme
     * @see #SignInButton_scopeUris
     */
    public static final int[] SignInButton={
      0x7f030073, 0x7f0300b8, 0x7f0301d3
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#buttonSize}
     * attribute's value can be found in the {@link #SignInButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>icon_only</td><td>2</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * <tr><td>wide</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:buttonSize
     */
    public static final int SignInButton_buttonSize=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#colorScheme}
     * attribute's value can be found in the {@link #SignInButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>2</td><td></td></tr>
     * <tr><td>dark</td><td>0</td><td></td></tr>
     * <tr><td>light</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:colorScheme
     */
    public static final int SignInButton_colorScheme=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#scopeUris}
     * attribute's value can be found in the {@link #SignInButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:scopeUris
     */
    public static final int SignInButton_scopeUris=2;
    /**
     * Attributes that can be used with a SimpleDraweeView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SimpleDraweeView_actualImageResource org.nativescript.playvue:actualImageResource}</code></td><td>An image reference</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_actualImageScaleType org.nativescript.playvue:actualImageScaleType}</code></td><td>Scale type of the actual image.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_actualImageUri org.nativescript.playvue:actualImageUri}</code></td><td>An image uri .</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_backgroundImage org.nativescript.playvue:backgroundImage}</code></td><td>A drawable or color to be used as a background.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_fadeDuration org.nativescript.playvue:fadeDuration}</code></td><td>Fade duration in milliseconds.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_failureImage org.nativescript.playvue:failureImage}</code></td><td>A drawable to be be used as a failure image.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_failureImageScaleType org.nativescript.playvue:failureImageScaleType}</code></td><td>Scale type of the failure image.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_overlayImage org.nativescript.playvue:overlayImage}</code></td><td>A drawable or color to be used as an overlay.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_placeholderImage org.nativescript.playvue:placeholderImage}</code></td><td>A drawable or color to be be used as a placeholder.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_placeholderImageScaleType org.nativescript.playvue:placeholderImageScaleType}</code></td><td>Scale type of the placeholder image.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_pressedStateOverlayImage org.nativescript.playvue:pressedStateOverlayImage}</code></td><td>A drawable or color to be used as a pressed-state-overlay</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_progressBarAutoRotateInterval org.nativescript.playvue:progressBarAutoRotateInterval}</code></td><td>Progress bar Auto Rotate interval in milliseconds</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_progressBarImage org.nativescript.playvue:progressBarImage}</code></td><td>A drawable to be be used as a progress bar.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_progressBarImageScaleType org.nativescript.playvue:progressBarImageScaleType}</code></td><td>Scale type of the progress bar.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_retryImage org.nativescript.playvue:retryImage}</code></td><td>A drawable to be be used as a retry image.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_retryImageScaleType org.nativescript.playvue:retryImageScaleType}</code></td><td>Scale type of the retry image.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_roundAsCircle org.nativescript.playvue:roundAsCircle}</code></td><td>Round as circle.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_roundBottomEnd org.nativescript.playvue:roundBottomEnd}</code></td><td>Round the bottom-end edge.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_roundBottomLeft org.nativescript.playvue:roundBottomLeft}</code></td><td>Round the bottom-left corner.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_roundBottomRight org.nativescript.playvue:roundBottomRight}</code></td><td>Round the bottom-right corner.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_roundBottomStart org.nativescript.playvue:roundBottomStart}</code></td><td>Round the bottom-start edge.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_roundTopEnd org.nativescript.playvue:roundTopEnd}</code></td><td>Round the top-end edge.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_roundTopLeft org.nativescript.playvue:roundTopLeft}</code></td><td>Round the top-left corner.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_roundTopRight org.nativescript.playvue:roundTopRight}</code></td><td>Round the top-right corner.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_roundTopStart org.nativescript.playvue:roundTopStart}</code></td><td>Round the top-start edge.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_roundWithOverlayColor org.nativescript.playvue:roundWithOverlayColor}</code></td><td>Round by overlying color.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_roundedCornerRadius org.nativescript.playvue:roundedCornerRadius}</code></td><td>Rounded corner radius.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_roundingBorderColor org.nativescript.playvue:roundingBorderColor}</code></td><td>Rounding border color</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_roundingBorderPadding org.nativescript.playvue:roundingBorderPadding}</code></td><td>Rounding border padding</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_roundingBorderWidth org.nativescript.playvue:roundingBorderWidth}</code></td><td>Rounding border width</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_viewAspectRatio org.nativescript.playvue:viewAspectRatio}</code></td><td>Aspect ratio (width / height) of the view, not necessarily of the images.</td></tr>
     * </table>
     * @see #SimpleDraweeView_actualImageResource
     * @see #SimpleDraweeView_actualImageScaleType
     * @see #SimpleDraweeView_actualImageUri
     * @see #SimpleDraweeView_backgroundImage
     * @see #SimpleDraweeView_fadeDuration
     * @see #SimpleDraweeView_failureImage
     * @see #SimpleDraweeView_failureImageScaleType
     * @see #SimpleDraweeView_overlayImage
     * @see #SimpleDraweeView_placeholderImage
     * @see #SimpleDraweeView_placeholderImageScaleType
     * @see #SimpleDraweeView_pressedStateOverlayImage
     * @see #SimpleDraweeView_progressBarAutoRotateInterval
     * @see #SimpleDraweeView_progressBarImage
     * @see #SimpleDraweeView_progressBarImageScaleType
     * @see #SimpleDraweeView_retryImage
     * @see #SimpleDraweeView_retryImageScaleType
     * @see #SimpleDraweeView_roundAsCircle
     * @see #SimpleDraweeView_roundBottomEnd
     * @see #SimpleDraweeView_roundBottomLeft
     * @see #SimpleDraweeView_roundBottomRight
     * @see #SimpleDraweeView_roundBottomStart
     * @see #SimpleDraweeView_roundTopEnd
     * @see #SimpleDraweeView_roundTopLeft
     * @see #SimpleDraweeView_roundTopRight
     * @see #SimpleDraweeView_roundTopStart
     * @see #SimpleDraweeView_roundWithOverlayColor
     * @see #SimpleDraweeView_roundedCornerRadius
     * @see #SimpleDraweeView_roundingBorderColor
     * @see #SimpleDraweeView_roundingBorderPadding
     * @see #SimpleDraweeView_roundingBorderWidth
     * @see #SimpleDraweeView_viewAspectRatio
     */
    public static final int[] SimpleDraweeView={
      0x7f030034, 0x7f030035, 0x7f030036, 0x7f03004f, 
      0x7f0300fb, 0x7f0300fc, 0x7f0300fd, 0x7f030198, 
      0x7f0301a7, 0x7f0301a8, 0x7f0301b1, 0x7f0301b3, 
      0x7f0301b4, 0x7f0301b5, 0x7f0301c0, 0x7f0301c1, 
      0x7f0301c4, 0x7f0301c6, 0x7f0301c7, 0x7f0301c8, 
      0x7f0301c9, 0x7f0301ca, 0x7f0301cb, 0x7f0301cc, 
      0x7f0301cd, 0x7f0301ce, 0x7f0301cf, 0x7f0301d0, 
      0x7f0301d1, 0x7f0301d2, 0x7f03026f
    };
    /**
     * <p>
     * @attr description
     * An image reference
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:actualImageResource
     */
    public static final int SimpleDraweeView_actualImageResource=0;
    /**
     * <p>
     * @attr description
     * Scale type of the actual image.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:actualImageScaleType
     */
    public static final int SimpleDraweeView_actualImageScaleType=1;
    /**
     * <p>
     * @attr description
     * An image uri .
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:actualImageUri
     */
    public static final int SimpleDraweeView_actualImageUri=2;
    /**
     * <p>
     * @attr description
     * A drawable or color to be used as a background.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:backgroundImage
     */
    public static final int SimpleDraweeView_backgroundImage=3;
    /**
     * <p>
     * @attr description
     * Fade duration in milliseconds.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name org.nativescript.playvue:fadeDuration
     */
    public static final int SimpleDraweeView_fadeDuration=4;
    /**
     * <p>
     * @attr description
     * A drawable to be be used as a failure image.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:failureImage
     */
    public static final int SimpleDraweeView_failureImage=5;
    /**
     * <p>
     * @attr description
     * Scale type of the failure image. Ignored if failureImage is not specified.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:failureImageScaleType
     */
    public static final int SimpleDraweeView_failureImageScaleType=6;
    /**
     * <p>
     * @attr description
     * A drawable or color to be used as an overlay.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:overlayImage
     */
    public static final int SimpleDraweeView_overlayImage=7;
    /**
     * <p>
     * @attr description
     * A drawable or color to be be used as a placeholder.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:placeholderImage
     */
    public static final int SimpleDraweeView_placeholderImage=8;
    /**
     * <p>
     * @attr description
     * Scale type of the placeholder image. Ignored if placeholderImage is not specified.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:placeholderImageScaleType
     */
    public static final int SimpleDraweeView_placeholderImageScaleType=9;
    /**
     * <p>
     * @attr description
     * A drawable or color to be used as a pressed-state-overlay
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:pressedStateOverlayImage
     */
    public static final int SimpleDraweeView_pressedStateOverlayImage=10;
    /**
     * <p>
     * @attr description
     * Progress bar Auto Rotate interval in milliseconds
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name org.nativescript.playvue:progressBarAutoRotateInterval
     */
    public static final int SimpleDraweeView_progressBarAutoRotateInterval=11;
    /**
     * <p>
     * @attr description
     * A drawable to be be used as a progress bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:progressBarImage
     */
    public static final int SimpleDraweeView_progressBarImage=12;
    /**
     * <p>
     * @attr description
     * Scale type of the progress bar. Ignored if progressBarImage is not specified.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:progressBarImageScaleType
     */
    public static final int SimpleDraweeView_progressBarImageScaleType=13;
    /**
     * <p>
     * @attr description
     * A drawable to be be used as a retry image.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:retryImage
     */
    public static final int SimpleDraweeView_retryImage=14;
    /**
     * <p>
     * @attr description
     * Scale type of the retry image. Ignored if retryImage is not specified.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:retryImageScaleType
     */
    public static final int SimpleDraweeView_retryImageScaleType=15;
    /**
     * <p>
     * @attr description
     * Round as circle.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:roundAsCircle
     */
    public static final int SimpleDraweeView_roundAsCircle=16;
    /**
     * <p>
     * @attr description
     * Round the bottom-end edge. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:roundBottomEnd
     */
    public static final int SimpleDraweeView_roundBottomEnd=17;
    /**
     * <p>
     * @attr description
     * Round the bottom-left corner. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:roundBottomLeft
     */
    public static final int SimpleDraweeView_roundBottomLeft=18;
    /**
     * <p>
     * @attr description
     * Round the bottom-right corner. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:roundBottomRight
     */
    public static final int SimpleDraweeView_roundBottomRight=19;
    /**
     * <p>
     * @attr description
     * Round the bottom-start edge. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:roundBottomStart
     */
    public static final int SimpleDraweeView_roundBottomStart=20;
    /**
     * <p>
     * @attr description
     * Round the top-end edge. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:roundTopEnd
     */
    public static final int SimpleDraweeView_roundTopEnd=21;
    /**
     * <p>
     * @attr description
     * Round the top-left corner. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:roundTopLeft
     */
    public static final int SimpleDraweeView_roundTopLeft=22;
    /**
     * <p>
     * @attr description
     * Round the top-right corner. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:roundTopRight
     */
    public static final int SimpleDraweeView_roundTopRight=23;
    /**
     * <p>
     * @attr description
     * Round the top-start edge. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:roundTopStart
     */
    public static final int SimpleDraweeView_roundTopStart=24;
    /**
     * <p>
     * @attr description
     * Round by overlying color.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:roundWithOverlayColor
     */
    public static final int SimpleDraweeView_roundWithOverlayColor=25;
    /**
     * <p>
     * @attr description
     * Rounded corner radius. Ignored if roundAsCircle is used.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:roundedCornerRadius
     */
    public static final int SimpleDraweeView_roundedCornerRadius=26;
    /**
     * <p>
     * @attr description
     * Rounding border color
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:roundingBorderColor
     */
    public static final int SimpleDraweeView_roundingBorderColor=27;
    /**
     * <p>
     * @attr description
     * Rounding border padding
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:roundingBorderPadding
     */
    public static final int SimpleDraweeView_roundingBorderPadding=28;
    /**
     * <p>
     * @attr description
     * Rounding border width
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:roundingBorderWidth
     */
    public static final int SimpleDraweeView_roundingBorderWidth=29;
    /**
     * <p>
     * @attr description
     * Aspect ratio (width / height) of the view, not necessarily of the images.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name org.nativescript.playvue:viewAspectRatio
     */
    public static final int SimpleDraweeView_viewAspectRatio=30;
    /**
     * Attributes that can be used with a Snackbar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Snackbar_snackbarButtonStyle org.nativescript.playvue:snackbarButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Snackbar_snackbarStyle org.nativescript.playvue:snackbarStyle}</code></td><td></td></tr>
     * </table>
     * @see #Snackbar_snackbarButtonStyle
     * @see #Snackbar_snackbarStyle
     */
    public static final int[] Snackbar={
      0x7f0301eb, 0x7f0301ec
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#snackbarButtonStyle}
     * attribute's value can be found in the {@link #Snackbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:snackbarButtonStyle
     */
    public static final int Snackbar_snackbarButtonStyle=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#snackbarStyle}
     * attribute's value can be found in the {@link #Snackbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:snackbarStyle
     */
    public static final int Snackbar_snackbarStyle=1;
    /**
     * Attributes that can be used with a SnackbarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SnackbarLayout_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #SnackbarLayout_elevation org.nativescript.playvue:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #SnackbarLayout_maxActionInlineWidth org.nativescript.playvue:maxActionInlineWidth}</code></td><td></td></tr>
     * </table>
     * @see #SnackbarLayout_android_maxWidth
     * @see #SnackbarLayout_elevation
     * @see #SnackbarLayout_maxActionInlineWidth
     */
    public static final int[] SnackbarLayout={
      0x0101011f, 0x7f0300e6, 0x7f030182
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #SnackbarLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int SnackbarLayout_android_maxWidth=0;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:elevation
     */
    public static final int SnackbarLayout_elevation=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#maxActionInlineWidth}
     * attribute's value can be found in the {@link #SnackbarLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:maxActionInlineWidth
     */
    public static final int SnackbarLayout_maxActionInlineWidth=2;
    /**
     * Attributes that can be used with a Spinner.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Spinner_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_popupBackground android:popupBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_prompt android:prompt}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_dropDownWidth android:dropDownWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_popupTheme org.nativescript.playvue:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * </table>
     * @see #Spinner_android_entries
     * @see #Spinner_android_popupBackground
     * @see #Spinner_android_prompt
     * @see #Spinner_android_dropDownWidth
     * @see #Spinner_popupTheme
     */
    public static final int[] Spinner={
      0x010100b2, 0x01010176, 0x0101017b, 0x01010262, 
      0x7f0301ae
    };
    /**
     * <p>
     * @attr description
     * Reference to an array resource that will populate the Spinner.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int Spinner_android_entries=0;
    /**
     * <p>
     * @attr description
     * Background drawable to use for the dropdown in spinnerMode="dropdown".
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:popupBackground
     */
    public static final int Spinner_android_popupBackground=1;
    /**
     * <p>
     * @attr description
     * The prompt to display when the spinner's dialog is shown.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:prompt
     */
    public static final int Spinner_android_prompt=2;
    /**
     * <p>
     * @attr description
     * Width of the dropdown in spinnerMode="dropdown".
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:dropDownWidth
     */
    public static final int Spinner_android_dropDownWidth=3;
    /**
     * <p>
     * @attr description
     * Theme to use for the drop-down or dialog popup window.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:popupTheme
     */
    public static final int Spinner_popupTheme=4;
    /**
     * Attributes that can be used with a StateListDrawable.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #StateListDrawable_android_dither android:dither}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_variablePadding android:variablePadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_constantSize android:constantSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_enterFadeDuration android:enterFadeDuration}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_exitFadeDuration android:exitFadeDuration}</code></td><td></td></tr>
     * </table>
     * @see #StateListDrawable_android_dither
     * @see #StateListDrawable_android_visible
     * @see #StateListDrawable_android_variablePadding
     * @see #StateListDrawable_android_constantSize
     * @see #StateListDrawable_android_enterFadeDuration
     * @see #StateListDrawable_android_exitFadeDuration
     */
    public static final int[] StateListDrawable={
      0x0101011c, 0x01010194, 0x01010195, 0x01010196, 
      0x0101030c, 0x0101030d
    };
    /**
     * <p>
     * @attr description
     * Enables or disables dithering of the bitmap if the bitmap does not have the
     * same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
     * an RGB 565 screen).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:dither
     */
    public static final int StateListDrawable_android_dither=0;
    /**
     * <p>
     * @attr description
     * Indicates whether the drawable should be initially visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int StateListDrawable_android_visible=1;
    /**
     * <p>
     * @attr description
     * If true, allows the drawable's padding to change based on the
     * current state that is selected.  If false, the padding will
     * stay the same (based on the maximum padding of all the states).
     * Enabling this feature requires that the owner of the drawable
     * deal with performing layout when the state changes, which is
     * often not supported.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:variablePadding
     */
    public static final int StateListDrawable_android_variablePadding=2;
    /**
     * <p>
     * @attr description
     * If true, the drawable's reported internal size will remain
     * constant as the state changes; the size is the maximum of all
     * of the states.  If false, the size will vary based on the
     * current state.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:constantSize
     */
    public static final int StateListDrawable_android_constantSize=3;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade in a new state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:enterFadeDuration
     */
    public static final int StateListDrawable_android_enterFadeDuration=4;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade out an old state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:exitFadeDuration
     */
    public static final int StateListDrawable_android_exitFadeDuration=5;
    /**
     * Attributes that can be used with a StateListDrawableItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #StateListDrawableItem_android_drawable android:drawable}</code></td><td></td></tr>
     * </table>
     * @see #StateListDrawableItem_android_drawable
     */
    public static final int[] StateListDrawableItem={
      0x01010199
    };
    /**
     * <p>
     * @attr description
     * Reference to a drawable resource to use for the state. If not
     * given, the drawable must be defined by the first child tag.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:drawable
     */
    public static final int StateListDrawableItem_android_drawable=0;
    /**
     * Attributes that can be used with a SwitchCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchCompat_android_textOn android:textOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_android_textOff android:textOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_android_thumb android:thumb}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_showText org.nativescript.playvue:showText}</code></td><td>Whether to draw on/off text.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_splitTrack org.nativescript.playvue:splitTrack}</code></td><td>Whether to split the track and leave a gap for the thumb drawable.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchMinWidth org.nativescript.playvue:switchMinWidth}</code></td><td>Minimum width for the switch component</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchPadding org.nativescript.playvue:switchPadding}</code></td><td>Minimum space between the switch and caption text</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchTextAppearance org.nativescript.playvue:switchTextAppearance}</code></td><td>TextAppearance style for text displayed on the switch thumb.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTextPadding org.nativescript.playvue:thumbTextPadding}</code></td><td>Amount of padding on either side of text within the switch thumb.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTint org.nativescript.playvue:thumbTint}</code></td><td>Tint to apply to the thumb drawable.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTintMode org.nativescript.playvue:thumbTintMode}</code></td><td>Blending mode used to apply the thumb tint.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_track org.nativescript.playvue:track}</code></td><td>Drawable to use as the "track" that the switch thumb slides within.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_trackTint org.nativescript.playvue:trackTint}</code></td><td>Tint to apply to the track.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_trackTintMode org.nativescript.playvue:trackTintMode}</code></td><td>Blending mode used to apply the track tint.</td></tr>
     * </table>
     * @see #SwitchCompat_android_textOn
     * @see #SwitchCompat_android_textOff
     * @see #SwitchCompat_android_thumb
     * @see #SwitchCompat_showText
     * @see #SwitchCompat_splitTrack
     * @see #SwitchCompat_switchMinWidth
     * @see #SwitchCompat_switchPadding
     * @see #SwitchCompat_switchTextAppearance
     * @see #SwitchCompat_thumbTextPadding
     * @see #SwitchCompat_thumbTint
     * @see #SwitchCompat_thumbTintMode
     * @see #SwitchCompat_track
     * @see #SwitchCompat_trackTint
     * @see #SwitchCompat_trackTintMode
     */
    public static final int[] SwitchCompat={
      0x01010124, 0x01010125, 0x01010142, 0x7f0301e6, 
      0x7f0301f1, 0x7f03020a, 0x7f03020b, 0x7f03020d, 
      0x7f030245, 0x7f030246, 0x7f030247, 0x7f030266, 
      0x7f030267, 0x7f030268
    };
    /**
     * <p>
     * @attr description
     * Text to use when the switch is in the checked/"on" state.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:textOn
     */
    public static final int SwitchCompat_android_textOn=0;
    /**
     * <p>
     * @attr description
     * Text to use when the switch is in the unchecked/"off" state.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:textOff
     */
    public static final int SwitchCompat_android_textOff=1;
    /**
     * <p>
     * @attr description
     * Drawable to use as the "thumb" that switches back and forth.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:thumb
     */
    public static final int SwitchCompat_android_thumb=2;
    /**
     * <p>
     * @attr description
     * Whether to draw on/off text.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:showText
     */
    public static final int SwitchCompat_showText=3;
    /**
     * <p>
     * @attr description
     * Whether to split the track and leave a gap for the thumb drawable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:splitTrack
     */
    public static final int SwitchCompat_splitTrack=4;
    /**
     * <p>
     * @attr description
     * Minimum width for the switch component
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:switchMinWidth
     */
    public static final int SwitchCompat_switchMinWidth=5;
    /**
     * <p>
     * @attr description
     * Minimum space between the switch and caption text
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:switchPadding
     */
    public static final int SwitchCompat_switchPadding=6;
    /**
     * <p>
     * @attr description
     * TextAppearance style for text displayed on the switch thumb.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:switchTextAppearance
     */
    public static final int SwitchCompat_switchTextAppearance=7;
    /**
     * <p>
     * @attr description
     * Amount of padding on either side of text within the switch thumb.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:thumbTextPadding
     */
    public static final int SwitchCompat_thumbTextPadding=8;
    /**
     * <p>
     * @attr description
     * Tint to apply to the thumb drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:thumbTint
     */
    public static final int SwitchCompat_thumbTint=9;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the thumb tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:thumbTintMode
     */
    public static final int SwitchCompat_thumbTintMode=10;
    /**
     * <p>
     * @attr description
     * Drawable to use as the "track" that the switch thumb slides within.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:track
     */
    public static final int SwitchCompat_track=11;
    /**
     * <p>
     * @attr description
     * Tint to apply to the track.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:trackTint
     */
    public static final int SwitchCompat_trackTint=12;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the track tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:trackTintMode
     */
    public static final int SwitchCompat_trackTintMode=13;
    /**
     * Attributes that can be used with a TabItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TabItem_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabItem_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabItem_android_text android:text}</code></td><td></td></tr>
     * </table>
     * @see #TabItem_android_icon
     * @see #TabItem_android_layout
     * @see #TabItem_android_text
     */
    public static final int[] TabItem={
      0x01010002, 0x010100f2, 0x0101014f
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#icon}
     * attribute's value can be found in the {@link #TabItem} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int TabItem_android_icon=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #TabItem} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int TabItem_android_layout=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#text}
     * attribute's value can be found in the {@link #TabItem} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:text
     */
    public static final int TabItem_android_text=2;
    /**
     * Attributes that can be used with a TabLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TabLayout_tabBackground org.nativescript.playvue:tabBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabContentStart org.nativescript.playvue:tabContentStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabGravity org.nativescript.playvue:tabGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabIconTint org.nativescript.playvue:tabIconTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabIconTintMode org.nativescript.playvue:tabIconTintMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicator org.nativescript.playvue:tabIndicator}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorAnimationDuration org.nativescript.playvue:tabIndicatorAnimationDuration}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorColor org.nativescript.playvue:tabIndicatorColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorFullWidth org.nativescript.playvue:tabIndicatorFullWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorGravity org.nativescript.playvue:tabIndicatorGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorHeight org.nativescript.playvue:tabIndicatorHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabInlineLabel org.nativescript.playvue:tabInlineLabel}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabMaxWidth org.nativescript.playvue:tabMaxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabMinWidth org.nativescript.playvue:tabMinWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabMode org.nativescript.playvue:tabMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabPadding org.nativescript.playvue:tabPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabPaddingBottom org.nativescript.playvue:tabPaddingBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabPaddingEnd org.nativescript.playvue:tabPaddingEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabPaddingStart org.nativescript.playvue:tabPaddingStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabPaddingTop org.nativescript.playvue:tabPaddingTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabRippleColor org.nativescript.playvue:tabRippleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabSelectedTextColor org.nativescript.playvue:tabSelectedTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabTextAppearance org.nativescript.playvue:tabTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabTextColor org.nativescript.playvue:tabTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabUnboundedRipple org.nativescript.playvue:tabUnboundedRipple}</code></td><td></td></tr>
     * </table>
     * @see #TabLayout_tabBackground
     * @see #TabLayout_tabContentStart
     * @see #TabLayout_tabGravity
     * @see #TabLayout_tabIconTint
     * @see #TabLayout_tabIconTintMode
     * @see #TabLayout_tabIndicator
     * @see #TabLayout_tabIndicatorAnimationDuration
     * @see #TabLayout_tabIndicatorColor
     * @see #TabLayout_tabIndicatorFullWidth
     * @see #TabLayout_tabIndicatorGravity
     * @see #TabLayout_tabIndicatorHeight
     * @see #TabLayout_tabInlineLabel
     * @see #TabLayout_tabMaxWidth
     * @see #TabLayout_tabMinWidth
     * @see #TabLayout_tabMode
     * @see #TabLayout_tabPadding
     * @see #TabLayout_tabPaddingBottom
     * @see #TabLayout_tabPaddingEnd
     * @see #TabLayout_tabPaddingStart
     * @see #TabLayout_tabPaddingTop
     * @see #TabLayout_tabRippleColor
     * @see #TabLayout_tabSelectedTextColor
     * @see #TabLayout_tabTextAppearance
     * @see #TabLayout_tabTextColor
     * @see #TabLayout_tabUnboundedRipple
     */
    public static final int[] TabLayout={
      0x7f03020e, 0x7f03020f, 0x7f030210, 0x7f030211, 
      0x7f030212, 0x7f030213, 0x7f030214, 0x7f030215, 
      0x7f030216, 0x7f030217, 0x7f030218, 0x7f030219, 
      0x7f03021a, 0x7f03021b, 0x7f03021c, 0x7f03021d, 
      0x7f03021e, 0x7f03021f, 0x7f030220, 0x7f030221, 
      0x7f030222, 0x7f030223, 0x7f030225, 0x7f030226, 
      0x7f030227
    };
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#tabBackground}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:tabBackground
     */
    public static final int TabLayout_tabBackground=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#tabContentStart}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:tabContentStart
     */
    public static final int TabLayout_tabContentStart=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#tabGravity}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>1</td><td></td></tr>
     * <tr><td>fill</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:tabGravity
     */
    public static final int TabLayout_tabGravity=2;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#tabIconTint}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:tabIconTint
     */
    public static final int TabLayout_tabIconTint=3;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#tabIconTintMode}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td></td></tr>
     * <tr><td>multiply</td><td>e</td><td></td></tr>
     * <tr><td>screen</td><td>f</td><td></td></tr>
     * <tr><td>src_atop</td><td>9</td><td></td></tr>
     * <tr><td>src_in</td><td>5</td><td></td></tr>
     * <tr><td>src_over</td><td>3</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:tabIconTintMode
     */
    public static final int TabLayout_tabIconTintMode=4;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#tabIndicator}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:tabIndicator
     */
    public static final int TabLayout_tabIndicator=5;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#tabIndicatorAnimationDuration}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name org.nativescript.playvue:tabIndicatorAnimationDuration
     */
    public static final int TabLayout_tabIndicatorAnimationDuration=6;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#tabIndicatorColor}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:tabIndicatorColor
     */
    public static final int TabLayout_tabIndicatorColor=7;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#tabIndicatorFullWidth}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:tabIndicatorFullWidth
     */
    public static final int TabLayout_tabIndicatorFullWidth=8;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#tabIndicatorGravity}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>0</td><td></td></tr>
     * <tr><td>center</td><td>1</td><td></td></tr>
     * <tr><td>stretch</td><td>3</td><td></td></tr>
     * <tr><td>top</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:tabIndicatorGravity
     */
    public static final int TabLayout_tabIndicatorGravity=9;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#tabIndicatorHeight}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:tabIndicatorHeight
     */
    public static final int TabLayout_tabIndicatorHeight=10;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#tabInlineLabel}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:tabInlineLabel
     */
    public static final int TabLayout_tabInlineLabel=11;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#tabMaxWidth}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:tabMaxWidth
     */
    public static final int TabLayout_tabMaxWidth=12;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#tabMinWidth}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:tabMinWidth
     */
    public static final int TabLayout_tabMinWidth=13;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#tabMode}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fixed</td><td>1</td><td></td></tr>
     * <tr><td>scrollable</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:tabMode
     */
    public static final int TabLayout_tabMode=14;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#tabPadding}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:tabPadding
     */
    public static final int TabLayout_tabPadding=15;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#tabPaddingBottom}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:tabPaddingBottom
     */
    public static final int TabLayout_tabPaddingBottom=16;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#tabPaddingEnd}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:tabPaddingEnd
     */
    public static final int TabLayout_tabPaddingEnd=17;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#tabPaddingStart}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:tabPaddingStart
     */
    public static final int TabLayout_tabPaddingStart=18;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#tabPaddingTop}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:tabPaddingTop
     */
    public static final int TabLayout_tabPaddingTop=19;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#tabRippleColor}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:tabRippleColor
     */
    public static final int TabLayout_tabRippleColor=20;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#tabSelectedTextColor}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:tabSelectedTextColor
     */
    public static final int TabLayout_tabSelectedTextColor=21;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#tabTextAppearance}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:tabTextAppearance
     */
    public static final int TabLayout_tabTextAppearance=22;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#tabTextColor}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:tabTextColor
     */
    public static final int TabLayout_tabTextColor=23;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#tabUnboundedRipple}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:tabUnboundedRipple
     */
    public static final int TabLayout_tabUnboundedRipple=24;
    /**
     * Attributes that can be used with a TextAppearance.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TextAppearance_android_textSize android:textSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_typeface android:typeface}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textStyle android:textStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColor android:textColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColorHint android:textColorHint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColorLink android:textColorLink}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowColor android:shadowColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowDx android:shadowDx}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowDy android:shadowDy}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowRadius android:shadowRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_fontFamily android:fontFamily}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_fontFamily org.nativescript.playvue:fontFamily}</code></td><td>The attribute for the font family.</td></tr>
     * <tr><td><code>{@link #TextAppearance_textAllCaps org.nativescript.playvue:textAllCaps}</code></td><td>Present the text in ALL CAPS.</td></tr>
     * </table>
     * @see #TextAppearance_android_textSize
     * @see #TextAppearance_android_typeface
     * @see #TextAppearance_android_textStyle
     * @see #TextAppearance_android_textColor
     * @see #TextAppearance_android_textColorHint
     * @see #TextAppearance_android_textColorLink
     * @see #TextAppearance_android_shadowColor
     * @see #TextAppearance_android_shadowDx
     * @see #TextAppearance_android_shadowDy
     * @see #TextAppearance_android_shadowRadius
     * @see #TextAppearance_android_fontFamily
     * @see #TextAppearance_fontFamily
     * @see #TextAppearance_textAllCaps
     */
    public static final int[] TextAppearance={
      0x01010095, 0x01010096, 0x01010097, 0x01010098, 
      0x0101009a, 0x0101009b, 0x01010161, 0x01010162, 
      0x01010163, 0x01010164, 0x010103ac, 0x7f030108, 
      0x7f030228
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textSize}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:textSize
     */
    public static final int TextAppearance_android_textSize=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#typeface}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>monospace</td><td>3</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * <tr><td>sans</td><td>1</td><td></td></tr>
     * <tr><td>serif</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:typeface
     */
    public static final int TextAppearance_android_typeface=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textStyle}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bold</td><td>1</td><td></td></tr>
     * <tr><td>italic</td><td>2</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:textStyle
     */
    public static final int TextAppearance_android_textStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColor}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColor
     */
    public static final int TextAppearance_android_textColor=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColorHint}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorHint
     */
    public static final int TextAppearance_android_textColorHint=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColorLink}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorLink
     */
    public static final int TextAppearance_android_textColorLink=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowColor}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:shadowColor
     */
    public static final int TextAppearance_android_shadowColor=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowDx}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowDx
     */
    public static final int TextAppearance_android_shadowDx=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowDy}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowDy
     */
    public static final int TextAppearance_android_shadowDy=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowRadius}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowRadius
     */
    public static final int TextAppearance_android_shadowRadius=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontFamily}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fontFamily
     */
    public static final int TextAppearance_android_fontFamily=10;
    /**
     * <p>
     * @attr description
     * The attribute for the font family.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:fontFamily
     */
    public static final int TextAppearance_fontFamily=11;
    /**
     * <p>
     * @attr description
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:textAllCaps
     */
    public static final int TextAppearance_textAllCaps=12;
    /**
     * Attributes that can be used with a TextInputLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TextInputLayout_android_textColorHint android:textColorHint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_android_hint android:hint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxBackgroundColor org.nativescript.playvue:boxBackgroundColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxBackgroundMode org.nativescript.playvue:boxBackgroundMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCollapsedPaddingTop org.nativescript.playvue:boxCollapsedPaddingTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCornerRadiusBottomEnd org.nativescript.playvue:boxCornerRadiusBottomEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCornerRadiusBottomStart org.nativescript.playvue:boxCornerRadiusBottomStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCornerRadiusTopEnd org.nativescript.playvue:boxCornerRadiusTopEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCornerRadiusTopStart org.nativescript.playvue:boxCornerRadiusTopStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxStrokeColor org.nativescript.playvue:boxStrokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxStrokeWidth org.nativescript.playvue:boxStrokeWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterEnabled org.nativescript.playvue:counterEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterMaxLength org.nativescript.playvue:counterMaxLength}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterOverflowTextAppearance org.nativescript.playvue:counterOverflowTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterTextAppearance org.nativescript.playvue:counterTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorEnabled org.nativescript.playvue:errorEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorTextAppearance org.nativescript.playvue:errorTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_helperText org.nativescript.playvue:helperText}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_helperTextEnabled org.nativescript.playvue:helperTextEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_helperTextTextAppearance org.nativescript.playvue:helperTextTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_hintAnimationEnabled org.nativescript.playvue:hintAnimationEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_hintEnabled org.nativescript.playvue:hintEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_hintTextAppearance org.nativescript.playvue:hintTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleContentDescription org.nativescript.playvue:passwordToggleContentDescription}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleDrawable org.nativescript.playvue:passwordToggleDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleEnabled org.nativescript.playvue:passwordToggleEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleTint org.nativescript.playvue:passwordToggleTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleTintMode org.nativescript.playvue:passwordToggleTintMode}</code></td><td></td></tr>
     * </table>
     * @see #TextInputLayout_android_textColorHint
     * @see #TextInputLayout_android_hint
     * @see #TextInputLayout_boxBackgroundColor
     * @see #TextInputLayout_boxBackgroundMode
     * @see #TextInputLayout_boxCollapsedPaddingTop
     * @see #TextInputLayout_boxCornerRadiusBottomEnd
     * @see #TextInputLayout_boxCornerRadiusBottomStart
     * @see #TextInputLayout_boxCornerRadiusTopEnd
     * @see #TextInputLayout_boxCornerRadiusTopStart
     * @see #TextInputLayout_boxStrokeColor
     * @see #TextInputLayout_boxStrokeWidth
     * @see #TextInputLayout_counterEnabled
     * @see #TextInputLayout_counterMaxLength
     * @see #TextInputLayout_counterOverflowTextAppearance
     * @see #TextInputLayout_counterTextAppearance
     * @see #TextInputLayout_errorEnabled
     * @see #TextInputLayout_errorTextAppearance
     * @see #TextInputLayout_helperText
     * @see #TextInputLayout_helperTextEnabled
     * @see #TextInputLayout_helperTextTextAppearance
     * @see #TextInputLayout_hintAnimationEnabled
     * @see #TextInputLayout_hintEnabled
     * @see #TextInputLayout_hintTextAppearance
     * @see #TextInputLayout_passwordToggleContentDescription
     * @see #TextInputLayout_passwordToggleDrawable
     * @see #TextInputLayout_passwordToggleEnabled
     * @see #TextInputLayout_passwordToggleTint
     * @see #TextInputLayout_passwordToggleTintMode
     */
    public static final int[] TextInputLayout={
      0x0101009a, 0x01010150, 0x7f030062, 0x7f030063, 
      0x7f030064, 0x7f030065, 0x7f030066, 0x7f030067, 
      0x7f030068, 0x7f030069, 0x7f03006a, 0x7f0300ce, 
      0x7f0300cf, 0x7f0300d0, 0x7f0300d1, 0x7f0300ea, 
      0x7f0300eb, 0x7f030118, 0x7f030119, 0x7f03011a, 
      0x7f03011e, 0x7f03011f, 0x7f030120, 0x7f0301a2, 
      0x7f0301a3, 0x7f0301a4, 0x7f0301a5, 0x7f0301a6
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColorHint}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorHint
     */
    public static final int TextInputLayout_android_textColorHint=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#hint}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:hint
     */
    public static final int TextInputLayout_android_hint=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#boxBackgroundColor}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:boxBackgroundColor
     */
    public static final int TextInputLayout_boxBackgroundColor=2;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#boxBackgroundMode}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>filled</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>outline</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:boxBackgroundMode
     */
    public static final int TextInputLayout_boxBackgroundMode=3;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#boxCollapsedPaddingTop}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:boxCollapsedPaddingTop
     */
    public static final int TextInputLayout_boxCollapsedPaddingTop=4;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#boxCornerRadiusBottomEnd}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:boxCornerRadiusBottomEnd
     */
    public static final int TextInputLayout_boxCornerRadiusBottomEnd=5;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#boxCornerRadiusBottomStart}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:boxCornerRadiusBottomStart
     */
    public static final int TextInputLayout_boxCornerRadiusBottomStart=6;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#boxCornerRadiusTopEnd}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:boxCornerRadiusTopEnd
     */
    public static final int TextInputLayout_boxCornerRadiusTopEnd=7;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#boxCornerRadiusTopStart}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:boxCornerRadiusTopStart
     */
    public static final int TextInputLayout_boxCornerRadiusTopStart=8;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#boxStrokeColor}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:boxStrokeColor
     */
    public static final int TextInputLayout_boxStrokeColor=9;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#boxStrokeWidth}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:boxStrokeWidth
     */
    public static final int TextInputLayout_boxStrokeWidth=10;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#counterEnabled}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:counterEnabled
     */
    public static final int TextInputLayout_counterEnabled=11;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#counterMaxLength}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name org.nativescript.playvue:counterMaxLength
     */
    public static final int TextInputLayout_counterMaxLength=12;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#counterOverflowTextAppearance}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:counterOverflowTextAppearance
     */
    public static final int TextInputLayout_counterOverflowTextAppearance=13;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#counterTextAppearance}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:counterTextAppearance
     */
    public static final int TextInputLayout_counterTextAppearance=14;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#errorEnabled}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:errorEnabled
     */
    public static final int TextInputLayout_errorEnabled=15;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#errorTextAppearance}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:errorTextAppearance
     */
    public static final int TextInputLayout_errorTextAppearance=16;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#helperText}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:helperText
     */
    public static final int TextInputLayout_helperText=17;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#helperTextEnabled}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:helperTextEnabled
     */
    public static final int TextInputLayout_helperTextEnabled=18;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#helperTextTextAppearance}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:helperTextTextAppearance
     */
    public static final int TextInputLayout_helperTextTextAppearance=19;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#hintAnimationEnabled}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:hintAnimationEnabled
     */
    public static final int TextInputLayout_hintAnimationEnabled=20;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#hintEnabled}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:hintEnabled
     */
    public static final int TextInputLayout_hintEnabled=21;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#hintTextAppearance}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:hintTextAppearance
     */
    public static final int TextInputLayout_hintTextAppearance=22;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#passwordToggleContentDescription}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:passwordToggleContentDescription
     */
    public static final int TextInputLayout_passwordToggleContentDescription=23;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#passwordToggleDrawable}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:passwordToggleDrawable
     */
    public static final int TextInputLayout_passwordToggleDrawable=24;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#passwordToggleEnabled}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:passwordToggleEnabled
     */
    public static final int TextInputLayout_passwordToggleEnabled=25;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#passwordToggleTint}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:passwordToggleTint
     */
    public static final int TextInputLayout_passwordToggleTint=26;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#passwordToggleTintMode}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td></td></tr>
     * <tr><td>screen</td><td>f</td><td></td></tr>
     * <tr><td>src_atop</td><td>9</td><td></td></tr>
     * <tr><td>src_in</td><td>5</td><td></td></tr>
     * <tr><td>src_over</td><td>3</td><td></td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:passwordToggleTintMode
     */
    public static final int TextInputLayout_passwordToggleTintMode=27;
    /**
     * Attributes that can be used with a ThemeEnforcement.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ThemeEnforcement_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #ThemeEnforcement_enforceMaterialTheme org.nativescript.playvue:enforceMaterialTheme}</code></td><td></td></tr>
     * <tr><td><code>{@link #ThemeEnforcement_enforceTextAppearance org.nativescript.playvue:enforceTextAppearance}</code></td><td></td></tr>
     * </table>
     * @see #ThemeEnforcement_android_textAppearance
     * @see #ThemeEnforcement_enforceMaterialTheme
     * @see #ThemeEnforcement_enforceTextAppearance
     */
    public static final int[] ThemeEnforcement={
      0x01010034, 0x7f0300e8, 0x7f0300e9
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #ThemeEnforcement} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int ThemeEnforcement_android_textAppearance=0;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#enforceMaterialTheme}
     * attribute's value can be found in the {@link #ThemeEnforcement} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:enforceMaterialTheme
     */
    public static final int ThemeEnforcement_enforceMaterialTheme=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#enforceTextAppearance}
     * attribute's value can be found in the {@link #ThemeEnforcement} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name org.nativescript.playvue:enforceTextAppearance
     */
    public static final int ThemeEnforcement_enforceTextAppearance=2;
    /**
     * Attributes that can be used with a Toolbar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Toolbar_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_buttonGravity org.nativescript.playvue:buttonGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_collapseContentDescription org.nativescript.playvue:collapseContentDescription}</code></td><td>Text to set as the content description for the collapse button.</td></tr>
     * <tr><td><code>{@link #Toolbar_collapseIcon org.nativescript.playvue:collapseIcon}</code></td><td>Icon drawable to use for the collapse button.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetEnd org.nativescript.playvue:contentInsetEnd}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetEndWithActions org.nativescript.playvue:contentInsetEndWithActions}</code></td><td>Minimum inset for content views within a bar when actions from a menu
     * are present.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetLeft org.nativescript.playvue:contentInsetLeft}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetRight org.nativescript.playvue:contentInsetRight}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetStart org.nativescript.playvue:contentInsetStart}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetStartWithNavigation org.nativescript.playvue:contentInsetStartWithNavigation}</code></td><td>Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button.</td></tr>
     * <tr><td><code>{@link #Toolbar_logo org.nativescript.playvue:logo}</code></td><td>Specifies the drawable used for the application logo.</td></tr>
     * <tr><td><code>{@link #Toolbar_logoDescription org.nativescript.playvue:logoDescription}</code></td><td>A content description string to describe the appearance of the
     * associated logo image.</td></tr>
     * <tr><td><code>{@link #Toolbar_maxButtonHeight org.nativescript.playvue:maxButtonHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_navigationContentDescription org.nativescript.playvue:navigationContentDescription}</code></td><td>Text to set as the content description for the navigation button
     * located at the start of the toolbar.</td></tr>
     * <tr><td><code>{@link #Toolbar_navigationIcon org.nativescript.playvue:navigationIcon}</code></td><td>Icon drawable to use for the navigation button located at
     * the start of the toolbar.</td></tr>
     * <tr><td><code>{@link #Toolbar_popupTheme org.nativescript.playvue:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_subtitle org.nativescript.playvue:subtitle}</code></td><td>Specifies subtitle text used for navigationMode="normal"</td></tr>
     * <tr><td><code>{@link #Toolbar_subtitleTextAppearance org.nativescript.playvue:subtitleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_subtitleTextColor org.nativescript.playvue:subtitleTextColor}</code></td><td>A color to apply to the subtitle string.</td></tr>
     * <tr><td><code>{@link #Toolbar_title org.nativescript.playvue:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleMargin org.nativescript.playvue:titleMargin}</code></td><td>Specifies extra space on the left, start, right and end sides
     * of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginBottom org.nativescript.playvue:titleMarginBottom}</code></td><td>Specifies extra space on the bottom side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginEnd org.nativescript.playvue:titleMarginEnd}</code></td><td>Specifies extra space on the end side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginStart org.nativescript.playvue:titleMarginStart}</code></td><td>Specifies extra space on the start side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginTop org.nativescript.playvue:titleMarginTop}</code></td><td>Specifies extra space on the top side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMargins org.nativescript.playvue:titleMargins}</code></td><td>{@deprecated Use titleMargin}</td></tr>
     * <tr><td><code>{@link #Toolbar_titleTextAppearance org.nativescript.playvue:titleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleTextColor org.nativescript.playvue:titleTextColor}</code></td><td>A color to apply to the title string.</td></tr>
     * </table>
     * @see #Toolbar_android_gravity
     * @see #Toolbar_android_minHeight
     * @see #Toolbar_buttonGravity
     * @see #Toolbar_collapseContentDescription
     * @see #Toolbar_collapseIcon
     * @see #Toolbar_contentInsetEnd
     * @see #Toolbar_contentInsetEndWithActions
     * @see #Toolbar_contentInsetLeft
     * @see #Toolbar_contentInsetRight
     * @see #Toolbar_contentInsetStart
     * @see #Toolbar_contentInsetStartWithNavigation
     * @see #Toolbar_logo
     * @see #Toolbar_logoDescription
     * @see #Toolbar_maxButtonHeight
     * @see #Toolbar_navigationContentDescription
     * @see #Toolbar_navigationIcon
     * @see #Toolbar_popupTheme
     * @see #Toolbar_subtitle
     * @see #Toolbar_subtitleTextAppearance
     * @see #Toolbar_subtitleTextColor
     * @see #Toolbar_title
     * @see #Toolbar_titleMargin
     * @see #Toolbar_titleMarginBottom
     * @see #Toolbar_titleMarginEnd
     * @see #Toolbar_titleMarginStart
     * @see #Toolbar_titleMarginTop
     * @see #Toolbar_titleMargins
     * @see #Toolbar_titleTextAppearance
     * @see #Toolbar_titleTextColor
     */
    @Deprecated
    public static final int[] Toolbar={
      0x010100af, 0x01010140, 0x7f030070, 0x7f0300aa, 
      0x7f0300ab, 0x7f0300bf, 0x7f0300c0, 0x7f0300c1, 
      0x7f0300c2, 0x7f0300c3, 0x7f0300c4, 0x7f030175, 
      0x7f030176, 0x7f030183, 0x7f030191, 0x7f030192, 
      0x7f0301ae, 0x7f030202, 0x7f030204, 0x7f030205, 
      0x7f030251, 0x7f030254, 0x7f030255, 0x7f030256, 
      0x7f030257, 0x7f030258, 0x7f030259, 0x7f03025a, 
      0x7f03025b
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gravity}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static final int Toolbar_android_gravity=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minHeight}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int Toolbar_android_minHeight=1;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#buttonGravity}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:buttonGravity
     */
    public static final int Toolbar_buttonGravity=2;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the collapse button.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:collapseContentDescription
     */
    public static final int Toolbar_collapseContentDescription=3;
    /**
     * <p>
     * @attr description
     * Icon drawable to use for the collapse button.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:collapseIcon
     */
    public static final int Toolbar_collapseIcon=4;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:contentInsetEnd
     */
    public static final int Toolbar_contentInsetEnd=5;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:contentInsetEndWithActions
     */
    public static final int Toolbar_contentInsetEndWithActions=6;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:contentInsetLeft
     */
    public static final int Toolbar_contentInsetLeft=7;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:contentInsetRight
     */
    public static final int Toolbar_contentInsetRight=8;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:contentInsetStart
     */
    public static final int Toolbar_contentInsetStart=9;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:contentInsetStartWithNavigation
     */
    public static final int Toolbar_contentInsetStartWithNavigation=10;
    /**
     * <p>
     * @attr description
     * Drawable to set as the logo that appears at the starting side of
     * the Toolbar, just after the navigation button.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:logo
     */
    public static final int Toolbar_logo=11;
    /**
     * <p>
     * @attr description
     * A content description string to describe the appearance of the
     * associated logo image.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:logoDescription
     */
    public static final int Toolbar_logoDescription=12;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#maxButtonHeight}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:maxButtonHeight
     */
    public static final int Toolbar_maxButtonHeight=13;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the navigation button
     * located at the start of the toolbar.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:navigationContentDescription
     */
    public static final int Toolbar_navigationContentDescription=14;
    /**
     * <p>
     * @attr description
     * Icon drawable to use for the navigation button located at
     * the start of the toolbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:navigationIcon
     */
    public static final int Toolbar_navigationIcon=15;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the toolbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:popupTheme
     */
    public static final int Toolbar_popupTheme=16;
    /**
     * <p>
     * @attr description
     * Specifies subtitle text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:subtitle
     */
    public static final int Toolbar_subtitle=17;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#subtitleTextAppearance}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:subtitleTextAppearance
     */
    public static final int Toolbar_subtitleTextAppearance=18;
    /**
     * <p>
     * @attr description
     * A color to apply to the subtitle string.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:subtitleTextColor
     */
    public static final int Toolbar_subtitleTextColor=19;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#title}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name org.nativescript.playvue:title
     */
    public static final int Toolbar_title=20;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the left, start, right and end sides
     * of the toolbar's title. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:titleMargin
     */
    public static final int Toolbar_titleMargin=21;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the bottom side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:titleMarginBottom
     */
    public static final int Toolbar_titleMarginBottom=22;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the end side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:titleMarginEnd
     */
    public static final int Toolbar_titleMarginEnd=23;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the start side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:titleMarginStart
     */
    public static final int Toolbar_titleMarginStart=24;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the top side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:titleMarginTop
     */
    public static final int Toolbar_titleMarginTop=25;
    /**
     * <p>
     * @attr description
     * {@deprecated Use titleMargin}
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:titleMargins
     */
    @Deprecated
    public static final int Toolbar_titleMargins=26;
    /**
     * <p>This symbol is the offset where the {@link org.nativescript.playvue.R.attr#titleTextAppearance}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:titleTextAppearance
     */
    public static final int Toolbar_titleTextAppearance=27;
    /**
     * <p>
     * @attr description
     * A color to apply to the title string.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:titleTextColor
     */
    public static final int Toolbar_titleTextColor=28;
    /**
     * Attributes that can be used with a View.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #View_android_theme android:theme}</code></td><td></td></tr>
     * <tr><td><code>{@link #View_android_focusable android:focusable}</code></td><td></td></tr>
     * <tr><td><code>{@link #View_paddingEnd org.nativescript.playvue:paddingEnd}</code></td><td>Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.</td></tr>
     * <tr><td><code>{@link #View_paddingStart org.nativescript.playvue:paddingStart}</code></td><td>Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.</td></tr>
     * <tr><td><code>{@link #View_theme org.nativescript.playvue:theme}</code></td><td>Deprecated.</td></tr>
     * </table>
     * @see #View_android_theme
     * @see #View_android_focusable
     * @see #View_paddingEnd
     * @see #View_paddingStart
     * @see #View_theme
     */
    public static final int[] View={
      0x01010000, 0x010100da, 0x7f03019a, 0x7f03019b, 
      0x7f030243
    };
    /**
     * <p>
     * @attr description
     * Specifies a theme override for a view. When a theme override is set, the
     * view will be inflated using a {@link android.content.Context} themed with
     * the specified resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:theme
     */
    public static final int View_android_theme=0;
    /**
     * <p>
     * @attr description
     * Boolean that controls whether a view can take focus.  By default the user can not
     * move focus to a view; by setting this attribute to true the view is
     * allowed to take focus.  This value does not impact the behavior of
     * directly calling {@link android.view.View#requestFocus}, which will
     * always request focus regardless of this view.  It only impacts where
     * focus navigation will try to move focus.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>10</td><td></td></tr>
     * </table>
     *
     * @attr name android:focusable
     */
    public static final int View_android_focusable=1;
    /**
     * <p>
     * @attr description
     * Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:paddingEnd
     */
    public static final int View_paddingEnd=2;
    /**
     * <p>
     * @attr description
     * Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name org.nativescript.playvue:paddingStart
     */
    public static final int View_paddingStart=3;
    /**
     * <p>
     * @attr description
     * Deprecated.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name org.nativescript.playvue:theme
     */
    public static final int View_theme=4;
    /**
     * Attributes that can be used with a ViewBackgroundHelper.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_backgroundTint org.nativescript.playvue:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_backgroundTintMode org.nativescript.playvue:backgroundTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * </table>
     * @see #ViewBackgroundHelper_android_background
     * @see #ViewBackgroundHelper_backgroundTint
     * @see #ViewBackgroundHelper_backgroundTintMode
     */
    public static final int[] ViewBackgroundHelper={
      0x010100d4, 0x7f030052, 0x7f030053
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #ViewBackgroundHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int ViewBackgroundHelper_android_background=0;
    /**
     * <p>
     * @attr description
     * Tint to apply to the background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name org.nativescript.playvue:backgroundTint
     */
    public static final int ViewBackgroundHelper_backgroundTint=1;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name org.nativescript.playvue:backgroundTintMode
     */
    public static final int ViewBackgroundHelper_backgroundTintMode=2;
    /**
     * Attributes that can be used with a ViewStubCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_inflatedId android:inflatedId}</code></td><td></td></tr>
     * </table>
     * @see #ViewStubCompat_android_id
     * @see #ViewStubCompat_android_layout
     * @see #ViewStubCompat_android_inflatedId
     */
    public static final int[] ViewStubCompat={
      0x010100d0, 0x010100f2, 0x010100f3
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #ViewStubCompat} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int ViewStubCompat_android_id=0;
    /**
     * <p>
     * @attr description
     * Supply an identifier for the layout resource to inflate when the ViewStub
     * becomes visible or when forced to do so. The layout resource must be a
     * valid reference to a layout.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int ViewStubCompat_android_layout=1;
    /**
     * <p>
     * @attr description
     * Overrides the id of the inflated View with this value.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:inflatedId
     */
    public static final int ViewStubCompat_android_inflatedId=2;
  }
  public static final class xml {
    public static final int chart_palettes_dark_selected=0x7f0f0000;
    public static final int chart_palettes_default_dark=0x7f0f0001;
    public static final int chart_palettes_default_light=0x7f0f0002;
    public static final int chart_palettes_light_selected=0x7f0f0003;
    public static final int provider_paths=0x7f0f0004;
  }
}